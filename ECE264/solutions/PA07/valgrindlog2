==8160== Memcheck, a memory error detector
==8160== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==8160== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==8160== Command: ./pa07 inputs/input10_A inputs/input10_B
==8160== Parent PID: 8153
==8160== 
--8160-- 
--8160-- Valgrind options:
--8160--    --tool=memcheck
--8160--    --leak-check=full
--8160--    --verbose
--8160--    --log-file=valgrindlog2
--8160-- Contents of /proc/version:
--8160--   Linux version 2.6.32-358.23.2.el6.x86_64 (mockbuild@x86-022.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-3) (GCC) ) #1 SMP Sat Sep 14 05:32:37 EDT 2013
--8160-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--8160-- Page sizes: currently 4096, max supported 4096
--8160-- Valgrind library directory: /usr/lib64/valgrind
--8160-- Reading syms from /home/shay/a/kalita/ECE264/solutions/Assignments264/PA07/pa07
--8160-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--8160--    object doesn't have a dynamic symbol table
--8160-- Reading syms from /lib64/ld-2.12.so
--8160-- Scheduler: using generic scheduler lock implementation.
--8160-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==8160== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-8160-by-kalita-on-ecelinux25.ecn.purdue.edu
==8160== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-8160-by-kalita-on-ecelinux25.ecn.purdue.edu
==8160== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-8160-by-kalita-on-ecelinux25.ecn.purdue.edu
==8160== 
==8160== TO CONTROL THIS PROCESS USING vgdb (which you probably
==8160== don't want to do, unless you know exactly what you're doing,
==8160== or are doing some strange experiment):
==8160==   /usr/lib64/valgrind/../../bin/vgdb --pid=8160 ...command...
==8160== 
==8160== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==8160==   /path/to/gdb ./pa07
==8160== and then give GDB the following command
==8160==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=8160
==8160== --pid is optional if only one valgrind process is running
==8160== 
--8160-- REDIR: 0x3e09617520 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--8160-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--8160-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--8160-- REDIR: 0x3e09617390 (index) redirected to 0x4a07bf0 (index)
--8160-- REDIR: 0x3e09617410 (strcmp) redirected to 0x4a08530 (strcmp)
--8160-- Reading syms from /lib64/libc-2.12.so
--8160-- REDIR: 0x3e09a84ec0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--8160-- REDIR: 0x3e09a87180 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--8160-- REDIR: 0x3e09a82e30 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--8160-- REDIR: 0x3e09a7a8e0 (malloc) redirected to 0x4a0696c (malloc)
--8160-- REDIR: 0x3e09a7b710 (free) redirected to 0x4a06369 (free)
--8160-- REDIR: 0x3e09a81350 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--8160-- REDIR: 0x3e09a846f0 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--8160-- REDIR: 0x3e09a8ace0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
==8160== 
==8160== HEAP SUMMARY:
==8160==     in use at exit: 0 bytes in 0 blocks
==8160==   total heap usage: 89 allocs, 89 frees, 2,704 bytes allocated
==8160== 
==8160== All heap blocks were freed -- no leaks are possible
==8160== 
==8160== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
--8160-- 
--8160-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--8160-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==8160== 
==8160== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
