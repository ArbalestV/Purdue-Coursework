 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 269
    4                      ; Text size: 4764
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c68616e	
   85  0000302c  646c655f	
   85  00003030  746f5f70	
   85  00003034  6167655f	
   85  00003038  6d617070	
   85  0000303c  65645f73	
   85  00003040  656d6170	
   85  00003044  686f7265	
   85  00003048  3e0a00  	
   86  0000304b          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   88  00003050  64206e6f	
   88  00003054  74206d61	
   88  00003058  70207468	
   88  0000305c  65207669	
   88  00003060  72747561	
   88  00003064  6c206164	
   88  00003068  64726573	
   88  0000306c  7320746f	
   88  00003070  20746865	
   88  00003074  206d656d	
   88  00003078  6f727920	
   88  0000307c  696e2000	
   89  00003080          	.align 2
   90  00003080          	LC3_LF0:
   91  00003080  2c206578	.ascii ", exiting...\n\000"
   91  00003084  6974696e	
   91  00003088  672e2e2e	
   91  0000308c  0a00    	
   92  0000308e          	.align 2
   93  00003090          	LC4_LF0:
   94  00003090  436f6e73	.ascii "Consumer %d removed: %c\n\000"
   94  00003094  756d6572	
   94  00003098  20256420	
   94  0000309c  72656d6f	
   94  000030a0  7665643a	
   94  000030a4  2025630a	
   94  000030a8  00      	
   95  000030a9          	.align 2
   96  000030ac          	LC5_LF0:
   97  000030ac  0a4c4f43	.ascii "\nLOCK IS NOT GETTING RELEASED IN THE MIDDLE OF A CONS.\000"
   97  000030b0  4b204953	
   97  000030b4  204e4f54	
   97  000030b8  20474554	
   97  000030bc  54494e47	
   97  000030c0  2052454c	
   97  000030c4  45415345	
   97  000030c8  4420494e	
   97  000030cc  20544845	
   97  000030d0  204d4944	
   97  000030d4  444c4520	
   97  000030d8  4f462041	
   97  000030dc  20434f4e	
   97  000030e0  532e00  	
   98  000030e3          	.align 2
   99  000030e4          	LC6_LF0:
  100  000030e4  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  100  000030e8  73656d61	
  100  000030ec  70686f72	
  100  000030f0  6520735f	
  100  000030f4  70726f63	
  100  000030f8  735f636f	
  100  000030fc  6d706c65	
  100  00003100  74656420	
  100  00003104  28256429	
  100  00003108  20696e20	
  100  0000310c  00      	
  101  0000310d          	.text
  102  000010d4          	.align 2
  103  000010d4          	.proc _main
  104  000010d4          	.global _main
  105  000010d4          	_main:
  106                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  107  000010d4  afbefffc	sw	-4(r29),r30; push fp
  108  000010d8  001df020	add	r30,r0,r29; fp = sp
  109  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  110  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  111  000010e4  8fc20000	lw	r2,(r30)
  112  000010e8  8fc80004	lw	r8,4(r30)
  113  000010ec  0c0011a4	jal	___main
  114  000010f0  54000000	nop; not filled.
  115  000010f4  20060000	addi	r6,r0,#0
  116  000010f8  64410006	snei	r1,r2,#6
  117  000010fc  1020004c	beqz	r1,L14_LF0
  118  00001100  54000000	nop; not filled.
  119  00001104  23bdfff8	addi	r29,r29,#-8
  120  00001108  3c0d0000	lhi	r13,((LC0_LF0)>>16)&0xffff
  121  0000110c  25ad3000	addui	r13,r13,(LC0_LF0)&0xffff
  122  00001110  afad0000	sw	(r29),r13
  123  00001114  0c000374	jal	_Printf
  124  00001118  54000000	nop; not filled.
  125  0000111c  8d0d0000	lw	r13,(r8)
  126  00001120  afad0000	sw	(r29),r13
  127  00001124  0c000364	jal	_Printf
  128  00001128  54000000	nop; not filled.
  129  0000112c  3c0d0000	lhi	r13,((LC1_LF0)>>16)&0xffff
  130  00001130  25ad3008	addui	r13,r13,(LC1_LF0)&0xffff
  131  00001134  afad0000	sw	(r29),r13
  132  00001138  0c000350	jal	_Printf
  133  0000113c  54000000	nop; not filled.
  134  00001140  0c0003fc	jal	_Exit
  135  00001144  54000000	nop; not filled.
  136  00001148  23bd0008	addi	r29,r29,#8
  137  0000114c          	L14_LF0:
  138  0000114c  23bdfff0	addi	r29,r29,#-16
  139  00001150  8d0d0004	lw	r13,4(r8)
  140  00001154  afad0000	sw	(r29),r13
  141  00001158  200d0000	addi	r13,r0,#0
  142  0000115c  afad0004	sw	4(r29),r13
  143  00001160  200d000a	addi	r13,r0,#10
  144  00001164  afad0008	sw	8(r29),r13
  145  00001168  0c000c80	jal	_dstrtol
  146  0000116c  54000000	nop; not filled.
  147  00001170  00011020	add	r2,r0,r1
  148  00001174  8d0d0008	lw	r13,8(r8)
  149  00001178  afad0000	sw	(r29),r13
  150  0000117c  200d0000	addi	r13,r0,#0
  151  00001180  afad0004	sw	4(r29),r13
  152  00001184  200d000a	addi	r13,r0,#10
  153  00001188  afad0008	sw	8(r29),r13
  154  0000118c  0c000c5c	jal	_dstrtol
  155  00001190  54000000	nop; not filled.
  156  00001194  00016020	add	r12,r0,r1
  157  00001198  8d0d000c	lw	r13,12(r8)
  158  0000119c  afad0000	sw	(r29),r13
  159  000011a0  200d0000	addi	r13,r0,#0
  160  000011a4  afad0004	sw	4(r29),r13
  161  000011a8  200d000a	addi	r13,r0,#10
  162  000011ac  afad0008	sw	8(r29),r13
  163  000011b0  0c000c38	jal	_dstrtol
  164  000011b4  54000000	nop; not filled.
  165  000011b8  00013820	add	r7,r0,r1
  166  000011bc  8d0d0010	lw	r13,16(r8)
  167  000011c0  afad0000	sw	(r29),r13
  168  000011c4  200d0000	addi	r13,r0,#0
  169  000011c8  afad0004	sw	4(r29),r13
  170  000011cc  200d000a	addi	r13,r0,#10
  171  000011d0  afad0008	sw	8(r29),r13
  172  000011d4  0c000c14	jal	_dstrtol
  173  000011d8  54000000	nop; not filled.
  174  000011dc  00015820	add	r11,r0,r1
  175  000011e0  8d0d0014	lw	r13,20(r8)
  176  000011e4  afad0000	sw	(r29),r13
  177  000011e8  200d0000	addi	r13,r0,#0
  178  000011ec  afad0004	sw	4(r29),r13
  179  000011f0  200d000a	addi	r13,r0,#10
  180  000011f4  afad0008	sw	8(r29),r13
  181  000011f8  0c000bf0	jal	_dstrtol
  182  000011fc  54000000	nop; not filled.
  183  00001200  00015020	add	r10,r0,r1
  184  00001204  afa20000	sw	(r29),r2
  185  00001208  0c0002b0	jal	_shmat
  186  0000120c  54000000	nop; not filled.
  187  00001210  00012020	add	r4,r0,r1
  188  00001214  23bd0010	addi	r29,r29,#16
  189  00001218  64810000	snei	r1,r4,#0
  190  0000121c  1420004c	bnez	r1,L15_LF0
  191  00001220  54000000	nop; not filled.
  192  00001224  23bdfff8	addi	r29,r29,#-8
  193  00001228  3c0d0000	lhi	r13,((LC2_LF0)>>16)&0xffff
  194  0000122c  25ad304c	addui	r13,r13,(LC2_LF0)&0xffff
  195  00001230  afad0000	sw	(r29),r13
  196  00001234  0c000254	jal	_Printf
  197  00001238  54000000	nop; not filled.
  198  0000123c  8d0d0000	lw	r13,(r8)
  199  00001240  afad0000	sw	(r29),r13
  200  00001244  0c000244	jal	_Printf
  201  00001248  54000000	nop; not filled.
  202  0000124c  3c0d0000	lhi	r13,((LC3_LF0)>>16)&0xffff
  203  00001250  25ad3080	addui	r13,r13,(LC3_LF0)&0xffff
  204  00001254  afad0000	sw	(r29),r13
  205  00001258  0c000230	jal	_Printf
  206  0000125c  54000000	nop; not filled.
  207  00001260  0c0002dc	jal	_Exit
  208  00001264  54000000	nop; not filled.
  209  00001268  23bd0008	addi	r29,r29,#8
  210  0000126c          	L15_LF0:
  211  0000126c  20090005	addi	r9,r0,#5
  212  00001270          	L18_LF0:
  213  00001270  20050000	addi	r5,r0,#0
  214  00001274  23bdfff8	addi	r29,r29,#-8
  215  00001278  afa70000	sw	(r29),r7
  216  0000127c  0c000278	jal	_lock_acquire
  217  00001280  54000000	nop; not filled.
  218  00001284  23bd0008	addi	r29,r29,#8
  219  00001288  6421ffff	snei	r1,r1,#-1
  220  0000128c  10200134	beqz	r1,L16_LF0
  221  00001290  54000000	nop; not filled.
  222  00001294  8c810000	lw	r1,(r4)
  223  00001298  8c820004	lw	r2,4(r4)
  224  0000129c  00220828	seq	r1,r1,r2
  225  000012a0  10200018	beqz	r1,L20_LF0
  226  000012a4  54000000	nop; not filled.
  227  000012a8  23bdfff8	addi	r29,r29,#-8
  228  000012ac  afaa0000	sw	(r29),r10
  229  000012b0  0c000268	jal	_cond_wait
  230  000012b4  54000000	nop; not filled.
  231  000012b8  23bd0008	addi	r29,r29,#8
  232  000012bc          	L20_LF0:
  233  000012bc  8c9f0000	lw	r31,(r4)
  234  000012c0  23e30001	addi	r3,r31,#1
  235  000012c4  00600035	movi2fp	f0,r3
  236  000012c8  01200835	movi2fp	f1,r9
  237  000012cc  0401000f	div	f0,f0,f1
  238  000012d0  00001034	movfp2i	r2,f0
  239  000012d4  50410002	slli	r1,r2,#0x2
  240  000012d8  00220820	add	r1,r1,r2
  241  000012dc  00610822	sub	r1,r3,r1
  242  000012e0  8c820004	lw	r2,4(r4)
  243  000012e4  00220828	seq	r1,r1,r2
  244  000012e8  10200008	beqz	r1,L21_LF0
  245  000012ec  54000000	nop; not filled.
  246  000012f0  20050001	addi	r5,r0,#1
  247  000012f4          	L21_LF0:
  248  000012f4  03e20829	sne	r1,r31,r2
  249  000012f8  1020006c	beqz	r1,L22_LF0
  250  000012fc  54000000	nop; not filled.
  251  00001300  0c000194	jal	_getpid
  252  00001304  54000000	nop; not filled.
  253  00001308  23bdfff0	addi	r29,r29,#-16
  254  0000130c  3c0d0000	lhi	r13,((LC4_LF0)>>16)&0xffff
  255  00001310  25ad3090	addui	r13,r13,(LC4_LF0)&0xffff
  256  00001314  afad0000	sw	(r29),r13
  257  00001318  afa10004	sw	4(r29),r1
  258  0000131c  8c810004	lw	r1,4(r4)
  259  00001320  50210002	slli	r1,r1,#0x2
  260  00001324  00240820	add	r1,r1,r4
  261  00001328  8c210008	lw	r1,8(r1)
  262  0000132c  afa10008	sw	8(r29),r1
  263  00001330  0c000158	jal	_Printf
  264  00001334  54000000	nop; not filled.
  265  00001338  8c810004	lw	r1,4(r4)
  266  0000133c  20230001	addi	r3,r1,#1
  267  00001340  00600035	movi2fp	f0,r3
  268  00001344  01200835	movi2fp	f1,r9
  269  00001348  0401000f	div	f0,f0,f1
  270  0000134c  00001034	movfp2i	r2,f0
  271  00001350  50410002	slli	r1,r2,#0x2
  272  00001354  00220820	add	r1,r1,r2
  273  00001358  00610822	sub	r1,r3,r1
  274  0000135c  ac810004	sw	4(r4),r1
  275  00001360  20c60001	addi	r6,r6,#1
  276  00001364  23bd0010	addi	r29,r29,#16
  277  00001368          	L22_LF0:
  278  00001368  64a10000	snei	r1,r5,#0
  279  0000136c  10200018	beqz	r1,L23_LF0
  280  00001370  54000000	nop; not filled.
  281  00001374  23bdfff8	addi	r29,r29,#-8
  282  00001378  afab0000	sw	(r29),r11
  283  0000137c  0c0001a8	jal	_cond_signal
  284  00001380  54000000	nop; not filled.
  285  00001384  23bd0008	addi	r29,r29,#8
  286  00001388          	L23_LF0:
  287  00001388  23bdfff8	addi	r29,r29,#-8
  288  0000138c  afa70000	sw	(r29),r7
  289  00001390  0c000170	jal	_lock_release
  290  00001394  54000000	nop; not filled.
  291  00001398  23bd0008	addi	r29,r29,#8
  292  0000139c  6021ffff	seqi	r1,r1,#-1
  293  000013a0  10200020	beqz	r1,L16_LF0
  294  000013a4  54000000	nop; not filled.
  295  000013a8  23bdfff8	addi	r29,r29,#-8
  296  000013ac  3c0d0000	lhi	r13,((LC5_LF0)>>16)&0xffff
  297  000013b0  25ad30ac	addui	r13,r13,(LC5_LF0)&0xffff
  298  000013b4  afad0000	sw	(r29),r13
  299  000013b8  0c0000d0	jal	_Printf
  300  000013bc  54000000	nop; not filled.
  301  000013c0  23bd0008	addi	r29,r29,#8
  302  000013c4          	L16_LF0:
  303  000013c4  70c1000a	slei	r1,r6,#10
  304  000013c8  1420fea4	bnez	r1,L18_LF0
  305  000013cc  54000000	nop; not filled.
  306  000013d0  23bdfff8	addi	r29,r29,#-8
  307  000013d4  afac0000	sw	(r29),r12
  308  000013d8  0c000104	jal	_sem_signal
  309  000013dc  54000000	nop; not filled.
  310  000013e0  23bd0008	addi	r29,r29,#8
  311  000013e4  64210001	snei	r1,r1,#1
  312  000013e8  10200050	beqz	r1,L26_LF0
  313  000013ec  54000000	nop; not filled.
  314  000013f0  23bdfff8	addi	r29,r29,#-8
  315  000013f4  3c0d0000	lhi	r13,((LC6_LF0)>>16)&0xffff
  316  000013f8  25ad30e4	addui	r13,r13,(LC6_LF0)&0xffff
  317  000013fc  afad0000	sw	(r29),r13
  318  00001400  afac0004	sw	4(r29),r12
  319  00001404  0c000084	jal	_Printf
  320  00001408  54000000	nop; not filled.
  321  0000140c  8d080000	lw	r8,(r8)
  322  00001410  afa80000	sw	(r29),r8
  323  00001414  0c000074	jal	_Printf
  324  00001418  54000000	nop; not filled.
  325  0000141c  3c0d0000	lhi	r13,((LC3_LF0)>>16)&0xffff
  326  00001420  25ad3080	addui	r13,r13,(LC3_LF0)&0xffff
  327  00001424  afad0000	sw	(r29),r13
  328  00001428  0c000060	jal	_Printf
  329  0000142c  54000000	nop; not filled.
  330  00001430  0c00010c	jal	_Exit
  331  00001434  54000000	nop; not filled.
  332  00001438  23bd0008	addi	r29,r29,#8
  333  0000143c          	L26_LF0:
  334  0000143c  0c000e48	jal	_exit
  335  00001440  54000000	nop
  336  00001444          	.endproc _main
  337                      ;;;
  338                      ;;; Stub functions for DLX traps.
  339                      ;;;
  340                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  341                      ;;;
  342                      ;;; The traps such as Open and Close
  343                      ;;; (note the capital letters) are for use by user programs.  The traps
  344                      ;;; with names such as open and close (lower case) are for use by the OS.
  345                      ;;;
  348  00001444          	.align 2
  350                      ;;; The following are the traps to be used by user-level programs
  351                      ;;;
  353  00001444          	.align 2
  354  00001444          	.proc _Open
  355  00001444          	.global _Open
  356  00001444          	_Open:
  357                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  358                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  359                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  360  00001444  44000213	trap	#0x213
  361  00001448  4be00000	jr	r31
  362  0000144c  54000000	nop
  363  00001450          	.endproc _Open
  365  00001450          	.proc _Close
  366  00001450          	.global _Close
  367  00001450          	_Close:
  368  00001450  44000214	trap	#0x214
  369  00001454  4be00000	jr	r31
  370  00001458  54000000	nop
  371  0000145c          	.endproc _Close
  373  0000145c          	.proc _Read
  374  0000145c          	.global _Read
  375  0000145c          	_Read:
  376  0000145c  44000210	trap	#0x210
  377  00001460  4be00000	jr	r31
  378  00001464  54000000	nop
  379  00001468          	.endproc _Read
  381  00001468          	.proc _Write
  382  00001468          	.global _Write
  383  00001468          	_Write:
  384  00001468  44000211	trap	#0x211
  385  0000146c  4be00000	jr	r31
  386  00001470  54000000	nop
  387  00001474          	.endproc _Write
  389  00001474          	.proc _Lseek
  390  00001474          	.global _Lseek
  391  00001474          	_Lseek:
  392  00001474  44000212	trap	#0x212
  393  00001478  4be00000	jr	r31
  394  0000147c  54000000	nop
  395  00001480          	.endproc _Lseek
  397  00001480          	.proc _Putchar
  398  00001480          	.global _Putchar
  399  00001480          	_Putchar:
  400  00001480  44000280	trap	#0x280
  401  00001484  4be00000	jr	r31
  402  00001488  54000000	nop
  403  0000148c          	.endproc _Putchar
  405  0000148c          	.proc _Printf
  406  0000148c          	.global _Printf
  407  0000148c          	_Printf:
  408  0000148c  44000201	trap	#0x201
  409  00001490  4be00000	jr	r31
  410  00001494  54000000	nop
  411  00001498          	.endproc _Printf
  413  00001498          	.proc _getpid
  414  00001498          	.global _getpid
  415  00001498          	_getpid:
  416  00001498  44000431	trap	#0x431
  417  0000149c  4be00000	jr	r31
  418  000014a0  54000000	nop
  419  000014a4          	.endproc _getpid
  421  000014a4          	.proc _process_create
  422  000014a4          	.global _process_create
  423  000014a4          	_process_create:
  424  000014a4  44000432	trap	#0x432
  425  000014a8  4be00000	jr	r31
  426  000014ac  54000000	nop
  427  000014b0          	.endproc _process_create
  429  000014b0          	.proc _shmget
  430  000014b0          	.global _shmget
  431  000014b0          	_shmget:
  432  000014b0  44000440	trap	#0x440
  433  000014b4  4be00000	jr	r31
  434  000014b8  54000000	nop
  435  000014bc          	.endproc _shmget
  437  000014bc          	.proc _shmat
  438  000014bc          	.global _shmat
  439  000014bc          	_shmat:
  440  000014bc  44000441	trap	#0x441
  441  000014c0  4be00000	jr	r31
  442  000014c4  54000000	nop
  443  000014c8          	.endproc _shmat
  445  000014c8          	.proc _sem_create
  446  000014c8          	.global _sem_create
  447  000014c8          	_sem_create:
  448  000014c8  44000450	trap	#0x450
  449  000014cc  4be00000	jr	r31
  450  000014d0  54000000	nop
  451  000014d4          	.endproc _sem_create
  453  000014d4          	.proc _sem_wait
  454  000014d4          	.global _sem_wait
  455  000014d4          	_sem_wait:
  456  000014d4  44000451	trap	#0x451
  457  000014d8  4be00000	jr	r31
  458  000014dc  54000000	nop
  459  000014e0          	.endproc _sem_wait
  461  000014e0          	.proc _sem_signal
  462  000014e0          	.global _sem_signal
  463  000014e0          	_sem_signal:
  464  000014e0  44000452	trap	#0x452
  465  000014e4  4be00000	jr	r31
  466  000014e8  54000000	nop
  467  000014ec          	.endproc _sem_signal
  469  000014ec          	.proc _lock_create
  470  000014ec          	.global _lock_create
  471  000014ec          	_lock_create:
  472  000014ec  44000453	trap	#0x453
  473  000014f0  4be00000	jr	r31
  474  000014f4  54000000	nop
  475  000014f8          	.endproc _lock_create
  477  000014f8          	.proc _lock_acquire
  478  000014f8          	.global _lock_acquire
  479  000014f8          	_lock_acquire:
  480  000014f8  44000454	trap	#0x454
  481  000014fc  4be00000	jr	r31
  482  00001500  54000000	nop
  483  00001504          	.endproc _lock_acquire
  485  00001504          	.proc _lock_release
  486  00001504          	.global _lock_release
  487  00001504          	_lock_release:
  488  00001504  44000455	trap	#0x455
  489  00001508  4be00000	jr	r31
  490  0000150c  54000000	nop
  491  00001510          	.endproc _lock_release
  493  00001510          	.proc _cond_create
  494  00001510          	.global _cond_create
  495  00001510          	_cond_create:
  496  00001510  44000456	trap	#0x456
  497  00001514  4be00000	jr	r31
  498  00001518  54000000	nop
  499  0000151c          	.endproc _cond_create
  501  0000151c          	.proc _cond_wait
  502  0000151c          	.global _cond_wait
  503  0000151c          	_cond_wait:
  504  0000151c  44000457	trap	#0x457
  505  00001520  4be00000	jr	r31
  506  00001524  54000000	nop
  507  00001528          	.endproc _cond_wait
  509  00001528          	.proc _cond_signal
  510  00001528          	.global _cond_signal
  511  00001528          	_cond_signal:
  512  00001528  44000458	trap	#0x458
  513  0000152c  4be00000	jr	r31
  514  00001530  54000000	nop
  515  00001534          	.endproc _cond_signal
  517  00001534          	.proc _cond_broadcast
  518  00001534          	.global _cond_broadcast
  519  00001534          	_cond_broadcast:
  520  00001534  44000459	trap	#0x459
  521  00001538  4be00000	jr	r31
  522  0000153c  54000000	nop
  523  00001540          	.endproc _cond_broadcast
  525  00001540          	.proc _Exit
  526  00001540          	.global _Exit
  527  00001540          	_Exit:
  528  00001540  44000500	trap	#0x500
  529  00001544  4be00000	jr	r31
  530  00001548  54000000	nop
  531  0000154c          	.endproc _Exit
  532                      ; Compiled by GCC
  534  0000154c          	.align 2
  535  0000154c          	.proc _isspace
  536  0000154c          	.global _isspace
  537  0000154c          	_isspace:
  538                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  539  0000154c  afbefffc	sw	-4(r29),r30; push fp
  540  00001550  001df020	add	r30,r0,r29; fp = sp
  541  00001554  afbffff8	sw	-8(r29),r31; push ret addr
  542  00001558  2fbd0018	subui	r29,r29,#24; alloc local storage
  543  0000155c  afa20000	sw	0(r29),r2
  544  00001560  afa30004	sw	4(r29),r3
  545  00001564  afa40008	sw	8(r29),r4
  546  00001568  83c20003	lb	r2,3(r30)
  547  0000156c  20010000	addi	r1,r0,#0
  548  00001570  304300ff	andi	r3,r2,#0x00ff
  549  00001574  60640020	seqi	r4,r3,#32
  550  00001578  1480002c	bnez	r4,L3_LF2
  551  0000157c  54000000	nop; delay slot nop
  552  00001580  304300ff	andi	r3,r2,#0x00ff
  553  00001584  60640009	seqi	r4,r3,#9
  554  00001588  1480001c	bnez	r4,L3_LF2
  555  0000158c  54000000	nop; delay slot nop
  556  00001590  304300ff	andi	r3,r2,#0x00ff
  557  00001594  6064000a	seqi	r4,r3,#10
  558  00001598  1480000c	bnez	r4,L3_LF2
  559  0000159c  54000000	nop; delay slot nop
  560  000015a0  08000008	j	L2_LF2
  561  000015a4  54000000	nop; delay slot nop
  562  000015a8          	L3_LF2:
  563  000015a8  20010001	addi	r1,r0,#1
  564  000015ac          	L2_LF2:
  565  000015ac  08000004	j	L1_LF2
  566  000015b0  54000000	nop; delay slot nop
  567  000015b4          	L1_LF2:
  568  000015b4  8fa20000	lw	r2,0(r29)
  569  000015b8  8fa30004	lw	r3,4(r29)
  570  000015bc  8fa40008	lw	r4,8(r29)
  571  000015c0  8fdffff8	lw	r31,-8(r30)
  572  000015c4  001ee820	add	r29,r0,r30
  573  000015c8  8fdefffc	lw	r30,-4(r30)
  574  000015cc  4be00000	jr	r31
  575  000015d0  54000000	nop
  576  000015d4          	.endproc _isspace
  577  000015d4          	.align 2
  578  000015d4          	.proc _isxdigit
  579  000015d4          	.global _isxdigit
  580  000015d4          	_isxdigit:
  581                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  582  000015d4  afbefffc	sw	-4(r29),r30; push fp
  583  000015d8  001df020	add	r30,r0,r29; fp = sp
  584  000015dc  afbffff8	sw	-8(r29),r31; push ret addr
  585  000015e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  586  000015e4  afa20000	sw	0(r29),r2
  587  000015e8  afa30004	sw	4(r29),r3
  588  000015ec  afa40008	sw	8(r29),r4
  589  000015f0  83c20003	lb	r2,3(r30)
  590  000015f4  20010000	addi	r1,r0,#0
  591  000015f8  304300ff	andi	r3,r2,#0x00ff
  592  000015fc  6c64002f	sgtui	r4,r3,#47
  593  00001600  1080001c	beqz	r4,L7_LF2
  594  00001604  54000000	nop; delay slot nop
  595  00001608  304300ff	andi	r3,r2,#0x00ff
  596  0000160c  70640039	sleui	r4,r3,#57
  597  00001610  1480005c	bnez	r4,L6_LF2
  598  00001614  54000000	nop; delay slot nop
  599  00001618  08000004	j	L7_LF2
  600  0000161c  54000000	nop; delay slot nop
  601  00001620          	L7_LF2:
  602  00001620  304300ff	andi	r3,r2,#0x00ff
  603  00001624  6c640060	sgtui	r4,r3,#96
  604  00001628  1080001c	beqz	r4,L8_LF2
  605  0000162c  54000000	nop; delay slot nop
  606  00001630  304300ff	andi	r3,r2,#0x00ff
  607  00001634  70640066	sleui	r4,r3,#102
  608  00001638  14800034	bnez	r4,L6_LF2
  609  0000163c  54000000	nop; delay slot nop
  610  00001640  08000004	j	L8_LF2
  611  00001644  54000000	nop; delay slot nop
  612  00001648          	L8_LF2:
  613  00001648  304300ff	andi	r3,r2,#0x00ff
  614  0000164c  6c640040	sgtui	r4,r3,#64
  615  00001650  10800020	beqz	r4,L5_LF2
  616  00001654  54000000	nop; delay slot nop
  617  00001658  304300ff	andi	r3,r2,#0x00ff
  618  0000165c  70640041	sleui	r4,r3,#65
  619  00001660  1480000c	bnez	r4,L6_LF2
  620  00001664  54000000	nop; delay slot nop
  621  00001668  08000008	j	L5_LF2
  622  0000166c  54000000	nop; delay slot nop
  623  00001670          	L6_LF2:
  624  00001670  20010001	addi	r1,r0,#1
  625  00001674          	L5_LF2:
  626  00001674  08000004	j	L4_LF2
  627  00001678  54000000	nop; delay slot nop
  628  0000167c          	L4_LF2:
  629  0000167c  8fa20000	lw	r2,0(r29)
  630  00001680  8fa30004	lw	r3,4(r29)
  631  00001684  8fa40008	lw	r4,8(r29)
  632  00001688  8fdffff8	lw	r31,-8(r30)
  633  0000168c  001ee820	add	r29,r0,r30
  634  00001690  8fdefffc	lw	r30,-4(r30)
  635  00001694  4be00000	jr	r31
  636  00001698  54000000	nop
  637  0000169c          	.endproc _isxdigit
  638  0000169c          	.align 2
  639  0000169c          	.proc _dstrcpy
  640  0000169c          	.global _dstrcpy
  641  0000169c          	_dstrcpy:
  642                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  643  0000169c  afbefffc	sw	-4(r29),r30; push fp
  644  000016a0  001df020	add	r30,r0,r29; fp = sp
  645  000016a4  afbffff8	sw	-8(r29),r31; push ret addr
  646  000016a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  647  000016ac  afa20000	sw	0(r29),r2
  648  000016b0  afa30004	sw	4(r29),r3
  649  000016b4  8fc10000	lw	r1,(r30)
  650  000016b8  afc1fff4	sw	-12(r30),r1
  651  000016bc          	L10_LF2:
  652  000016bc  8fc10000	lw	r1,(r30)
  653  000016c0  20220001	addi	r2,r1,#1
  654  000016c4  afc20000	sw	(r30),r2
  655  000016c8  8fc20004	lw	r2,4(r30)
  656  000016cc  20430001	addi	r3,r2,#1
  657  000016d0  afc30004	sw	4(r30),r3
  658  000016d4  80420000	lb	r2,(r2)
  659  000016d8  a0220000	sb	(r1),r2
  660  000016dc  a3c2fff3	sb	-13(r30),r2
  661  000016e0          	L12_LF2:
  662  000016e0  93c1fff3	lbu	r1,-13(r30)
  663  000016e4  64220000	snei	r2,r1,#0
  664  000016e8  1440000c	bnez	r2,L13_LF2
  665  000016ec  54000000	nop; delay slot nop
  666  000016f0  0800000c	j	L11_LF2
  667  000016f4  54000000	nop; delay slot nop
  668  000016f8          	L13_LF2:
  669  000016f8  0bffffc0	j	L10_LF2
  670  000016fc  54000000	nop; delay slot nop
  671  00001700          	L11_LF2:
  672  00001700  8fc1fff4	lw	r1,-12(r30)
  673  00001704  08000004	j	L9_LF2
  674  00001708  54000000	nop; delay slot nop
  675  0000170c          	L9_LF2:
  676  0000170c  8fa20000	lw	r2,0(r29)
  677  00001710  8fa30004	lw	r3,4(r29)
  678  00001714  8fdffff8	lw	r31,-8(r30)
  679  00001718  001ee820	add	r29,r0,r30
  680  0000171c  8fdefffc	lw	r30,-4(r30)
  681  00001720  4be00000	jr	r31
  682  00001724  54000000	nop
  683  00001728          	.endproc _dstrcpy
  684  00001728          	.align 2
  685  00001728          	.proc _dstrncpy
  686  00001728          	.global _dstrncpy
  687  00001728          	_dstrncpy:
  688                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  689  00001728  afbefffc	sw	-4(r29),r30; push fp
  690  0000172c  001df020	add	r30,r0,r29; fp = sp
  691  00001730  afbffff8	sw	-8(r29),r31; push ret addr
  692  00001734  2fbd0018	subui	r29,r29,#24; alloc local storage
  693  00001738  afa20000	sw	0(r29),r2
  694  0000173c  afa30004	sw	4(r29),r3
  695  00001740  8fc10000	lw	r1,(r30)
  696  00001744  afc1fff4	sw	-12(r30),r1
  697  00001748          	L15_LF2:
  698  00001748  8fc10008	lw	r1,8(r30)
  699  0000174c  2022ffff	addi	r2,r1,#-1
  700  00001750  afc20008	sw	8(r30),r2
  701  00001754  70210000	slei	r1,r1,#0
  702  00001758  1020000c	beqz	r1,L18_LF2
  703  0000175c  54000000	nop; delay slot nop
  704  00001760  08000048	j	L16_LF2
  705  00001764  54000000	nop; delay slot nop
  706  00001768          	L18_LF2:
  707  00001768  8fc10000	lw	r1,(r30)
  708  0000176c  20220001	addi	r2,r1,#1
  709  00001770  afc20000	sw	(r30),r2
  710  00001774  8fc20004	lw	r2,4(r30)
  711  00001778  20430001	addi	r3,r2,#1
  712  0000177c  afc30004	sw	4(r30),r3
  713  00001780  80420000	lb	r2,(r2)
  714  00001784  a0220000	sb	(r1),r2
  715  00001788  a3c2fff3	sb	-13(r30),r2
  716  0000178c          	L17_LF2:
  717  0000178c  93c1fff3	lbu	r1,-13(r30)
  718  00001790  64220000	snei	r2,r1,#0
  719  00001794  1440000c	bnez	r2,L19_LF2
  720  00001798  54000000	nop; delay slot nop
  721  0000179c  0800000c	j	L16_LF2
  722  000017a0  54000000	nop; delay slot nop
  723  000017a4          	L19_LF2:
  724  000017a4  0bffffa0	j	L15_LF2
  725  000017a8  54000000	nop; delay slot nop
  726  000017ac          	L16_LF2:
  727  000017ac  8fc1fff4	lw	r1,-12(r30)
  728  000017b0  08000004	j	L14_LF2
  729  000017b4  54000000	nop; delay slot nop
  730  000017b8          	L14_LF2:
  731  000017b8  8fa20000	lw	r2,0(r29)
  732  000017bc  8fa30004	lw	r3,4(r29)
  733  000017c0  8fdffff8	lw	r31,-8(r30)
  734  000017c4  001ee820	add	r29,r0,r30
  735  000017c8  8fdefffc	lw	r30,-4(r30)
  736  000017cc  4be00000	jr	r31
  737  000017d0  54000000	nop
  738  000017d4          	.endproc _dstrncpy
  739  000017d4          	.align 2
  740  000017d4          	.proc _dstrcat
  741  000017d4          	.global _dstrcat
  742  000017d4          	_dstrcat:
  743                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  744  000017d4  afbefffc	sw	-4(r29),r30; push fp
  745  000017d8  001df020	add	r30,r0,r29; fp = sp
  746  000017dc  afbffff8	sw	-8(r29),r31; push ret addr
  747  000017e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  748  000017e4  afa20000	sw	0(r29),r2
  749  000017e8  8fc10000	lw	r1,(r30)
  750  000017ec  afc1fff4	sw	-12(r30),r1
  751  000017f0          	L21_LF2:
  752  000017f0  8fc10000	lw	r1,(r30)
  753  000017f4  90220000	lbu	r2,(r1)
  754  000017f8  64410000	snei	r1,r2,#0
  755  000017fc  1420000c	bnez	r1,L23_LF2
  756  00001800  54000000	nop; delay slot nop
  757  00001804  0800001c	j	L22_LF2
  758  00001808  54000000	nop; delay slot nop
  759  0000180c          	L23_LF2:
  760  0000180c  8fc20000	lw	r2,(r30)
  761  00001810  20410001	addi	r1,r2,#1
  762  00001814  00011020	add	r2,r0,r1
  763  00001818  afc20000	sw	(r30),r2
  764  0000181c  0bffffd0	j	L21_LF2
  765  00001820  54000000	nop; delay slot nop
  766  00001824          	L22_LF2:
  767  00001824  23bdfff8	addi	r29,r29,#-8
  768  00001828  001d0820	add	r1,r0,r29
  769  0000182c  8fc20000	lw	r2,(r30)
  770  00001830  ac220000	sw	(r1),r2
  771  00001834  8fc20004	lw	r2,4(r30)
  772  00001838  ac220004	sw	4(r1),r2
  773  0000183c  0ffffe5c	jal	_dstrcpy
  774  00001840  54000000	nop; delay slot nop
  775  00001844  23bd0008	addi	r29,r29,#8
  776  00001848  8fc1fff4	lw	r1,-12(r30)
  777  0000184c  08000004	j	L20_LF2
  778  00001850  54000000	nop; delay slot nop
  779  00001854          	L20_LF2:
  780  00001854  8fa20000	lw	r2,0(r29)
  781  00001858  8fdffff8	lw	r31,-8(r30)
  782  0000185c  001ee820	add	r29,r0,r30
  783  00001860  8fdefffc	lw	r30,-4(r30)
  784  00001864  4be00000	jr	r31
  785  00001868  54000000	nop
  786  0000186c          	.endproc _dstrcat
  787  0000186c          	.align 2
  788  0000186c          	.proc _dstrncmp
  789  0000186c          	.global _dstrncmp
  790  0000186c          	_dstrncmp:
  791                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  792  0000186c  afbefffc	sw	-4(r29),r30; push fp
  793  00001870  001df020	add	r30,r0,r29; fp = sp
  794  00001874  afbffff8	sw	-8(r29),r31; push ret addr
  795  00001878  2fbd0018	subui	r29,r29,#24; alloc local storage
  796  0000187c  afa20000	sw	0(r29),r2
  797  00001880  afa30004	sw	4(r29),r3
  798  00001884  54000000	nop
  799  00001888  20010000	addi	r1,r0,#0
  800  0000188c  afc1fff4	sw	-12(r30),r1
  801  00001890          	L25_LF2:
  802  00001890  8fc1fff4	lw	r1,-12(r30)
  803  00001894  8fc20008	lw	r2,8(r30)
  804  00001898  0022082a	slt	r1,r1,r2
  805  0000189c  1420000c	bnez	r1,L28_LF2
  806  000018a0  54000000	nop; delay slot nop
  807  000018a4  08000088	j	L26_LF2
  808  000018a8  54000000	nop; delay slot nop
  809  000018ac          	L28_LF2:
  810  000018ac  8fc10004	lw	r1,4(r30)
  811  000018b0  90220000	lbu	r2,(r1)
  812  000018b4  64410000	snei	r1,r2,#0
  813  000018b8  14200018	bnez	r1,L29_LF2
  814  000018bc  54000000	nop; delay slot nop
  815  000018c0  20010000	addi	r1,r0,#0
  816  000018c4  080000d8	j	L24_LF2
  817  000018c8  54000000	nop; delay slot nop
  818  000018cc  08000028	j	L30_LF2
  819  000018d0  54000000	nop; delay slot nop
  820  000018d4          	L29_LF2:
  821  000018d4  8fc10000	lw	r1,(r30)
  822  000018d8  8fc20004	lw	r2,4(r30)
  823  000018dc  90210000	lbu	r1,(r1)
  824  000018e0  90420000	lbu	r2,(r2)
  825  000018e4  00220829	sne	r1,r1,r2
  826  000018e8  1020000c	beqz	r1,L30_LF2
  827  000018ec  54000000	nop; delay slot nop
  828  000018f0  0800003c	j	L26_LF2
  829  000018f4  54000000	nop; delay slot nop
  830  000018f8          	L31_LF2:
  831  000018f8          	L30_LF2:
  832  000018f8  8fc20000	lw	r2,(r30)
  833  000018fc  20410001	addi	r1,r2,#1
  834  00001900  00011020	add	r2,r0,r1
  835  00001904  afc20000	sw	(r30),r2
  836  00001908  8fc20004	lw	r2,4(r30)
  837  0000190c  20410001	addi	r1,r2,#1
  838  00001910  00011020	add	r2,r0,r1
  839  00001914  afc20004	sw	4(r30),r2
  840  00001918          	L27_LF2:
  841  00001918  8fc2fff4	lw	r2,-12(r30)
  842  0000191c  20410001	addi	r1,r2,#1
  843  00001920  00011020	add	r2,r0,r1
  844  00001924  afc2fff4	sw	-12(r30),r2
  845  00001928  0bffff64	j	L25_LF2
  846  0000192c  54000000	nop; delay slot nop
  847  00001930          	L26_LF2:
  848  00001930  8fc1fff4	lw	r1,-12(r30)
  849  00001934  8fc20008	lw	r2,8(r30)
  850  00001938  00220828	seq	r1,r1,r2
  851  0000193c  10200018	beqz	r1,L32_LF2
  852  00001940  54000000	nop; delay slot nop
  853  00001944  20010000	addi	r1,r0,#0
  854  00001948  08000054	j	L24_LF2
  855  0000194c  54000000	nop; delay slot nop
  856  00001950  0800004c	j	L33_LF2
  857  00001954  54000000	nop; delay slot nop
  858  00001958          	L32_LF2:
  859  00001958  8fc20000	lw	r2,(r30)
  860  0000195c  90410000	lbu	r1,(r2)
  861  00001960  8fc20004	lw	r2,4(r30)
  862  00001964  90430000	lbu	r3,(r2)
  863  00001968  00230822	sub	r1,r1,r3
  864  0000196c  74220000	sgei	r2,r1,#0
  865  00001970  10400020	beqz	r2,L34_LF2
  866  00001974  54000000	nop; delay slot nop
  867  00001978  8fc10000	lw	r1,(r30)
  868  0000197c  8fc20004	lw	r2,4(r30)
  869  00001980  90210000	lbu	r1,(r1)
  870  00001984  90420000	lbu	r2,(r2)
  871  00001988  00220829	sne	r1,r1,r2
  872  0000198c  08000008	j	L35_LF2
  873  00001990  54000000	nop; delay slot nop
  874  00001994          	L34_LF2:
  875  00001994  2001ffff	addi	r1,r0,#-1
  876  00001998          	L35_LF2:
  877  00001998  08000004	j	L24_LF2
  878  0000199c  54000000	nop; delay slot nop
  879  000019a0          	L33_LF2:
  880  000019a0          	L24_LF2:
  881  000019a0  8fa20000	lw	r2,0(r29)
  882  000019a4  8fa30004	lw	r3,4(r29)
  883  000019a8  8fdffff8	lw	r31,-8(r30)
  884  000019ac  001ee820	add	r29,r0,r30
  885  000019b0  8fdefffc	lw	r30,-4(r30)
  886  000019b4  4be00000	jr	r31
  887  000019b8  54000000	nop
  888  000019bc          	.endproc _dstrncmp
  889  000019bc          	.align 2
  890  000019bc          	.proc _dstrlen
  891  000019bc          	.global _dstrlen
  892  000019bc          	_dstrlen:
  893                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  894  000019bc  afbefffc	sw	-4(r29),r30; push fp
  895  000019c0  001df020	add	r30,r0,r29; fp = sp
  896  000019c4  afbffff8	sw	-8(r29),r31; push ret addr
  897  000019c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  898  000019cc  afa20000	sw	0(r29),r2
  899  000019d0  20010000	addi	r1,r0,#0
  900  000019d4  afc1fff4	sw	-12(r30),r1
  901  000019d8          	L37_LF2:
  902  000019d8  8fc10000	lw	r1,(r30)
  903  000019dc  20220001	addi	r2,r1,#1
  904  000019e0  afc20000	sw	(r30),r2
  905  000019e4  90210000	lbu	r1,(r1)
  906  000019e8  64220000	snei	r2,r1,#0
  907  000019ec  1440000c	bnez	r2,L39_LF2
  908  000019f0  54000000	nop; delay slot nop
  909  000019f4  0800001c	j	L38_LF2
  910  000019f8  54000000	nop; delay slot nop
  911  000019fc          	L39_LF2:
  912  000019fc  8fc2fff4	lw	r2,-12(r30)
  913  00001a00  20410001	addi	r1,r2,#1
  914  00001a04  00011020	add	r2,r0,r1
  915  00001a08  afc2fff4	sw	-12(r30),r2
  916  00001a0c  0bffffc8	j	L37_LF2
  917  00001a10  54000000	nop; delay slot nop
  918  00001a14          	L38_LF2:
  919  00001a14  8fc1fff4	lw	r1,-12(r30)
  920  00001a18  08000004	j	L36_LF2
  921  00001a1c  54000000	nop; delay slot nop
  922  00001a20          	L36_LF2:
  923  00001a20  8fa20000	lw	r2,0(r29)
  924  00001a24  8fdffff8	lw	r31,-8(r30)
  925  00001a28  001ee820	add	r29,r0,r30
  926  00001a2c  8fdefffc	lw	r30,-4(r30)
  927  00001a30  4be00000	jr	r31
  928  00001a34  54000000	nop
  929  00001a38          	.endproc _dstrlen
  930  00001a38          	.align 2
  931  00001a38          	.proc _dstrstr
  932  00001a38          	.global _dstrstr
  933  00001a38          	_dstrstr:
  934                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  935  00001a38  afbefffc	sw	-4(r29),r30; push fp
  936  00001a3c  001df020	add	r30,r0,r29; fp = sp
  937  00001a40  afbffff8	sw	-8(r29),r31; push ret addr
  938  00001a44  2fbd0018	subui	r29,r29,#24; alloc local storage
  939  00001a48  afa20000	sw	0(r29),r2
  940  00001a4c  23bdfff8	addi	r29,r29,#-8
  941  00001a50  001d0820	add	r1,r0,r29
  942  00001a54  8fc20004	lw	r2,4(r30)
  943  00001a58  ac220000	sw	(r1),r2
  944  00001a5c  0fffff5c	jal	_dstrlen
  945  00001a60  54000000	nop; delay slot nop
  946  00001a64  23bd0008	addi	r29,r29,#8
  947  00001a68  afc1fff4	sw	-12(r30),r1
  948  00001a6c          	L41_LF2:
  949  00001a6c  8fc10000	lw	r1,(r30)
  950  00001a70  90220000	lbu	r2,(r1)
  951  00001a74  64410000	snei	r1,r2,#0
  952  00001a78  1420000c	bnez	r1,L43_LF2
  953  00001a7c  54000000	nop; delay slot nop
  954  00001a80  08000060	j	L42_LF2
  955  00001a84  54000000	nop; delay slot nop
  956  00001a88          	L43_LF2:
  957  00001a88  23bdfff0	addi	r29,r29,#-16
  958  00001a8c  001d0820	add	r1,r0,r29
  959  00001a90  8fc20000	lw	r2,(r30)
  960  00001a94  ac220000	sw	(r1),r2
  961  00001a98  8fc20004	lw	r2,4(r30)
  962  00001a9c  ac220004	sw	4(r1),r2
  963  00001aa0  8fc2fff4	lw	r2,-12(r30)
  964  00001aa4  ac220008	sw	8(r1),r2
  965  00001aa8  0ffffdc0	jal	_dstrncmp
  966  00001aac  54000000	nop; delay slot nop
  967  00001ab0  23bd0010	addi	r29,r29,#16
  968  00001ab4  64220000	snei	r2,r1,#0
  969  00001ab8  14400010	bnez	r2,L44_LF2
  970  00001abc  54000000	nop; delay slot nop
  971  00001ac0  8fc10000	lw	r1,(r30)
  972  00001ac4  08000028	j	L40_LF2
  973  00001ac8  54000000	nop; delay slot nop
  974  00001acc          	L44_LF2:
  975  00001acc  8fc20000	lw	r2,(r30)
  976  00001ad0  20410001	addi	r1,r2,#1
  977  00001ad4  00011020	add	r2,r0,r1
  978  00001ad8  afc20000	sw	(r30),r2
  979  00001adc  0bffff8c	j	L41_LF2
  980  00001ae0  54000000	nop; delay slot nop
  981  00001ae4          	L42_LF2:
  982  00001ae4  20010000	addi	r1,r0,#0
  983  00001ae8  08000004	j	L40_LF2
  984  00001aec  54000000	nop; delay slot nop
  985  00001af0          	L40_LF2:
  986  00001af0  8fa20000	lw	r2,0(r29)
  987  00001af4  8fdffff8	lw	r31,-8(r30)
  988  00001af8  001ee820	add	r29,r0,r30
  989  00001afc  8fdefffc	lw	r30,-4(r30)
  990  00001b00  4be00000	jr	r31
  991  00001b04  54000000	nop
  992  00001b08          	.endproc _dstrstr
  993  00001b08          	.align 2
  994  00001b08          	.proc _dmindex
  995  00001b08          	.global _dmindex
  996  00001b08          	_dmindex:
  997                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  998  00001b08  afbefffc	sw	-4(r29),r30; push fp
  999  00001b0c  001df020	add	r30,r0,r29; fp = sp
 1000  00001b10  afbffff8	sw	-8(r29),r31; push ret addr
 1001  00001b14  2fbd0018	subui	r29,r29,#24; alloc local storage
 1002  00001b18  afa20000	sw	0(r29),r2
 1003  00001b1c  54000000	nop
 1004  00001b20          	L46_LF2:
 1005  00001b20  8fc10000	lw	r1,(r30)
 1006  00001b24  90220000	lbu	r2,(r1)
 1007  00001b28  64410000	snei	r1,r2,#0
 1008  00001b2c  1420000c	bnez	r1,L48_LF2
 1009  00001b30  54000000	nop; delay slot nop
 1010  00001b34  08000070	j	L47_LF2
 1011  00001b38  54000000	nop; delay slot nop
 1012  00001b3c          	L48_LF2:
 1013  00001b3c  8fc10004	lw	r1,4(r30)
 1014  00001b40  afc1fff4	sw	-12(r30),r1
 1015  00001b44          	L49_LF2:
 1016  00001b44  8fc1fff4	lw	r1,-12(r30)
 1017  00001b48  90220000	lbu	r2,(r1)
 1018  00001b4c  64410000	snei	r1,r2,#0
 1019  00001b50  1420000c	bnez	r1,L52_LF2
 1020  00001b54  54000000	nop; delay slot nop
 1021  00001b58  08000044	j	L50_LF2
 1022  00001b5c  54000000	nop; delay slot nop
 1023  00001b60          	L52_LF2:
 1024  00001b60  8fc10000	lw	r1,(r30)
 1025  00001b64  8fc2fff4	lw	r2,-12(r30)
 1026  00001b68  90210000	lbu	r1,(r1)
 1027  00001b6c  90420000	lbu	r2,(r2)
 1028  00001b70  00220828	seq	r1,r1,r2
 1029  00001b74  10200010	beqz	r1,L51_LF2
 1030  00001b78  54000000	nop; delay slot nop
 1031  00001b7c  8fc10000	lw	r1,(r30)
 1032  00001b80  08000030	j	L45_LF2
 1033  00001b84  54000000	nop; delay slot nop
 1034  00001b88          	L53_LF2:
 1035  00001b88          	L51_LF2:
 1036  00001b88  8fc2fff4	lw	r2,-12(r30)
 1037  00001b8c  20410001	addi	r1,r2,#1
 1038  00001b90  00011020	add	r2,r0,r1
 1039  00001b94  afc2fff4	sw	-12(r30),r2
 1040  00001b98  0bffffa8	j	L49_LF2
 1041  00001b9c  54000000	nop; delay slot nop
 1042  00001ba0          	L50_LF2:
 1043  00001ba0  0bffff7c	j	L46_LF2
 1044  00001ba4  54000000	nop; delay slot nop
 1045  00001ba8          	L47_LF2:
 1046  00001ba8  20010000	addi	r1,r0,#0
 1047  00001bac  08000004	j	L45_LF2
 1048  00001bb0  54000000	nop; delay slot nop
 1049  00001bb4          	L45_LF2:
 1050  00001bb4  8fa20000	lw	r2,0(r29)
 1051  00001bb8  8fdffff8	lw	r31,-8(r30)
 1052  00001bbc  001ee820	add	r29,r0,r30
 1053  00001bc0  8fdefffc	lw	r30,-4(r30)
 1054  00001bc4  4be00000	jr	r31
 1055  00001bc8  54000000	nop
 1056  00001bcc          	.endproc _dmindex
 1057  00001bcc          	.align 2
 1058  00001bcc          	.proc _dindex
 1059  00001bcc          	.global _dindex
 1060  00001bcc          	_dindex:
 1061                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1062  00001bcc  afbefffc	sw	-4(r29),r30; push fp
 1063  00001bd0  001df020	add	r30,r0,r29; fp = sp
 1064  00001bd4  afbffff8	sw	-8(r29),r31; push ret addr
 1065  00001bd8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1066  00001bdc  afa20000	sw	0(r29),r2
 1067  00001be0  54000000	nop
 1068  00001be4          	L55_LF2:
 1069  00001be4  8fc10000	lw	r1,(r30)
 1070  00001be8  90220000	lbu	r2,(r1)
 1071  00001bec  64410000	snei	r1,r2,#0
 1072  00001bf0  1420000c	bnez	r1,L57_LF2
 1073  00001bf4  54000000	nop; delay slot nop
 1074  00001bf8  08000040	j	L56_LF2
 1075  00001bfc  54000000	nop; delay slot nop
 1076  00001c00          	L57_LF2:
 1077  00001c00  8fc10000	lw	r1,(r30)
 1078  00001c04  90220000	lbu	r2,(r1)
 1079  00001c08  8fc10004	lw	r1,4(r30)
 1080  00001c0c  00411028	seq	r2,r2,r1
 1081  00001c10  10400010	beqz	r2,L58_LF2
 1082  00001c14  54000000	nop; delay slot nop
 1083  00001c18  8fc10000	lw	r1,(r30)
 1084  00001c1c  08000028	j	L54_LF2
 1085  00001c20  54000000	nop; delay slot nop
 1086  00001c24          	L58_LF2:
 1087  00001c24  8fc20000	lw	r2,(r30)
 1088  00001c28  20410001	addi	r1,r2,#1
 1089  00001c2c  00011020	add	r2,r0,r1
 1090  00001c30  afc20000	sw	(r30),r2
 1091  00001c34  0bffffac	j	L55_LF2
 1092  00001c38  54000000	nop; delay slot nop
 1093  00001c3c          	L56_LF2:
 1094  00001c3c  20010000	addi	r1,r0,#0
 1095  00001c40  08000004	j	L54_LF2
 1096  00001c44  54000000	nop; delay slot nop
 1097  00001c48          	L54_LF2:
 1098  00001c48  8fa20000	lw	r2,0(r29)
 1099  00001c4c  8fdffff8	lw	r31,-8(r30)
 1100  00001c50  001ee820	add	r29,r0,r30
 1101  00001c54  8fdefffc	lw	r30,-4(r30)
 1102  00001c58  4be00000	jr	r31
 1103  00001c5c  54000000	nop
 1104  00001c60          	.endproc _dindex
 1105  00001c60          	.align 2
 1106  00001c60          	.proc _ditoa
 1107  00001c60          	.global _ditoa
 1108  00001c60          	_ditoa:
 1109                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1110  00001c60  afbefffc	sw	-4(r29),r30; push fp
 1111  00001c64  001df020	add	r30,r0,r29; fp = sp
 1112  00001c68  afbffff8	sw	-8(r29),r31; push ret addr
 1113  00001c6c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1114  00001c70  afa20000	sw	0(r29),r2
 1115  00001c74  afa30004	sw	4(r29),r3
 1116  00001c78  8fc10000	lw	r1,(r30)
 1117  00001c7c  68220000	slti	r2,r1,#0
 1118  00001c80  1040002c	beqz	r2,L60_LF2
 1119  00001c84  54000000	nop; delay slot nop
 1120  00001c88  8fc10004	lw	r1,4(r30)
 1121  00001c8c  20220001	addi	r2,r1,#1
 1122  00001c90  afc20004	sw	4(r30),r2
 1123  00001c94  2002002d	addi	r2,r0,(#0x2d)&0xff
 1124  00001c98  a0220000	sb	(r1),r2
 1125  00001c9c  8fc10000	lw	r1,(r30)
 1126  00001ca0  00011022	sub	r2,r0,r1
 1127  00001ca4  afc20000	sw	(r30),r2
 1128  00001ca8  08000118	j	L61_LF2
 1129  00001cac  54000000	nop; delay slot nop
 1130  00001cb0          	L60_LF2:
 1131  00001cb0  8fc10000	lw	r1,(r30)
 1132  00001cb4  64220000	snei	r2,r1,#0
 1133  00001cb8  14400020	bnez	r2,L62_LF2
 1134  00001cbc  54000000	nop; delay slot nop
 1135  00001cc0  8fc10004	lw	r1,4(r30)
 1136  00001cc4  20220001	addi	r2,r1,#1
 1137  00001cc8  afc20004	sw	4(r30),r2
 1138  00001ccc  20020030	addi	r2,r0,(#0x30)&0xff
 1139  00001cd0  a0220000	sb	(r1),r2
 1140  00001cd4  080000ec	j	L61_LF2
 1141  00001cd8  54000000	nop; delay slot nop
 1142  00001cdc          	L62_LF2:
 1143  00001cdc  20010001	addi	r1,r0,#1
 1144  00001ce0  afc1fff4	sw	-12(r30),r1
 1145  00001ce4          	L64_LF2:
 1146  00001ce4  8fc1fff4	lw	r1,-12(r30)
 1147  00001ce8  8fc20000	lw	r2,(r30)
 1148  00001cec  0022082c	sle	r1,r1,r2
 1149  00001cf0  1420000c	bnez	r1,L66_LF2
 1150  00001cf4  54000000	nop; delay slot nop
 1151  00001cf8  08000024	j	L65_LF2
 1152  00001cfc  54000000	nop; delay slot nop
 1153  00001d00          	L67_LF2:
 1154  00001d00          	L66_LF2:
 1155  00001d00  8fc1fff4	lw	r1,-12(r30)
 1156  00001d04  00011820	add	r3,r0,r1
 1157  00001d08  50620002	slli	r2,r3,#0x2
 1158  00001d0c  00411020	add	r2,r2,r1
 1159  00001d10  50410001	slli	r1,r2,#0x1
 1160  00001d14  afc1fff4	sw	-12(r30),r1
 1161  00001d18  0bffffc8	j	L64_LF2
 1162  00001d1c  54000000	nop; delay slot nop
 1163  00001d20          	L65_LF2:
 1164  00001d20  54000000	nop
 1165  00001d24          	L68_LF2:
 1166  00001d24  8fc1fff4	lw	r1,-12(r30)
 1167  00001d28  2002000a	addi	r2,r0,#10
 1168  00001d2c  00200035	movi2fp	f0,r1
 1169  00001d30  00400835	movi2fp	f1,r2
 1170  00001d34  0401000f	div	f0,f0,f1
 1171  00001d38  00000834	movfp2i	r1,f0
 1172  00001d3c  afc1fff4	sw	-12(r30),r1
 1173  00001d40  8fc10004	lw	r1,4(r30)
 1174  00001d44  20220001	addi	r2,r1,#1
 1175  00001d48  afc20004	sw	4(r30),r2
 1176  00001d4c  8fc20000	lw	r2,(r30)
 1177  00001d50  8fc3fff4	lw	r3,-12(r30)
 1178  00001d54  00400035	movi2fp	f0,r2
 1179  00001d58  00600835	movi2fp	f1,r3
 1180  00001d5c  0401000f	div	f0,f0,f1
 1181  00001d60  00001034	movfp2i	r2,f0
 1182  00001d64  00021820	add	r3,r0,r2
 1183  00001d68  20620030	addi	r2,r3,#48
 1184  00001d6c  a0220000	sb	(r1),r2
 1185  00001d70  8fc10000	lw	r1,(r30)
 1186  00001d74  8fc3fff4	lw	r3,-12(r30)
 1187  00001d78  00200035	movi2fp	f0,r1
 1188  00001d7c  00600835	movi2fp	f1,r3
 1189  00001d80  0401000f	div	f0,f0,f1
 1190  00001d84  00001034	movfp2i	r2,f0
 1191  00001d88  8fc3fff4	lw	r3,-12(r30)
 1192  00001d8c  00400035	movi2fp	f0,r2
 1193  00001d90  00600835	movi2fp	f1,r3
 1194  00001d94  0401000e	mult	f0,f0,f1
 1195  00001d98  00001034	movfp2i	r2,f0
 1196  00001d9c  00220822	sub	r1,r1,r2
 1197  00001da0  afc10000	sw	(r30),r1
 1198  00001da4          	L70_LF2:
 1199  00001da4  8fc1fff4	lw	r1,-12(r30)
 1200  00001da8  6c220001	sgti	r2,r1,#1
 1201  00001dac  1440000c	bnez	r2,L71_LF2
 1202  00001db0  54000000	nop; delay slot nop
 1203  00001db4  0800000c	j	L61_LF2
 1204  00001db8  54000000	nop; delay slot nop
 1205  00001dbc          	L71_LF2:
 1206  00001dbc  0bffff64	j	L68_LF2
 1207  00001dc0  54000000	nop; delay slot nop
 1208  00001dc4          	L69_LF2:
 1209  00001dc4          	L63_LF2:
 1210  00001dc4          	L61_LF2:
 1211  00001dc4  8fc10004	lw	r1,4(r30)
 1212  00001dc8  20020000	addi	r2,r0,(#0x0)&0xff
 1213  00001dcc  a0220000	sb	(r1),r2
 1214  00001dd0          	L59_LF2:
 1215  00001dd0  8fa20000	lw	r2,0(r29)
 1216  00001dd4  8fa30004	lw	r3,4(r29)
 1217  00001dd8  8fdffff8	lw	r31,-8(r30)
 1218  00001ddc  001ee820	add	r29,r0,r30
 1219  00001de0  8fdefffc	lw	r30,-4(r30)
 1220  00001de4  4be00000	jr	r31
 1221  00001de8  54000000	nop
 1222  00001dec          	.endproc _ditoa
 1223  00001dec          	.align 2
 1224  00001dec          	.proc _dstrtol
 1225  00001dec          	.global _dstrtol
 1226  00001dec          	_dstrtol:
 1227                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1228  00001dec  afbefffc	sw	-4(r29),r30; push fp
 1229  00001df0  001df020	add	r30,r0,r29; fp = sp
 1230  00001df4  afbffff8	sw	-8(r29),r31; push ret addr
 1231  00001df8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1232  00001dfc  afa20000	sw	0(r29),r2
 1233  00001e00  20010000	addi	r1,r0,#0
 1234  00001e04  afc1fff4	sw	-12(r30),r1
 1235  00001e08          	L73_LF2:
 1236  00001e08  8fc10000	lw	r1,(r30)
 1237  00001e0c  90220000	lbu	r2,(r1)
 1238  00001e10  60410020	seqi	r1,r2,#32
 1239  00001e14  14200034	bnez	r1,L75_LF2
 1240  00001e18  54000000	nop; delay slot nop
 1241  00001e1c  8fc10000	lw	r1,(r30)
 1242  00001e20  90220000	lbu	r2,(r1)
 1243  00001e24  60410009	seqi	r1,r2,#9
 1244  00001e28  14200020	bnez	r1,L75_LF2
 1245  00001e2c  54000000	nop; delay slot nop
 1246  00001e30  8fc10000	lw	r1,(r30)
 1247  00001e34  90220000	lbu	r2,(r1)
 1248  00001e38  6041000a	seqi	r1,r2,#10
 1249  00001e3c  1420000c	bnez	r1,L75_LF2
 1250  00001e40  54000000	nop; delay slot nop
 1251  00001e44  0800001c	j	L74_LF2
 1252  00001e48  54000000	nop; delay slot nop
 1253  00001e4c          	L75_LF2:
 1254  00001e4c  8fc20000	lw	r2,(r30)
 1255  00001e50  20410001	addi	r1,r2,#1
 1256  00001e54  00011020	add	r2,r0,r1
 1257  00001e58  afc20000	sw	(r30),r2
 1258  00001e5c  0bffffa8	j	L73_LF2
 1259  00001e60  54000000	nop; delay slot nop
 1260  00001e64          	L74_LF2:
 1261  00001e64  8fc10004	lw	r1,4(r30)
 1262  00001e68  64220000	snei	r2,r1,#0
 1263  00001e6c  10400010	beqz	r2,L76_LF2
 1264  00001e70  54000000	nop; delay slot nop
 1265  00001e74  8fc10004	lw	r1,4(r30)
 1266  00001e78  8fc20000	lw	r2,(r30)
 1267  00001e7c  ac220000	sw	(r1),r2
 1268  00001e80          	L76_LF2:
 1269  00001e80  8fc10000	lw	r1,(r30)
 1270  00001e84  90220000	lbu	r2,(r1)
 1271  00001e88  64410000	snei	r1,r2,#0
 1272  00001e8c  14200010	bnez	r1,L77_LF2
 1273  00001e90  54000000	nop; delay slot nop
 1274  00001e94  8fc1fff4	lw	r1,-12(r30)
 1275  00001e98  08000294	j	L72_LF2
 1276  00001e9c  54000000	nop; delay slot nop
 1277  00001ea0          	L77_LF2:
 1278  00001ea0  8fc10000	lw	r1,(r30)
 1279  00001ea4  90220000	lbu	r2,(r1)
 1280  00001ea8  6041002d	seqi	r1,r2,#45
 1281  00001eac  10200024	beqz	r1,L78_LF2
 1282  00001eb0  54000000	nop; delay slot nop
 1283  00001eb4  2001ffff	addi	r1,r0,#-1
 1284  00001eb8  afc1ffec	sw	-20(r30),r1
 1285  00001ebc  8fc20000	lw	r2,(r30)
 1286  00001ec0  20410001	addi	r1,r2,#1
 1287  00001ec4  00011020	add	r2,r0,r1
 1288  00001ec8  afc20000	sw	(r30),r2
 1289  00001ecc  0800000c	j	L79_LF2
 1290  00001ed0  54000000	nop; delay slot nop
 1291  00001ed4          	L78_LF2:
 1292  00001ed4  20010001	addi	r1,r0,#1
 1293  00001ed8  afc1ffec	sw	-20(r30),r1
 1294  00001edc          	L79_LF2:
 1295  00001edc  8fc10008	lw	r1,8(r30)
 1296  00001ee0  64220000	snei	r2,r1,#0
 1297  00001ee4  14400090	bnez	r2,L80_LF2
 1298  00001ee8  54000000	nop; delay slot nop
 1299  00001eec  8fc10000	lw	r1,(r30)
 1300  00001ef0  90220000	lbu	r2,(r1)
 1301  00001ef4  60410030	seqi	r1,r2,#48
 1302  00001ef8  10200074	beqz	r1,L81_LF2
 1303  00001efc  54000000	nop; delay slot nop
 1304  00001f00  8fc20000	lw	r2,(r30)
 1305  00001f04  20410001	addi	r1,r2,#1
 1306  00001f08  00011020	add	r2,r0,r1
 1307  00001f0c  afc20000	sw	(r30),r2
 1308  00001f10  8fc10000	lw	r1,(r30)
 1309  00001f14  90220000	lbu	r2,(r1)
 1310  00001f18  60410078	seqi	r1,r2,#120
 1311  00001f1c  14200020	bnez	r1,L83_LF2
 1312  00001f20  54000000	nop; delay slot nop
 1313  00001f24  8fc10000	lw	r1,(r30)
 1314  00001f28  90220000	lbu	r2,(r1)
 1315  00001f2c  60410058	seqi	r1,r2,#88
 1316  00001f30  1420000c	bnez	r1,L83_LF2
 1317  00001f34  54000000	nop; delay slot nop
 1318  00001f38  08000024	j	L82_LF2
 1319  00001f3c  54000000	nop; delay slot nop
 1320  00001f40          	L83_LF2:
 1321  00001f40  20010010	addi	r1,r0,#16
 1322  00001f44  afc10008	sw	8(r30),r1
 1323  00001f48  8fc20000	lw	r2,(r30)
 1324  00001f4c  20410001	addi	r1,r2,#1
 1325  00001f50  00011020	add	r2,r0,r1
 1326  00001f54  afc20000	sw	(r30),r2
 1327  00001f58  0800000c	j	L84_LF2
 1328  00001f5c  54000000	nop; delay slot nop
 1329  00001f60          	L82_LF2:
 1330  00001f60  20010008	addi	r1,r0,#8
 1331  00001f64  afc10008	sw	8(r30),r1
 1332  00001f68          	L84_LF2:
 1333  00001f68  0800000c	j	L80_LF2
 1334  00001f6c  54000000	nop; delay slot nop
 1335  00001f70          	L81_LF2:
 1336  00001f70  2001000a	addi	r1,r0,#10
 1337  00001f74  afc10008	sw	8(r30),r1
 1338  00001f78          	L85_LF2:
 1339  00001f78          	L80_LF2:
 1340  00001f78  8fc10008	lw	r1,8(r30)
 1341  00001f7c  70220000	slei	r2,r1,#0
 1342  00001f80  1440001c	bnez	r2,L87_LF2
 1343  00001f84  54000000	nop; delay slot nop
 1344  00001f88  8fc10008	lw	r1,8(r30)
 1345  00001f8c  6c220010	sgti	r2,r1,#16
 1346  00001f90  1440000c	bnez	r2,L87_LF2
 1347  00001f94  54000000	nop; delay slot nop
 1348  00001f98  08000010	j	L86_LF2
 1349  00001f9c  54000000	nop; delay slot nop
 1350  00001fa0          	L87_LF2:
 1351  00001fa0  8fc1fff4	lw	r1,-12(r30)
 1352  00001fa4  08000188	j	L72_LF2
 1353  00001fa8  54000000	nop; delay slot nop
 1354  00001fac          	L86_LF2:
 1355  00001fac  54000000	nop
 1356  00001fb0          	L88_LF2:
 1357  00001fb0  8fc10000	lw	r1,(r30)
 1358  00001fb4  90220000	lbu	r2,(r1)
 1359  00001fb8  6c41002f	sgtui	r1,r2,#47
 1360  00001fbc  10200030	beqz	r1,L91_LF2
 1361  00001fc0  54000000	nop; delay slot nop
 1362  00001fc4  8fc10000	lw	r1,(r30)
 1363  00001fc8  90220000	lbu	r2,(r1)
 1364  00001fcc  70410039	sleui	r1,r2,#57
 1365  00001fd0  1020001c	beqz	r1,L91_LF2
 1366  00001fd4  54000000	nop; delay slot nop
 1367  00001fd8  8fc10000	lw	r1,(r30)
 1368  00001fdc  90220000	lbu	r2,(r1)
 1369  00001fe0  2041ffd0	addi	r1,r2,#-48
 1370  00001fe4  afc1fff0	sw	-16(r30),r1
 1371  00001fe8  0800008c	j	L92_LF2
 1372  00001fec  54000000	nop; delay slot nop
 1373  00001ff0          	L91_LF2:
 1374  00001ff0  8fc10000	lw	r1,(r30)
 1375  00001ff4  90220000	lbu	r2,(r1)
 1376  00001ff8  6c410060	sgtui	r1,r2,#96
 1377  00001ffc  10200030	beqz	r1,L93_LF2
 1378  00002000  54000000	nop; delay slot nop
 1379  00002004  8fc10000	lw	r1,(r30)
 1380  00002008  90220000	lbu	r2,(r1)
 1381  0000200c  7041007a	sleui	r1,r2,#122
 1382  00002010  1020001c	beqz	r1,L93_LF2
 1383  00002014  54000000	nop; delay slot nop
 1384  00002018  8fc10000	lw	r1,(r30)
 1385  0000201c  90220000	lbu	r2,(r1)
 1386  00002020  2041ffa9	addi	r1,r2,#-87
 1387  00002024  afc1fff0	sw	-16(r30),r1
 1388  00002028  0800004c	j	L92_LF2
 1389  0000202c  54000000	nop; delay slot nop
 1390  00002030          	L93_LF2:
 1391  00002030  8fc10000	lw	r1,(r30)
 1392  00002034  90220000	lbu	r2,(r1)
 1393  00002038  6c410040	sgtui	r1,r2,#64
 1394  0000203c  10200030	beqz	r1,L95_LF2
 1395  00002040  54000000	nop; delay slot nop
 1396  00002044  8fc10000	lw	r1,(r30)
 1397  00002048  90220000	lbu	r2,(r1)
 1398  0000204c  7041005a	sleui	r1,r2,#90
 1399  00002050  1020001c	beqz	r1,L95_LF2
 1400  00002054  54000000	nop; delay slot nop
 1401  00002058  8fc10000	lw	r1,(r30)
 1402  0000205c  90220000	lbu	r2,(r1)
 1403  00002060  2041ffc9	addi	r1,r2,#-55
 1404  00002064  afc1fff0	sw	-16(r30),r1
 1405  00002068  0800000c	j	L92_LF2
 1406  0000206c  54000000	nop; delay slot nop
 1407  00002070          	L95_LF2:
 1408  00002070  200103e8	addi	r1,r0,#1000
 1409  00002074  afc1fff0	sw	-16(r30),r1
 1410  00002078          	L96_LF2:
 1411  00002078          	L94_LF2:
 1412  00002078          	L92_LF2:
 1413  00002078  8fc1fff0	lw	r1,-16(r30)
 1414  0000207c  8fc20008	lw	r2,8(r30)
 1415  00002080  0022082a	slt	r1,r1,r2
 1416  00002084  10200040	beqz	r1,L90_LF2
 1417  00002088  54000000	nop; delay slot nop
 1418  0000208c  8fc1fff4	lw	r1,-12(r30)
 1419  00002090  8fc20008	lw	r2,8(r30)
 1420  00002094  00200035	movi2fp	f0,r1
 1421  00002098  00400835	movi2fp	f1,r2
 1422  0000209c  0401000e	mult	f0,f0,f1
 1423  000020a0  00000834	movfp2i	r1,f0
 1424  000020a4  afc1fff4	sw	-12(r30),r1
 1425  000020a8  8fc1fff4	lw	r1,-12(r30)
 1426  000020ac  8fc2fff0	lw	r2,-16(r30)
 1427  000020b0  00220820	add	r1,r1,r2
 1428  000020b4  afc1fff4	sw	-12(r30),r1
 1429  000020b8  8fc20000	lw	r2,(r30)
 1430  000020bc  20410001	addi	r1,r2,#1
 1431  000020c0  00011020	add	r2,r0,r1
 1432  000020c4  afc20000	sw	(r30),r2
 1433  000020c8          	L97_LF2:
 1434  000020c8          	L90_LF2:
 1435  000020c8  8fc1fff0	lw	r1,-16(r30)
 1436  000020cc  8fc20008	lw	r2,8(r30)
 1437  000020d0  0022082a	slt	r1,r1,r2
 1438  000020d4  1420000c	bnez	r1,L98_LF2
 1439  000020d8  54000000	nop; delay slot nop
 1440  000020dc  0800000c	j	L89_LF2
 1441  000020e0  54000000	nop; delay slot nop
 1442  000020e4          	L98_LF2:
 1443  000020e4  0bfffec8	j	L88_LF2
 1444  000020e8  54000000	nop; delay slot nop
 1445  000020ec          	L89_LF2:
 1446  000020ec  8fc10004	lw	r1,4(r30)
 1447  000020f0  64220000	snei	r2,r1,#0
 1448  000020f4  10400010	beqz	r2,L99_LF2
 1449  000020f8  54000000	nop; delay slot nop
 1450  000020fc  8fc10004	lw	r1,4(r30)
 1451  00002100  8fc20000	lw	r2,(r30)
 1452  00002104  ac220000	sw	(r1),r2
 1453  00002108          	L99_LF2:
 1454  00002108  8fc1fff4	lw	r1,-12(r30)
 1455  0000210c  8fc2ffec	lw	r2,-20(r30)
 1456  00002110  00200035	movi2fp	f0,r1
 1457  00002114  00400835	movi2fp	f1,r2
 1458  00002118  0401000e	mult	f0,f0,f1
 1459  0000211c  00000834	movfp2i	r1,f0
 1460  00002120  afc1fff4	sw	-12(r30),r1
 1461  00002124  8fc1fff4	lw	r1,-12(r30)
 1462  00002128  08000004	j	L72_LF2
 1463  0000212c  54000000	nop; delay slot nop
 1464  00002130          	L72_LF2:
 1465  00002130  8fa20000	lw	r2,0(r29)
 1466  00002134  8fdffff8	lw	r31,-8(r30)
 1467  00002138  001ee820	add	r29,r0,r30
 1468  0000213c  8fdefffc	lw	r30,-4(r30)
 1469  00002140  4be00000	jr	r31
 1470  00002144  54000000	nop
 1471  00002148          	.endproc _dstrtol
 1472  00002148          	.align 2
 1473  00002148          	.proc _bcopy
 1474  00002148          	.global _bcopy
 1475  00002148          	_bcopy:
 1476                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1477  00002148  afbefffc	sw	-4(r29),r30; push fp
 1478  0000214c  001df020	add	r30,r0,r29; fp = sp
 1479  00002150  afbffff8	sw	-8(r29),r31; push ret addr
 1480  00002154  2fbd0010	subui	r29,r29,#16; alloc local storage
 1481  00002158  afa20000	sw	0(r29),r2
 1482  0000215c  afa30004	sw	4(r29),r3
 1483  00002160  54000000	nop
 1484  00002164          	L101_LF2:
 1485  00002164  8fc10008	lw	r1,8(r30)
 1486  00002168  2022ffff	addi	r2,r1,#-1
 1487  0000216c  afc20008	sw	8(r30),r2
 1488  00002170  6c210000	sgti	r1,r1,#0
 1489  00002174  1420000c	bnez	r1,L103_LF2
 1490  00002178  54000000	nop; delay slot nop
 1491  0000217c  0800002c	j	L102_LF2
 1492  00002180  54000000	nop; delay slot nop
 1493  00002184          	L103_LF2:
 1494  00002184  8fc10004	lw	r1,4(r30)
 1495  00002188  20220001	addi	r2,r1,#1
 1496  0000218c  afc20004	sw	4(r30),r2
 1497  00002190  8fc20000	lw	r2,(r30)
 1498  00002194  20430001	addi	r3,r2,#1
 1499  00002198  afc30000	sw	(r30),r3
 1500  0000219c  80420000	lb	r2,(r2)
 1501  000021a0  a0220000	sb	(r1),r2
 1502  000021a4  0bffffbc	j	L101_LF2
 1503  000021a8  54000000	nop; delay slot nop
 1504  000021ac          	L102_LF2:
 1505  000021ac          	L100_LF2:
 1506  000021ac  8fa20000	lw	r2,0(r29)
 1507  000021b0  8fa30004	lw	r3,4(r29)
 1508  000021b4  8fdffff8	lw	r31,-8(r30)
 1509  000021b8  001ee820	add	r29,r0,r30
 1510  000021bc  8fdefffc	lw	r30,-4(r30)
 1511  000021c0  4be00000	jr	r31
 1512  000021c4  54000000	nop
 1513  000021c8          	.endproc _bcopy
 1514  000021c8          	.align 2
 1515  000021c8          	.proc _bzero
 1516  000021c8          	.global _bzero
 1517  000021c8          	_bzero:
 1518                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1519  000021c8  afbefffc	sw	-4(r29),r30; push fp
 1520  000021cc  001df020	add	r30,r0,r29; fp = sp
 1521  000021d0  afbffff8	sw	-8(r29),r31; push ret addr
 1522  000021d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1523  000021d8  afa20000	sw	0(r29),r2
 1524  000021dc  54000000	nop
 1525  000021e0          	L105_LF2:
 1526  000021e0  8fc10004	lw	r1,4(r30)
 1527  000021e4  2022ffff	addi	r2,r1,#-1
 1528  000021e8  afc20004	sw	4(r30),r2
 1529  000021ec  6c210000	sgti	r1,r1,#0
 1530  000021f0  1420000c	bnez	r1,L107_LF2
 1531  000021f4  54000000	nop; delay slot nop
 1532  000021f8  08000020	j	L106_LF2
 1533  000021fc  54000000	nop; delay slot nop
 1534  00002200          	L107_LF2:
 1535  00002200  8fc10000	lw	r1,(r30)
 1536  00002204  20220001	addi	r2,r1,#1
 1537  00002208  afc20000	sw	(r30),r2
 1538  0000220c  20020000	addi	r2,r0,(#0x0)&0xff
 1539  00002210  a0220000	sb	(r1),r2
 1540  00002214  0bffffc8	j	L105_LF2
 1541  00002218  54000000	nop; delay slot nop
 1542  0000221c          	L106_LF2:
 1543  0000221c          	L104_LF2:
 1544  0000221c  8fa20000	lw	r2,0(r29)
 1545  00002220  8fdffff8	lw	r31,-8(r30)
 1546  00002224  001ee820	add	r29,r0,r30
 1547  00002228  8fdefffc	lw	r30,-4(r30)
 1548  0000222c  4be00000	jr	r31
 1549  00002230  54000000	nop
 1550  00002234          	.endproc _bzero
 1551  00002234          	.align 2
 1552  00002234          	.proc _min
 1553  00002234          	.global _min
 1554  00002234          	_min:
 1555                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1556  00002234  afbefffc	sw	-4(r29),r30; push fp
 1557  00002238  001df020	add	r30,r0,r29; fp = sp
 1558  0000223c  afbffff8	sw	-8(r29),r31; push ret addr
 1559  00002240  2fbd0010	subui	r29,r29,#16; alloc local storage
 1560  00002244  afa20000	sw	0(r29),r2
 1561  00002248  afa30004	sw	4(r29),r3
 1562  0000224c  8fc10000	lw	r1,(r30)
 1563  00002250  8fc20004	lw	r2,4(r30)
 1564  00002254  0022182c	sle	r3,r1,r2
 1565  00002258  14600008	bnez	r3,L109_LF2
 1566  0000225c  54000000	nop; delay slot nop
 1567  00002260  8fc10004	lw	r1,4(r30)
 1568  00002264          	L109_LF2:
 1569  00002264  08000004	j	L108_LF2
 1570  00002268  54000000	nop; delay slot nop
 1571  0000226c          	L108_LF2:
 1572  0000226c  8fa20000	lw	r2,0(r29)
 1573  00002270  8fa30004	lw	r3,4(r29)
 1574  00002274  8fdffff8	lw	r31,-8(r30)
 1575  00002278  001ee820	add	r29,r0,r30
 1576  0000227c  8fdefffc	lw	r30,-4(r30)
 1577  00002280  4be00000	jr	r31
 1578  00002284  54000000	nop
 1579  00002288          	.endproc _min
 1580                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1581                      ;;;
 1582                      ;;; Most of the traps are called in files from libtraps.
 1585  00002288          	.align 2
 1586  00002288          	.proc _exit
 1587  00002288          	.global _exit
 1588  00002288          	_exit:
 1589  00002288  44000300	trap	#0x300
 1590  0000228c  4be00000	jr	r31
 1591  00002290  54000000	nop
 1592  00002294          	.endproc _exit
 1594                      ; for the benefit of gcc.
 1595  00002294          	.proc ___main
 1596  00002294          	.global ___main
 1597  00002294          	___main:
 1598  00002294  4be00000	jr	r31
 1599  00002298  54000000	nop
 1600  0000229c          	.endproc ___main
 1601  0000229c          	.text
 1602  0000229c          	.global _etext
 1603  0000229c          	_etext:
 1604  0000229c          	.align 3
 1605  000022a0          	.data
 1606  0000310d          	.global _edata
 1607  0000310d          	_edata:
