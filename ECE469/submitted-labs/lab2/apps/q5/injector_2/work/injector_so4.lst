 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 182
    4                      ; Text size: 4308
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  6c657373	.ascii "less then 0 molecules injected!\n\000"
   82  00003004  20746865	
   82  00003008  6e203020	
   82  0000300c  6d6f6c65	
   82  00003010  63756c65	
   82  00003014  7320696e	
   82  00003018  6a656374	
   82  0000301c  6564210a	
   82  00003020  00      	
   83  00003021          	.align 2
   84  00003024          	LC1_LF0:
   85  00003024  534f3420	.ascii "SO4 was injected \n\000"
   85  00003028  77617320	
   85  0000302c  696e6a65	
   85  00003030  63746564	
   85  00003034  200a00  	
   86  00003037          	.align 2
   87  00003038          	LC2_LF0:
   88  00003038  42616420	.ascii "Bad semophore created in injector_h20\n\000"
   88  0000303c  73656d6f	
   88  00003040  70686f72	
   88  00003044  65206372	
   88  00003048  65617465	
   88  0000304c  6420696e	
   88  00003050  20696e6a	
   88  00003054  6563746f	
   88  00003058  725f6832	
   88  0000305c  300a00  	
   89  0000305f          	.align 2
   90  00003060          	LC3_LF0:
   91  00003060  0a696e6a	.ascii "\ninjector_2 is terminated.\n\000"
   91  00003064  6563746f	
   91  00003068  725f3220	
   91  0000306c  69732074	
   91  00003070  65726d69	
   91  00003074  6e617465	
   91  00003078  642e0a00	
   92  0000307c          	.align 2
   93  0000307c          	LC4_LF0:
   94  0000307c  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   94  00003080  73656d61	
   94  00003084  70686f72	
   94  00003088  6520735f	
   94  0000308c  70726f63	
   94  00003090  735f636f	
   94  00003094  6d706c65	
   94  00003098  74656420	
   94  0000309c  28256429	
   94  000030a0  20696e20	
   94  000030a4  00      	
   95  000030a5          	.align 2
   96  000030a8          	LC5_LF0:
   97  000030a8  2c206578	.ascii ", exiting...\n\000"
   97  000030ac  6974696e	
   97  000030b0  672e2e2e	
   97  000030b4  0a00    	
   98  000030b6          	.text
   99  000010d4          	.align 2
  100  000010d4          	.proc _main
  101  000010d4          	.global _main
  102  000010d4          	_main:
  103                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  104  000010d4  afbefffc	sw	-4(r29),r30; push fp
  105  000010d8  001df020	add	r30,r0,r29; fp = sp
  106  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  107  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  108  000010e4  8fc40004	lw	r4,4(r30)
  109  000010e8  0c000fe0	jal	___main
  110  000010ec  54000000	nop; not filled.
  111  000010f0  23bdfff0	addi	r29,r29,#-16
  112  000010f4  8c860004	lw	r6,4(r4)
  113  000010f8  afa60000	sw	(r29),r6
  114  000010fc  20060000	addi	r6,r0,#0
  115  00001100  afa60004	sw	4(r29),r6
  116  00001104  2006000a	addi	r6,r0,#10
  117  00001108  afa60008	sw	8(r29),r6
  118  0000110c  0c000b14	jal	_dstrtol
  119  00001110  54000000	nop; not filled.
  120  00001114  00011020	add	r2,r0,r1
  121  00001118  8c860008	lw	r6,8(r4)
  122  0000111c  afa60000	sw	(r29),r6
  123  00001120  20060000	addi	r6,r0,#0
  124  00001124  afa60004	sw	4(r29),r6
  125  00001128  2006000a	addi	r6,r0,#10
  126  0000112c  afa60008	sw	8(r29),r6
  127  00001130  0c000af0	jal	_dstrtol
  128  00001134  54000000	nop; not filled.
  129  00001138  00011820	add	r3,r0,r1
  130  0000113c  8c86000c	lw	r6,12(r4)
  131  00001140  afa60000	sw	(r29),r6
  132  00001144  20060000	addi	r6,r0,#0
  133  00001148  afa60004	sw	4(r29),r6
  134  0000114c  2006000a	addi	r6,r0,#10
  135  00001150  afa60008	sw	8(r29),r6
  136  00001154  0c000acc	jal	_dstrtol
  137  00001158  54000000	nop; not filled.
  138  0000115c  00012820	add	r5,r0,r1
  139  00001160  23bd0010	addi	r29,r29,#16
  140  00001164  70410000	slei	r1,r2,#0
  141  00001168  1020007c	beqz	r1,L21_LF0
  142  0000116c  54000000	nop; not filled.
  143  00001170  23bdfff8	addi	r29,r29,#-8
  144  00001174  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  145  00001178  24c63000	addui	r6,r6,(LC0_LF0)&0xffff
  146  0000117c  afa60000	sw	(r29),r6
  147  00001180  0c000140	jal	_Printf
  148  00001184  54000000	nop; not filled.
  149  00001188  23bd0008	addi	r29,r29,#8
  150  0000118c  08000058	j	L21_LF0
  151  00001190  54000000	nop; not filled.
  152  00001194          	L17_LF0:
  153  00001194  23bdfff8	addi	r29,r29,#-8
  154  00001198  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  155  0000119c  24c63024	addui	r6,r6,(LC1_LF0)&0xffff
  156  000011a0  afa60000	sw	(r29),r6
  157  000011a4  0c00011c	jal	_Printf
  158  000011a8  54000000	nop; not filled.
  159  000011ac  afa30000	sw	(r29),r3
  160  000011b0  0c000164	jal	_sem_signal
  161  000011b4  54000000	nop; not filled.
  162  000011b8  23bd0008	addi	r29,r29,#8
  163  000011bc  64210001	snei	r1,r1,#1
  164  000011c0  10200020	beqz	r1,L18_LF0
  165  000011c4  54000000	nop; not filled.
  166  000011c8  23bdfff8	addi	r29,r29,#-8
  167  000011cc  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  168  000011d0  24c63038	addui	r6,r6,(LC2_LF0)&0xffff
  169  000011d4  afa60000	sw	(r29),r6
  170  000011d8  0c0000e8	jal	_Printf
  171  000011dc  54000000	nop; not filled.
  172  000011e0  23bd0008	addi	r29,r29,#8
  173  000011e4          	L18_LF0:
  174  000011e4  2042ffff	addi	r2,r2,#-1
  175  000011e8          	L21_LF0:
  176  000011e8  64410000	snei	r1,r2,#0
  177  000011ec  1420ffa4	bnez	r1,L17_LF0
  178  000011f0  54000000	nop; not filled.
  179  000011f4  23bdfff8	addi	r29,r29,#-8
  180  000011f8  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  181  000011fc  24c63060	addui	r6,r6,(LC3_LF0)&0xffff
  182  00001200  afa60000	sw	(r29),r6
  183  00001204  0c0000bc	jal	_Printf
  184  00001208  54000000	nop; not filled.
  185  0000120c  afa50000	sw	(r29),r5
  186  00001210  0c000104	jal	_sem_signal
  187  00001214  54000000	nop; not filled.
  188  00001218  23bd0008	addi	r29,r29,#8
  189  0000121c  64210001	snei	r1,r1,#1
  190  00001220  10200050	beqz	r1,L20_LF0
  191  00001224  54000000	nop; not filled.
  192  00001228  23bdfff8	addi	r29,r29,#-8
  193  0000122c  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  194  00001230  24c6307c	addui	r6,r6,(LC4_LF0)&0xffff
  195  00001234  afa60000	sw	(r29),r6
  196  00001238  afa50004	sw	4(r29),r5
  197  0000123c  0c000084	jal	_Printf
  198  00001240  54000000	nop; not filled.
  199  00001244  8c840000	lw	r4,(r4)
  200  00001248  afa40000	sw	(r29),r4
  201  0000124c  0c000074	jal	_Printf
  202  00001250  54000000	nop; not filled.
  203  00001254  3c060000	lhi	r6,((LC5_LF0)>>16)&0xffff
  204  00001258  24c630a8	addui	r6,r6,(LC5_LF0)&0xffff
  205  0000125c  afa60000	sw	(r29),r6
  206  00001260  0c000060	jal	_Printf
  207  00001264  54000000	nop; not filled.
  208  00001268  0c00010c	jal	_Exit
  209  0000126c  54000000	nop; not filled.
  210  00001270  23bd0008	addi	r29,r29,#8
  211  00001274          	L20_LF0:
  212  00001274  0c000e48	jal	_exit
  213  00001278  54000000	nop
  214  0000127c          	.endproc _main
  215                      ;;;
  216                      ;;; Stub functions for DLX traps.
  217                      ;;;
  218                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  219                      ;;;
  220                      ;;; The traps such as Open and Close
  221                      ;;; (note the capital letters) are for use by user programs.  The traps
  222                      ;;; with names such as open and close (lower case) are for use by the OS.
  223                      ;;;
  226  0000127c          	.align 2
  228                      ;;; The following are the traps to be used by user-level programs
  229                      ;;;
  231  0000127c          	.align 2
  232  0000127c          	.proc _Open
  233  0000127c          	.global _Open
  234  0000127c          	_Open:
  235                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  236                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  237                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  238  0000127c  44000213	trap	#0x213
  239  00001280  4be00000	jr	r31
  240  00001284  54000000	nop
  241  00001288          	.endproc _Open
  243  00001288          	.proc _Close
  244  00001288          	.global _Close
  245  00001288          	_Close:
  246  00001288  44000214	trap	#0x214
  247  0000128c  4be00000	jr	r31
  248  00001290  54000000	nop
  249  00001294          	.endproc _Close
  251  00001294          	.proc _Read
  252  00001294          	.global _Read
  253  00001294          	_Read:
  254  00001294  44000210	trap	#0x210
  255  00001298  4be00000	jr	r31
  256  0000129c  54000000	nop
  257  000012a0          	.endproc _Read
  259  000012a0          	.proc _Write
  260  000012a0          	.global _Write
  261  000012a0          	_Write:
  262  000012a0  44000211	trap	#0x211
  263  000012a4  4be00000	jr	r31
  264  000012a8  54000000	nop
  265  000012ac          	.endproc _Write
  267  000012ac          	.proc _Lseek
  268  000012ac          	.global _Lseek
  269  000012ac          	_Lseek:
  270  000012ac  44000212	trap	#0x212
  271  000012b0  4be00000	jr	r31
  272  000012b4  54000000	nop
  273  000012b8          	.endproc _Lseek
  275  000012b8          	.proc _Putchar
  276  000012b8          	.global _Putchar
  277  000012b8          	_Putchar:
  278  000012b8  44000280	trap	#0x280
  279  000012bc  4be00000	jr	r31
  280  000012c0  54000000	nop
  281  000012c4          	.endproc _Putchar
  283  000012c4          	.proc _Printf
  284  000012c4          	.global _Printf
  285  000012c4          	_Printf:
  286  000012c4  44000201	trap	#0x201
  287  000012c8  4be00000	jr	r31
  288  000012cc  54000000	nop
  289  000012d0          	.endproc _Printf
  291  000012d0          	.proc _getpid
  292  000012d0          	.global _getpid
  293  000012d0          	_getpid:
  294  000012d0  44000431	trap	#0x431
  295  000012d4  4be00000	jr	r31
  296  000012d8  54000000	nop
  297  000012dc          	.endproc _getpid
  299  000012dc          	.proc _process_create
  300  000012dc          	.global _process_create
  301  000012dc          	_process_create:
  302  000012dc  44000432	trap	#0x432
  303  000012e0  4be00000	jr	r31
  304  000012e4  54000000	nop
  305  000012e8          	.endproc _process_create
  307  000012e8          	.proc _shmget
  308  000012e8          	.global _shmget
  309  000012e8          	_shmget:
  310  000012e8  44000440	trap	#0x440
  311  000012ec  4be00000	jr	r31
  312  000012f0  54000000	nop
  313  000012f4          	.endproc _shmget
  315  000012f4          	.proc _shmat
  316  000012f4          	.global _shmat
  317  000012f4          	_shmat:
  318  000012f4  44000441	trap	#0x441
  319  000012f8  4be00000	jr	r31
  320  000012fc  54000000	nop
  321  00001300          	.endproc _shmat
  323  00001300          	.proc _sem_create
  324  00001300          	.global _sem_create
  325  00001300          	_sem_create:
  326  00001300  44000450	trap	#0x450
  327  00001304  4be00000	jr	r31
  328  00001308  54000000	nop
  329  0000130c          	.endproc _sem_create
  331  0000130c          	.proc _sem_wait
  332  0000130c          	.global _sem_wait
  333  0000130c          	_sem_wait:
  334  0000130c  44000451	trap	#0x451
  335  00001310  4be00000	jr	r31
  336  00001314  54000000	nop
  337  00001318          	.endproc _sem_wait
  339  00001318          	.proc _sem_signal
  340  00001318          	.global _sem_signal
  341  00001318          	_sem_signal:
  342  00001318  44000452	trap	#0x452
  343  0000131c  4be00000	jr	r31
  344  00001320  54000000	nop
  345  00001324          	.endproc _sem_signal
  347  00001324          	.proc _lock_create
  348  00001324          	.global _lock_create
  349  00001324          	_lock_create:
  350  00001324  44000453	trap	#0x453
  351  00001328  4be00000	jr	r31
  352  0000132c  54000000	nop
  353  00001330          	.endproc _lock_create
  355  00001330          	.proc _lock_acquire
  356  00001330          	.global _lock_acquire
  357  00001330          	_lock_acquire:
  358  00001330  44000454	trap	#0x454
  359  00001334  4be00000	jr	r31
  360  00001338  54000000	nop
  361  0000133c          	.endproc _lock_acquire
  363  0000133c          	.proc _lock_release
  364  0000133c          	.global _lock_release
  365  0000133c          	_lock_release:
  366  0000133c  44000455	trap	#0x455
  367  00001340  4be00000	jr	r31
  368  00001344  54000000	nop
  369  00001348          	.endproc _lock_release
  371  00001348          	.proc _cond_create
  372  00001348          	.global _cond_create
  373  00001348          	_cond_create:
  374  00001348  44000456	trap	#0x456
  375  0000134c  4be00000	jr	r31
  376  00001350  54000000	nop
  377  00001354          	.endproc _cond_create
  379  00001354          	.proc _cond_wait
  380  00001354          	.global _cond_wait
  381  00001354          	_cond_wait:
  382  00001354  44000457	trap	#0x457
  383  00001358  4be00000	jr	r31
  384  0000135c  54000000	nop
  385  00001360          	.endproc _cond_wait
  387  00001360          	.proc _cond_signal
  388  00001360          	.global _cond_signal
  389  00001360          	_cond_signal:
  390  00001360  44000458	trap	#0x458
  391  00001364  4be00000	jr	r31
  392  00001368  54000000	nop
  393  0000136c          	.endproc _cond_signal
  395  0000136c          	.proc _cond_broadcast
  396  0000136c          	.global _cond_broadcast
  397  0000136c          	_cond_broadcast:
  398  0000136c  44000459	trap	#0x459
  399  00001370  4be00000	jr	r31
  400  00001374  54000000	nop
  401  00001378          	.endproc _cond_broadcast
  403  00001378          	.proc _Exit
  404  00001378          	.global _Exit
  405  00001378          	_Exit:
  406  00001378  44000500	trap	#0x500
  407  0000137c  4be00000	jr	r31
  408  00001380  54000000	nop
  409  00001384          	.endproc _Exit
  410                      ; Compiled by GCC
  412  00001384          	.align 2
  413  00001384          	.proc _isspace
  414  00001384          	.global _isspace
  415  00001384          	_isspace:
  416                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  417  00001384  afbefffc	sw	-4(r29),r30; push fp
  418  00001388  001df020	add	r30,r0,r29; fp = sp
  419  0000138c  afbffff8	sw	-8(r29),r31; push ret addr
  420  00001390  2fbd0018	subui	r29,r29,#24; alloc local storage
  421  00001394  afa20000	sw	0(r29),r2
  422  00001398  afa30004	sw	4(r29),r3
  423  0000139c  afa40008	sw	8(r29),r4
  424  000013a0  83c20003	lb	r2,3(r30)
  425  000013a4  20010000	addi	r1,r0,#0
  426  000013a8  304300ff	andi	r3,r2,#0x00ff
  427  000013ac  60640020	seqi	r4,r3,#32
  428  000013b0  1480002c	bnez	r4,L3_LF2
  429  000013b4  54000000	nop; delay slot nop
  430  000013b8  304300ff	andi	r3,r2,#0x00ff
  431  000013bc  60640009	seqi	r4,r3,#9
  432  000013c0  1480001c	bnez	r4,L3_LF2
  433  000013c4  54000000	nop; delay slot nop
  434  000013c8  304300ff	andi	r3,r2,#0x00ff
  435  000013cc  6064000a	seqi	r4,r3,#10
  436  000013d0  1480000c	bnez	r4,L3_LF2
  437  000013d4  54000000	nop; delay slot nop
  438  000013d8  08000008	j	L2_LF2
  439  000013dc  54000000	nop; delay slot nop
  440  000013e0          	L3_LF2:
  441  000013e0  20010001	addi	r1,r0,#1
  442  000013e4          	L2_LF2:
  443  000013e4  08000004	j	L1_LF2
  444  000013e8  54000000	nop; delay slot nop
  445  000013ec          	L1_LF2:
  446  000013ec  8fa20000	lw	r2,0(r29)
  447  000013f0  8fa30004	lw	r3,4(r29)
  448  000013f4  8fa40008	lw	r4,8(r29)
  449  000013f8  8fdffff8	lw	r31,-8(r30)
  450  000013fc  001ee820	add	r29,r0,r30
  451  00001400  8fdefffc	lw	r30,-4(r30)
  452  00001404  4be00000	jr	r31
  453  00001408  54000000	nop
  454  0000140c          	.endproc _isspace
  455  0000140c          	.align 2
  456  0000140c          	.proc _isxdigit
  457  0000140c          	.global _isxdigit
  458  0000140c          	_isxdigit:
  459                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  460  0000140c  afbefffc	sw	-4(r29),r30; push fp
  461  00001410  001df020	add	r30,r0,r29; fp = sp
  462  00001414  afbffff8	sw	-8(r29),r31; push ret addr
  463  00001418  2fbd0018	subui	r29,r29,#24; alloc local storage
  464  0000141c  afa20000	sw	0(r29),r2
  465  00001420  afa30004	sw	4(r29),r3
  466  00001424  afa40008	sw	8(r29),r4
  467  00001428  83c20003	lb	r2,3(r30)
  468  0000142c  20010000	addi	r1,r0,#0
  469  00001430  304300ff	andi	r3,r2,#0x00ff
  470  00001434  6c64002f	sgtui	r4,r3,#47
  471  00001438  1080001c	beqz	r4,L7_LF2
  472  0000143c  54000000	nop; delay slot nop
  473  00001440  304300ff	andi	r3,r2,#0x00ff
  474  00001444  70640039	sleui	r4,r3,#57
  475  00001448  1480005c	bnez	r4,L6_LF2
  476  0000144c  54000000	nop; delay slot nop
  477  00001450  08000004	j	L7_LF2
  478  00001454  54000000	nop; delay slot nop
  479  00001458          	L7_LF2:
  480  00001458  304300ff	andi	r3,r2,#0x00ff
  481  0000145c  6c640060	sgtui	r4,r3,#96
  482  00001460  1080001c	beqz	r4,L8_LF2
  483  00001464  54000000	nop; delay slot nop
  484  00001468  304300ff	andi	r3,r2,#0x00ff
  485  0000146c  70640066	sleui	r4,r3,#102
  486  00001470  14800034	bnez	r4,L6_LF2
  487  00001474  54000000	nop; delay slot nop
  488  00001478  08000004	j	L8_LF2
  489  0000147c  54000000	nop; delay slot nop
  490  00001480          	L8_LF2:
  491  00001480  304300ff	andi	r3,r2,#0x00ff
  492  00001484  6c640040	sgtui	r4,r3,#64
  493  00001488  10800020	beqz	r4,L5_LF2
  494  0000148c  54000000	nop; delay slot nop
  495  00001490  304300ff	andi	r3,r2,#0x00ff
  496  00001494  70640041	sleui	r4,r3,#65
  497  00001498  1480000c	bnez	r4,L6_LF2
  498  0000149c  54000000	nop; delay slot nop
  499  000014a0  08000008	j	L5_LF2
  500  000014a4  54000000	nop; delay slot nop
  501  000014a8          	L6_LF2:
  502  000014a8  20010001	addi	r1,r0,#1
  503  000014ac          	L5_LF2:
  504  000014ac  08000004	j	L4_LF2
  505  000014b0  54000000	nop; delay slot nop
  506  000014b4          	L4_LF2:
  507  000014b4  8fa20000	lw	r2,0(r29)
  508  000014b8  8fa30004	lw	r3,4(r29)
  509  000014bc  8fa40008	lw	r4,8(r29)
  510  000014c0  8fdffff8	lw	r31,-8(r30)
  511  000014c4  001ee820	add	r29,r0,r30
  512  000014c8  8fdefffc	lw	r30,-4(r30)
  513  000014cc  4be00000	jr	r31
  514  000014d0  54000000	nop
  515  000014d4          	.endproc _isxdigit
  516  000014d4          	.align 2
  517  000014d4          	.proc _dstrcpy
  518  000014d4          	.global _dstrcpy
  519  000014d4          	_dstrcpy:
  520                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  521  000014d4  afbefffc	sw	-4(r29),r30; push fp
  522  000014d8  001df020	add	r30,r0,r29; fp = sp
  523  000014dc  afbffff8	sw	-8(r29),r31; push ret addr
  524  000014e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  525  000014e4  afa20000	sw	0(r29),r2
  526  000014e8  afa30004	sw	4(r29),r3
  527  000014ec  8fc10000	lw	r1,(r30)
  528  000014f0  afc1fff4	sw	-12(r30),r1
  529  000014f4          	L10_LF2:
  530  000014f4  8fc10000	lw	r1,(r30)
  531  000014f8  20220001	addi	r2,r1,#1
  532  000014fc  afc20000	sw	(r30),r2
  533  00001500  8fc20004	lw	r2,4(r30)
  534  00001504  20430001	addi	r3,r2,#1
  535  00001508  afc30004	sw	4(r30),r3
  536  0000150c  80420000	lb	r2,(r2)
  537  00001510  a0220000	sb	(r1),r2
  538  00001514  a3c2fff3	sb	-13(r30),r2
  539  00001518          	L12_LF2:
  540  00001518  93c1fff3	lbu	r1,-13(r30)
  541  0000151c  64220000	snei	r2,r1,#0
  542  00001520  1440000c	bnez	r2,L13_LF2
  543  00001524  54000000	nop; delay slot nop
  544  00001528  0800000c	j	L11_LF2
  545  0000152c  54000000	nop; delay slot nop
  546  00001530          	L13_LF2:
  547  00001530  0bffffc0	j	L10_LF2
  548  00001534  54000000	nop; delay slot nop
  549  00001538          	L11_LF2:
  550  00001538  8fc1fff4	lw	r1,-12(r30)
  551  0000153c  08000004	j	L9_LF2
  552  00001540  54000000	nop; delay slot nop
  553  00001544          	L9_LF2:
  554  00001544  8fa20000	lw	r2,0(r29)
  555  00001548  8fa30004	lw	r3,4(r29)
  556  0000154c  8fdffff8	lw	r31,-8(r30)
  557  00001550  001ee820	add	r29,r0,r30
  558  00001554  8fdefffc	lw	r30,-4(r30)
  559  00001558  4be00000	jr	r31
  560  0000155c  54000000	nop
  561  00001560          	.endproc _dstrcpy
  562  00001560          	.align 2
  563  00001560          	.proc _dstrncpy
  564  00001560          	.global _dstrncpy
  565  00001560          	_dstrncpy:
  566                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  567  00001560  afbefffc	sw	-4(r29),r30; push fp
  568  00001564  001df020	add	r30,r0,r29; fp = sp
  569  00001568  afbffff8	sw	-8(r29),r31; push ret addr
  570  0000156c  2fbd0018	subui	r29,r29,#24; alloc local storage
  571  00001570  afa20000	sw	0(r29),r2
  572  00001574  afa30004	sw	4(r29),r3
  573  00001578  8fc10000	lw	r1,(r30)
  574  0000157c  afc1fff4	sw	-12(r30),r1
  575  00001580          	L15_LF2:
  576  00001580  8fc10008	lw	r1,8(r30)
  577  00001584  2022ffff	addi	r2,r1,#-1
  578  00001588  afc20008	sw	8(r30),r2
  579  0000158c  70210000	slei	r1,r1,#0
  580  00001590  1020000c	beqz	r1,L18_LF2
  581  00001594  54000000	nop; delay slot nop
  582  00001598  08000048	j	L16_LF2
  583  0000159c  54000000	nop; delay slot nop
  584  000015a0          	L18_LF2:
  585  000015a0  8fc10000	lw	r1,(r30)
  586  000015a4  20220001	addi	r2,r1,#1
  587  000015a8  afc20000	sw	(r30),r2
  588  000015ac  8fc20004	lw	r2,4(r30)
  589  000015b0  20430001	addi	r3,r2,#1
  590  000015b4  afc30004	sw	4(r30),r3
  591  000015b8  80420000	lb	r2,(r2)
  592  000015bc  a0220000	sb	(r1),r2
  593  000015c0  a3c2fff3	sb	-13(r30),r2
  594  000015c4          	L17_LF2:
  595  000015c4  93c1fff3	lbu	r1,-13(r30)
  596  000015c8  64220000	snei	r2,r1,#0
  597  000015cc  1440000c	bnez	r2,L19_LF2
  598  000015d0  54000000	nop; delay slot nop
  599  000015d4  0800000c	j	L16_LF2
  600  000015d8  54000000	nop; delay slot nop
  601  000015dc          	L19_LF2:
  602  000015dc  0bffffa0	j	L15_LF2
  603  000015e0  54000000	nop; delay slot nop
  604  000015e4          	L16_LF2:
  605  000015e4  8fc1fff4	lw	r1,-12(r30)
  606  000015e8  08000004	j	L14_LF2
  607  000015ec  54000000	nop; delay slot nop
  608  000015f0          	L14_LF2:
  609  000015f0  8fa20000	lw	r2,0(r29)
  610  000015f4  8fa30004	lw	r3,4(r29)
  611  000015f8  8fdffff8	lw	r31,-8(r30)
  612  000015fc  001ee820	add	r29,r0,r30
  613  00001600  8fdefffc	lw	r30,-4(r30)
  614  00001604  4be00000	jr	r31
  615  00001608  54000000	nop
  616  0000160c          	.endproc _dstrncpy
  617  0000160c          	.align 2
  618  0000160c          	.proc _dstrcat
  619  0000160c          	.global _dstrcat
  620  0000160c          	_dstrcat:
  621                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  622  0000160c  afbefffc	sw	-4(r29),r30; push fp
  623  00001610  001df020	add	r30,r0,r29; fp = sp
  624  00001614  afbffff8	sw	-8(r29),r31; push ret addr
  625  00001618  2fbd0018	subui	r29,r29,#24; alloc local storage
  626  0000161c  afa20000	sw	0(r29),r2
  627  00001620  8fc10000	lw	r1,(r30)
  628  00001624  afc1fff4	sw	-12(r30),r1
  629  00001628          	L21_LF2:
  630  00001628  8fc10000	lw	r1,(r30)
  631  0000162c  90220000	lbu	r2,(r1)
  632  00001630  64410000	snei	r1,r2,#0
  633  00001634  1420000c	bnez	r1,L23_LF2
  634  00001638  54000000	nop; delay slot nop
  635  0000163c  0800001c	j	L22_LF2
  636  00001640  54000000	nop; delay slot nop
  637  00001644          	L23_LF2:
  638  00001644  8fc20000	lw	r2,(r30)
  639  00001648  20410001	addi	r1,r2,#1
  640  0000164c  00011020	add	r2,r0,r1
  641  00001650  afc20000	sw	(r30),r2
  642  00001654  0bffffd0	j	L21_LF2
  643  00001658  54000000	nop; delay slot nop
  644  0000165c          	L22_LF2:
  645  0000165c  23bdfff8	addi	r29,r29,#-8
  646  00001660  001d0820	add	r1,r0,r29
  647  00001664  8fc20000	lw	r2,(r30)
  648  00001668  ac220000	sw	(r1),r2
  649  0000166c  8fc20004	lw	r2,4(r30)
  650  00001670  ac220004	sw	4(r1),r2
  651  00001674  0ffffe5c	jal	_dstrcpy
  652  00001678  54000000	nop; delay slot nop
  653  0000167c  23bd0008	addi	r29,r29,#8
  654  00001680  8fc1fff4	lw	r1,-12(r30)
  655  00001684  08000004	j	L20_LF2
  656  00001688  54000000	nop; delay slot nop
  657  0000168c          	L20_LF2:
  658  0000168c  8fa20000	lw	r2,0(r29)
  659  00001690  8fdffff8	lw	r31,-8(r30)
  660  00001694  001ee820	add	r29,r0,r30
  661  00001698  8fdefffc	lw	r30,-4(r30)
  662  0000169c  4be00000	jr	r31
  663  000016a0  54000000	nop
  664  000016a4          	.endproc _dstrcat
  665  000016a4          	.align 2
  666  000016a4          	.proc _dstrncmp
  667  000016a4          	.global _dstrncmp
  668  000016a4          	_dstrncmp:
  669                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  670  000016a4  afbefffc	sw	-4(r29),r30; push fp
  671  000016a8  001df020	add	r30,r0,r29; fp = sp
  672  000016ac  afbffff8	sw	-8(r29),r31; push ret addr
  673  000016b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  674  000016b4  afa20000	sw	0(r29),r2
  675  000016b8  afa30004	sw	4(r29),r3
  676  000016bc  54000000	nop
  677  000016c0  20010000	addi	r1,r0,#0
  678  000016c4  afc1fff4	sw	-12(r30),r1
  679  000016c8          	L25_LF2:
  680  000016c8  8fc1fff4	lw	r1,-12(r30)
  681  000016cc  8fc20008	lw	r2,8(r30)
  682  000016d0  0022082a	slt	r1,r1,r2
  683  000016d4  1420000c	bnez	r1,L28_LF2
  684  000016d8  54000000	nop; delay slot nop
  685  000016dc  08000088	j	L26_LF2
  686  000016e0  54000000	nop; delay slot nop
  687  000016e4          	L28_LF2:
  688  000016e4  8fc10004	lw	r1,4(r30)
  689  000016e8  90220000	lbu	r2,(r1)
  690  000016ec  64410000	snei	r1,r2,#0
  691  000016f0  14200018	bnez	r1,L29_LF2
  692  000016f4  54000000	nop; delay slot nop
  693  000016f8  20010000	addi	r1,r0,#0
  694  000016fc  080000d8	j	L24_LF2
  695  00001700  54000000	nop; delay slot nop
  696  00001704  08000028	j	L30_LF2
  697  00001708  54000000	nop; delay slot nop
  698  0000170c          	L29_LF2:
  699  0000170c  8fc10000	lw	r1,(r30)
  700  00001710  8fc20004	lw	r2,4(r30)
  701  00001714  90210000	lbu	r1,(r1)
  702  00001718  90420000	lbu	r2,(r2)
  703  0000171c  00220829	sne	r1,r1,r2
  704  00001720  1020000c	beqz	r1,L30_LF2
  705  00001724  54000000	nop; delay slot nop
  706  00001728  0800003c	j	L26_LF2
  707  0000172c  54000000	nop; delay slot nop
  708  00001730          	L31_LF2:
  709  00001730          	L30_LF2:
  710  00001730  8fc20000	lw	r2,(r30)
  711  00001734  20410001	addi	r1,r2,#1
  712  00001738  00011020	add	r2,r0,r1
  713  0000173c  afc20000	sw	(r30),r2
  714  00001740  8fc20004	lw	r2,4(r30)
  715  00001744  20410001	addi	r1,r2,#1
  716  00001748  00011020	add	r2,r0,r1
  717  0000174c  afc20004	sw	4(r30),r2
  718  00001750          	L27_LF2:
  719  00001750  8fc2fff4	lw	r2,-12(r30)
  720  00001754  20410001	addi	r1,r2,#1
  721  00001758  00011020	add	r2,r0,r1
  722  0000175c  afc2fff4	sw	-12(r30),r2
  723  00001760  0bffff64	j	L25_LF2
  724  00001764  54000000	nop; delay slot nop
  725  00001768          	L26_LF2:
  726  00001768  8fc1fff4	lw	r1,-12(r30)
  727  0000176c  8fc20008	lw	r2,8(r30)
  728  00001770  00220828	seq	r1,r1,r2
  729  00001774  10200018	beqz	r1,L32_LF2
  730  00001778  54000000	nop; delay slot nop
  731  0000177c  20010000	addi	r1,r0,#0
  732  00001780  08000054	j	L24_LF2
  733  00001784  54000000	nop; delay slot nop
  734  00001788  0800004c	j	L33_LF2
  735  0000178c  54000000	nop; delay slot nop
  736  00001790          	L32_LF2:
  737  00001790  8fc20000	lw	r2,(r30)
  738  00001794  90410000	lbu	r1,(r2)
  739  00001798  8fc20004	lw	r2,4(r30)
  740  0000179c  90430000	lbu	r3,(r2)
  741  000017a0  00230822	sub	r1,r1,r3
  742  000017a4  74220000	sgei	r2,r1,#0
  743  000017a8  10400020	beqz	r2,L34_LF2
  744  000017ac  54000000	nop; delay slot nop
  745  000017b0  8fc10000	lw	r1,(r30)
  746  000017b4  8fc20004	lw	r2,4(r30)
  747  000017b8  90210000	lbu	r1,(r1)
  748  000017bc  90420000	lbu	r2,(r2)
  749  000017c0  00220829	sne	r1,r1,r2
  750  000017c4  08000008	j	L35_LF2
  751  000017c8  54000000	nop; delay slot nop
  752  000017cc          	L34_LF2:
  753  000017cc  2001ffff	addi	r1,r0,#-1
  754  000017d0          	L35_LF2:
  755  000017d0  08000004	j	L24_LF2
  756  000017d4  54000000	nop; delay slot nop
  757  000017d8          	L33_LF2:
  758  000017d8          	L24_LF2:
  759  000017d8  8fa20000	lw	r2,0(r29)
  760  000017dc  8fa30004	lw	r3,4(r29)
  761  000017e0  8fdffff8	lw	r31,-8(r30)
  762  000017e4  001ee820	add	r29,r0,r30
  763  000017e8  8fdefffc	lw	r30,-4(r30)
  764  000017ec  4be00000	jr	r31
  765  000017f0  54000000	nop
  766  000017f4          	.endproc _dstrncmp
  767  000017f4          	.align 2
  768  000017f4          	.proc _dstrlen
  769  000017f4          	.global _dstrlen
  770  000017f4          	_dstrlen:
  771                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  772  000017f4  afbefffc	sw	-4(r29),r30; push fp
  773  000017f8  001df020	add	r30,r0,r29; fp = sp
  774  000017fc  afbffff8	sw	-8(r29),r31; push ret addr
  775  00001800  2fbd0018	subui	r29,r29,#24; alloc local storage
  776  00001804  afa20000	sw	0(r29),r2
  777  00001808  20010000	addi	r1,r0,#0
  778  0000180c  afc1fff4	sw	-12(r30),r1
  779  00001810          	L37_LF2:
  780  00001810  8fc10000	lw	r1,(r30)
  781  00001814  20220001	addi	r2,r1,#1
  782  00001818  afc20000	sw	(r30),r2
  783  0000181c  90210000	lbu	r1,(r1)
  784  00001820  64220000	snei	r2,r1,#0
  785  00001824  1440000c	bnez	r2,L39_LF2
  786  00001828  54000000	nop; delay slot nop
  787  0000182c  0800001c	j	L38_LF2
  788  00001830  54000000	nop; delay slot nop
  789  00001834          	L39_LF2:
  790  00001834  8fc2fff4	lw	r2,-12(r30)
  791  00001838  20410001	addi	r1,r2,#1
  792  0000183c  00011020	add	r2,r0,r1
  793  00001840  afc2fff4	sw	-12(r30),r2
  794  00001844  0bffffc8	j	L37_LF2
  795  00001848  54000000	nop; delay slot nop
  796  0000184c          	L38_LF2:
  797  0000184c  8fc1fff4	lw	r1,-12(r30)
  798  00001850  08000004	j	L36_LF2
  799  00001854  54000000	nop; delay slot nop
  800  00001858          	L36_LF2:
  801  00001858  8fa20000	lw	r2,0(r29)
  802  0000185c  8fdffff8	lw	r31,-8(r30)
  803  00001860  001ee820	add	r29,r0,r30
  804  00001864  8fdefffc	lw	r30,-4(r30)
  805  00001868  4be00000	jr	r31
  806  0000186c  54000000	nop
  807  00001870          	.endproc _dstrlen
  808  00001870          	.align 2
  809  00001870          	.proc _dstrstr
  810  00001870          	.global _dstrstr
  811  00001870          	_dstrstr:
  812                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  813  00001870  afbefffc	sw	-4(r29),r30; push fp
  814  00001874  001df020	add	r30,r0,r29; fp = sp
  815  00001878  afbffff8	sw	-8(r29),r31; push ret addr
  816  0000187c  2fbd0018	subui	r29,r29,#24; alloc local storage
  817  00001880  afa20000	sw	0(r29),r2
  818  00001884  23bdfff8	addi	r29,r29,#-8
  819  00001888  001d0820	add	r1,r0,r29
  820  0000188c  8fc20004	lw	r2,4(r30)
  821  00001890  ac220000	sw	(r1),r2
  822  00001894  0fffff5c	jal	_dstrlen
  823  00001898  54000000	nop; delay slot nop
  824  0000189c  23bd0008	addi	r29,r29,#8
  825  000018a0  afc1fff4	sw	-12(r30),r1
  826  000018a4          	L41_LF2:
  827  000018a4  8fc10000	lw	r1,(r30)
  828  000018a8  90220000	lbu	r2,(r1)
  829  000018ac  64410000	snei	r1,r2,#0
  830  000018b0  1420000c	bnez	r1,L43_LF2
  831  000018b4  54000000	nop; delay slot nop
  832  000018b8  08000060	j	L42_LF2
  833  000018bc  54000000	nop; delay slot nop
  834  000018c0          	L43_LF2:
  835  000018c0  23bdfff0	addi	r29,r29,#-16
  836  000018c4  001d0820	add	r1,r0,r29
  837  000018c8  8fc20000	lw	r2,(r30)
  838  000018cc  ac220000	sw	(r1),r2
  839  000018d0  8fc20004	lw	r2,4(r30)
  840  000018d4  ac220004	sw	4(r1),r2
  841  000018d8  8fc2fff4	lw	r2,-12(r30)
  842  000018dc  ac220008	sw	8(r1),r2
  843  000018e0  0ffffdc0	jal	_dstrncmp
  844  000018e4  54000000	nop; delay slot nop
  845  000018e8  23bd0010	addi	r29,r29,#16
  846  000018ec  64220000	snei	r2,r1,#0
  847  000018f0  14400010	bnez	r2,L44_LF2
  848  000018f4  54000000	nop; delay slot nop
  849  000018f8  8fc10000	lw	r1,(r30)
  850  000018fc  08000028	j	L40_LF2
  851  00001900  54000000	nop; delay slot nop
  852  00001904          	L44_LF2:
  853  00001904  8fc20000	lw	r2,(r30)
  854  00001908  20410001	addi	r1,r2,#1
  855  0000190c  00011020	add	r2,r0,r1
  856  00001910  afc20000	sw	(r30),r2
  857  00001914  0bffff8c	j	L41_LF2
  858  00001918  54000000	nop; delay slot nop
  859  0000191c          	L42_LF2:
  860  0000191c  20010000	addi	r1,r0,#0
  861  00001920  08000004	j	L40_LF2
  862  00001924  54000000	nop; delay slot nop
  863  00001928          	L40_LF2:
  864  00001928  8fa20000	lw	r2,0(r29)
  865  0000192c  8fdffff8	lw	r31,-8(r30)
  866  00001930  001ee820	add	r29,r0,r30
  867  00001934  8fdefffc	lw	r30,-4(r30)
  868  00001938  4be00000	jr	r31
  869  0000193c  54000000	nop
  870  00001940          	.endproc _dstrstr
  871  00001940          	.align 2
  872  00001940          	.proc _dmindex
  873  00001940          	.global _dmindex
  874  00001940          	_dmindex:
  875                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  876  00001940  afbefffc	sw	-4(r29),r30; push fp
  877  00001944  001df020	add	r30,r0,r29; fp = sp
  878  00001948  afbffff8	sw	-8(r29),r31; push ret addr
  879  0000194c  2fbd0018	subui	r29,r29,#24; alloc local storage
  880  00001950  afa20000	sw	0(r29),r2
  881  00001954  54000000	nop
  882  00001958          	L46_LF2:
  883  00001958  8fc10000	lw	r1,(r30)
  884  0000195c  90220000	lbu	r2,(r1)
  885  00001960  64410000	snei	r1,r2,#0
  886  00001964  1420000c	bnez	r1,L48_LF2
  887  00001968  54000000	nop; delay slot nop
  888  0000196c  08000070	j	L47_LF2
  889  00001970  54000000	nop; delay slot nop
  890  00001974          	L48_LF2:
  891  00001974  8fc10004	lw	r1,4(r30)
  892  00001978  afc1fff4	sw	-12(r30),r1
  893  0000197c          	L49_LF2:
  894  0000197c  8fc1fff4	lw	r1,-12(r30)
  895  00001980  90220000	lbu	r2,(r1)
  896  00001984  64410000	snei	r1,r2,#0
  897  00001988  1420000c	bnez	r1,L52_LF2
  898  0000198c  54000000	nop; delay slot nop
  899  00001990  08000044	j	L50_LF2
  900  00001994  54000000	nop; delay slot nop
  901  00001998          	L52_LF2:
  902  00001998  8fc10000	lw	r1,(r30)
  903  0000199c  8fc2fff4	lw	r2,-12(r30)
  904  000019a0  90210000	lbu	r1,(r1)
  905  000019a4  90420000	lbu	r2,(r2)
  906  000019a8  00220828	seq	r1,r1,r2
  907  000019ac  10200010	beqz	r1,L51_LF2
  908  000019b0  54000000	nop; delay slot nop
  909  000019b4  8fc10000	lw	r1,(r30)
  910  000019b8  08000030	j	L45_LF2
  911  000019bc  54000000	nop; delay slot nop
  912  000019c0          	L53_LF2:
  913  000019c0          	L51_LF2:
  914  000019c0  8fc2fff4	lw	r2,-12(r30)
  915  000019c4  20410001	addi	r1,r2,#1
  916  000019c8  00011020	add	r2,r0,r1
  917  000019cc  afc2fff4	sw	-12(r30),r2
  918  000019d0  0bffffa8	j	L49_LF2
  919  000019d4  54000000	nop; delay slot nop
  920  000019d8          	L50_LF2:
  921  000019d8  0bffff7c	j	L46_LF2
  922  000019dc  54000000	nop; delay slot nop
  923  000019e0          	L47_LF2:
  924  000019e0  20010000	addi	r1,r0,#0
  925  000019e4  08000004	j	L45_LF2
  926  000019e8  54000000	nop; delay slot nop
  927  000019ec          	L45_LF2:
  928  000019ec  8fa20000	lw	r2,0(r29)
  929  000019f0  8fdffff8	lw	r31,-8(r30)
  930  000019f4  001ee820	add	r29,r0,r30
  931  000019f8  8fdefffc	lw	r30,-4(r30)
  932  000019fc  4be00000	jr	r31
  933  00001a00  54000000	nop
  934  00001a04          	.endproc _dmindex
  935  00001a04          	.align 2
  936  00001a04          	.proc _dindex
  937  00001a04          	.global _dindex
  938  00001a04          	_dindex:
  939                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  940  00001a04  afbefffc	sw	-4(r29),r30; push fp
  941  00001a08  001df020	add	r30,r0,r29; fp = sp
  942  00001a0c  afbffff8	sw	-8(r29),r31; push ret addr
  943  00001a10  2fbd0010	subui	r29,r29,#16; alloc local storage
  944  00001a14  afa20000	sw	0(r29),r2
  945  00001a18  54000000	nop
  946  00001a1c          	L55_LF2:
  947  00001a1c  8fc10000	lw	r1,(r30)
  948  00001a20  90220000	lbu	r2,(r1)
  949  00001a24  64410000	snei	r1,r2,#0
  950  00001a28  1420000c	bnez	r1,L57_LF2
  951  00001a2c  54000000	nop; delay slot nop
  952  00001a30  08000040	j	L56_LF2
  953  00001a34  54000000	nop; delay slot nop
  954  00001a38          	L57_LF2:
  955  00001a38  8fc10000	lw	r1,(r30)
  956  00001a3c  90220000	lbu	r2,(r1)
  957  00001a40  8fc10004	lw	r1,4(r30)
  958  00001a44  00411028	seq	r2,r2,r1
  959  00001a48  10400010	beqz	r2,L58_LF2
  960  00001a4c  54000000	nop; delay slot nop
  961  00001a50  8fc10000	lw	r1,(r30)
  962  00001a54  08000028	j	L54_LF2
  963  00001a58  54000000	nop; delay slot nop
  964  00001a5c          	L58_LF2:
  965  00001a5c  8fc20000	lw	r2,(r30)
  966  00001a60  20410001	addi	r1,r2,#1
  967  00001a64  00011020	add	r2,r0,r1
  968  00001a68  afc20000	sw	(r30),r2
  969  00001a6c  0bffffac	j	L55_LF2
  970  00001a70  54000000	nop; delay slot nop
  971  00001a74          	L56_LF2:
  972  00001a74  20010000	addi	r1,r0,#0
  973  00001a78  08000004	j	L54_LF2
  974  00001a7c  54000000	nop; delay slot nop
  975  00001a80          	L54_LF2:
  976  00001a80  8fa20000	lw	r2,0(r29)
  977  00001a84  8fdffff8	lw	r31,-8(r30)
  978  00001a88  001ee820	add	r29,r0,r30
  979  00001a8c  8fdefffc	lw	r30,-4(r30)
  980  00001a90  4be00000	jr	r31
  981  00001a94  54000000	nop
  982  00001a98          	.endproc _dindex
  983  00001a98          	.align 2
  984  00001a98          	.proc _ditoa
  985  00001a98          	.global _ditoa
  986  00001a98          	_ditoa:
  987                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  988  00001a98  afbefffc	sw	-4(r29),r30; push fp
  989  00001a9c  001df020	add	r30,r0,r29; fp = sp
  990  00001aa0  afbffff8	sw	-8(r29),r31; push ret addr
  991  00001aa4  2fbd0018	subui	r29,r29,#24; alloc local storage
  992  00001aa8  afa20000	sw	0(r29),r2
  993  00001aac  afa30004	sw	4(r29),r3
  994  00001ab0  8fc10000	lw	r1,(r30)
  995  00001ab4  68220000	slti	r2,r1,#0
  996  00001ab8  1040002c	beqz	r2,L60_LF2
  997  00001abc  54000000	nop; delay slot nop
  998  00001ac0  8fc10004	lw	r1,4(r30)
  999  00001ac4  20220001	addi	r2,r1,#1
 1000  00001ac8  afc20004	sw	4(r30),r2
 1001  00001acc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1002  00001ad0  a0220000	sb	(r1),r2
 1003  00001ad4  8fc10000	lw	r1,(r30)
 1004  00001ad8  00011022	sub	r2,r0,r1
 1005  00001adc  afc20000	sw	(r30),r2
 1006  00001ae0  08000118	j	L61_LF2
 1007  00001ae4  54000000	nop; delay slot nop
 1008  00001ae8          	L60_LF2:
 1009  00001ae8  8fc10000	lw	r1,(r30)
 1010  00001aec  64220000	snei	r2,r1,#0
 1011  00001af0  14400020	bnez	r2,L62_LF2
 1012  00001af4  54000000	nop; delay slot nop
 1013  00001af8  8fc10004	lw	r1,4(r30)
 1014  00001afc  20220001	addi	r2,r1,#1
 1015  00001b00  afc20004	sw	4(r30),r2
 1016  00001b04  20020030	addi	r2,r0,(#0x30)&0xff
 1017  00001b08  a0220000	sb	(r1),r2
 1018  00001b0c  080000ec	j	L61_LF2
 1019  00001b10  54000000	nop; delay slot nop
 1020  00001b14          	L62_LF2:
 1021  00001b14  20010001	addi	r1,r0,#1
 1022  00001b18  afc1fff4	sw	-12(r30),r1
 1023  00001b1c          	L64_LF2:
 1024  00001b1c  8fc1fff4	lw	r1,-12(r30)
 1025  00001b20  8fc20000	lw	r2,(r30)
 1026  00001b24  0022082c	sle	r1,r1,r2
 1027  00001b28  1420000c	bnez	r1,L66_LF2
 1028  00001b2c  54000000	nop; delay slot nop
 1029  00001b30  08000024	j	L65_LF2
 1030  00001b34  54000000	nop; delay slot nop
 1031  00001b38          	L67_LF2:
 1032  00001b38          	L66_LF2:
 1033  00001b38  8fc1fff4	lw	r1,-12(r30)
 1034  00001b3c  00011820	add	r3,r0,r1
 1035  00001b40  50620002	slli	r2,r3,#0x2
 1036  00001b44  00411020	add	r2,r2,r1
 1037  00001b48  50410001	slli	r1,r2,#0x1
 1038  00001b4c  afc1fff4	sw	-12(r30),r1
 1039  00001b50  0bffffc8	j	L64_LF2
 1040  00001b54  54000000	nop; delay slot nop
 1041  00001b58          	L65_LF2:
 1042  00001b58  54000000	nop
 1043  00001b5c          	L68_LF2:
 1044  00001b5c  8fc1fff4	lw	r1,-12(r30)
 1045  00001b60  2002000a	addi	r2,r0,#10
 1046  00001b64  00200035	movi2fp	f0,r1
 1047  00001b68  00400835	movi2fp	f1,r2
 1048  00001b6c  0401000f	div	f0,f0,f1
 1049  00001b70  00000834	movfp2i	r1,f0
 1050  00001b74  afc1fff4	sw	-12(r30),r1
 1051  00001b78  8fc10004	lw	r1,4(r30)
 1052  00001b7c  20220001	addi	r2,r1,#1
 1053  00001b80  afc20004	sw	4(r30),r2
 1054  00001b84  8fc20000	lw	r2,(r30)
 1055  00001b88  8fc3fff4	lw	r3,-12(r30)
 1056  00001b8c  00400035	movi2fp	f0,r2
 1057  00001b90  00600835	movi2fp	f1,r3
 1058  00001b94  0401000f	div	f0,f0,f1
 1059  00001b98  00001034	movfp2i	r2,f0
 1060  00001b9c  00021820	add	r3,r0,r2
 1061  00001ba0  20620030	addi	r2,r3,#48
 1062  00001ba4  a0220000	sb	(r1),r2
 1063  00001ba8  8fc10000	lw	r1,(r30)
 1064  00001bac  8fc3fff4	lw	r3,-12(r30)
 1065  00001bb0  00200035	movi2fp	f0,r1
 1066  00001bb4  00600835	movi2fp	f1,r3
 1067  00001bb8  0401000f	div	f0,f0,f1
 1068  00001bbc  00001034	movfp2i	r2,f0
 1069  00001bc0  8fc3fff4	lw	r3,-12(r30)
 1070  00001bc4  00400035	movi2fp	f0,r2
 1071  00001bc8  00600835	movi2fp	f1,r3
 1072  00001bcc  0401000e	mult	f0,f0,f1
 1073  00001bd0  00001034	movfp2i	r2,f0
 1074  00001bd4  00220822	sub	r1,r1,r2
 1075  00001bd8  afc10000	sw	(r30),r1
 1076  00001bdc          	L70_LF2:
 1077  00001bdc  8fc1fff4	lw	r1,-12(r30)
 1078  00001be0  6c220001	sgti	r2,r1,#1
 1079  00001be4  1440000c	bnez	r2,L71_LF2
 1080  00001be8  54000000	nop; delay slot nop
 1081  00001bec  0800000c	j	L61_LF2
 1082  00001bf0  54000000	nop; delay slot nop
 1083  00001bf4          	L71_LF2:
 1084  00001bf4  0bffff64	j	L68_LF2
 1085  00001bf8  54000000	nop; delay slot nop
 1086  00001bfc          	L69_LF2:
 1087  00001bfc          	L63_LF2:
 1088  00001bfc          	L61_LF2:
 1089  00001bfc  8fc10004	lw	r1,4(r30)
 1090  00001c00  20020000	addi	r2,r0,(#0x0)&0xff
 1091  00001c04  a0220000	sb	(r1),r2
 1092  00001c08          	L59_LF2:
 1093  00001c08  8fa20000	lw	r2,0(r29)
 1094  00001c0c  8fa30004	lw	r3,4(r29)
 1095  00001c10  8fdffff8	lw	r31,-8(r30)
 1096  00001c14  001ee820	add	r29,r0,r30
 1097  00001c18  8fdefffc	lw	r30,-4(r30)
 1098  00001c1c  4be00000	jr	r31
 1099  00001c20  54000000	nop
 1100  00001c24          	.endproc _ditoa
 1101  00001c24          	.align 2
 1102  00001c24          	.proc _dstrtol
 1103  00001c24          	.global _dstrtol
 1104  00001c24          	_dstrtol:
 1105                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1106  00001c24  afbefffc	sw	-4(r29),r30; push fp
 1107  00001c28  001df020	add	r30,r0,r29; fp = sp
 1108  00001c2c  afbffff8	sw	-8(r29),r31; push ret addr
 1109  00001c30  2fbd0020	subui	r29,r29,#32; alloc local storage
 1110  00001c34  afa20000	sw	0(r29),r2
 1111  00001c38  20010000	addi	r1,r0,#0
 1112  00001c3c  afc1fff4	sw	-12(r30),r1
 1113  00001c40          	L73_LF2:
 1114  00001c40  8fc10000	lw	r1,(r30)
 1115  00001c44  90220000	lbu	r2,(r1)
 1116  00001c48  60410020	seqi	r1,r2,#32
 1117  00001c4c  14200034	bnez	r1,L75_LF2
 1118  00001c50  54000000	nop; delay slot nop
 1119  00001c54  8fc10000	lw	r1,(r30)
 1120  00001c58  90220000	lbu	r2,(r1)
 1121  00001c5c  60410009	seqi	r1,r2,#9
 1122  00001c60  14200020	bnez	r1,L75_LF2
 1123  00001c64  54000000	nop; delay slot nop
 1124  00001c68  8fc10000	lw	r1,(r30)
 1125  00001c6c  90220000	lbu	r2,(r1)
 1126  00001c70  6041000a	seqi	r1,r2,#10
 1127  00001c74  1420000c	bnez	r1,L75_LF2
 1128  00001c78  54000000	nop; delay slot nop
 1129  00001c7c  0800001c	j	L74_LF2
 1130  00001c80  54000000	nop; delay slot nop
 1131  00001c84          	L75_LF2:
 1132  00001c84  8fc20000	lw	r2,(r30)
 1133  00001c88  20410001	addi	r1,r2,#1
 1134  00001c8c  00011020	add	r2,r0,r1
 1135  00001c90  afc20000	sw	(r30),r2
 1136  00001c94  0bffffa8	j	L73_LF2
 1137  00001c98  54000000	nop; delay slot nop
 1138  00001c9c          	L74_LF2:
 1139  00001c9c  8fc10004	lw	r1,4(r30)
 1140  00001ca0  64220000	snei	r2,r1,#0
 1141  00001ca4  10400010	beqz	r2,L76_LF2
 1142  00001ca8  54000000	nop; delay slot nop
 1143  00001cac  8fc10004	lw	r1,4(r30)
 1144  00001cb0  8fc20000	lw	r2,(r30)
 1145  00001cb4  ac220000	sw	(r1),r2
 1146  00001cb8          	L76_LF2:
 1147  00001cb8  8fc10000	lw	r1,(r30)
 1148  00001cbc  90220000	lbu	r2,(r1)
 1149  00001cc0  64410000	snei	r1,r2,#0
 1150  00001cc4  14200010	bnez	r1,L77_LF2
 1151  00001cc8  54000000	nop; delay slot nop
 1152  00001ccc  8fc1fff4	lw	r1,-12(r30)
 1153  00001cd0  08000294	j	L72_LF2
 1154  00001cd4  54000000	nop; delay slot nop
 1155  00001cd8          	L77_LF2:
 1156  00001cd8  8fc10000	lw	r1,(r30)
 1157  00001cdc  90220000	lbu	r2,(r1)
 1158  00001ce0  6041002d	seqi	r1,r2,#45
 1159  00001ce4  10200024	beqz	r1,L78_LF2
 1160  00001ce8  54000000	nop; delay slot nop
 1161  00001cec  2001ffff	addi	r1,r0,#-1
 1162  00001cf0  afc1ffec	sw	-20(r30),r1
 1163  00001cf4  8fc20000	lw	r2,(r30)
 1164  00001cf8  20410001	addi	r1,r2,#1
 1165  00001cfc  00011020	add	r2,r0,r1
 1166  00001d00  afc20000	sw	(r30),r2
 1167  00001d04  0800000c	j	L79_LF2
 1168  00001d08  54000000	nop; delay slot nop
 1169  00001d0c          	L78_LF2:
 1170  00001d0c  20010001	addi	r1,r0,#1
 1171  00001d10  afc1ffec	sw	-20(r30),r1
 1172  00001d14          	L79_LF2:
 1173  00001d14  8fc10008	lw	r1,8(r30)
 1174  00001d18  64220000	snei	r2,r1,#0
 1175  00001d1c  14400090	bnez	r2,L80_LF2
 1176  00001d20  54000000	nop; delay slot nop
 1177  00001d24  8fc10000	lw	r1,(r30)
 1178  00001d28  90220000	lbu	r2,(r1)
 1179  00001d2c  60410030	seqi	r1,r2,#48
 1180  00001d30  10200074	beqz	r1,L81_LF2
 1181  00001d34  54000000	nop; delay slot nop
 1182  00001d38  8fc20000	lw	r2,(r30)
 1183  00001d3c  20410001	addi	r1,r2,#1
 1184  00001d40  00011020	add	r2,r0,r1
 1185  00001d44  afc20000	sw	(r30),r2
 1186  00001d48  8fc10000	lw	r1,(r30)
 1187  00001d4c  90220000	lbu	r2,(r1)
 1188  00001d50  60410078	seqi	r1,r2,#120
 1189  00001d54  14200020	bnez	r1,L83_LF2
 1190  00001d58  54000000	nop; delay slot nop
 1191  00001d5c  8fc10000	lw	r1,(r30)
 1192  00001d60  90220000	lbu	r2,(r1)
 1193  00001d64  60410058	seqi	r1,r2,#88
 1194  00001d68  1420000c	bnez	r1,L83_LF2
 1195  00001d6c  54000000	nop; delay slot nop
 1196  00001d70  08000024	j	L82_LF2
 1197  00001d74  54000000	nop; delay slot nop
 1198  00001d78          	L83_LF2:
 1199  00001d78  20010010	addi	r1,r0,#16
 1200  00001d7c  afc10008	sw	8(r30),r1
 1201  00001d80  8fc20000	lw	r2,(r30)
 1202  00001d84  20410001	addi	r1,r2,#1
 1203  00001d88  00011020	add	r2,r0,r1
 1204  00001d8c  afc20000	sw	(r30),r2
 1205  00001d90  0800000c	j	L84_LF2
 1206  00001d94  54000000	nop; delay slot nop
 1207  00001d98          	L82_LF2:
 1208  00001d98  20010008	addi	r1,r0,#8
 1209  00001d9c  afc10008	sw	8(r30),r1
 1210  00001da0          	L84_LF2:
 1211  00001da0  0800000c	j	L80_LF2
 1212  00001da4  54000000	nop; delay slot nop
 1213  00001da8          	L81_LF2:
 1214  00001da8  2001000a	addi	r1,r0,#10
 1215  00001dac  afc10008	sw	8(r30),r1
 1216  00001db0          	L85_LF2:
 1217  00001db0          	L80_LF2:
 1218  00001db0  8fc10008	lw	r1,8(r30)
 1219  00001db4  70220000	slei	r2,r1,#0
 1220  00001db8  1440001c	bnez	r2,L87_LF2
 1221  00001dbc  54000000	nop; delay slot nop
 1222  00001dc0  8fc10008	lw	r1,8(r30)
 1223  00001dc4  6c220010	sgti	r2,r1,#16
 1224  00001dc8  1440000c	bnez	r2,L87_LF2
 1225  00001dcc  54000000	nop; delay slot nop
 1226  00001dd0  08000010	j	L86_LF2
 1227  00001dd4  54000000	nop; delay slot nop
 1228  00001dd8          	L87_LF2:
 1229  00001dd8  8fc1fff4	lw	r1,-12(r30)
 1230  00001ddc  08000188	j	L72_LF2
 1231  00001de0  54000000	nop; delay slot nop
 1232  00001de4          	L86_LF2:
 1233  00001de4  54000000	nop
 1234  00001de8          	L88_LF2:
 1235  00001de8  8fc10000	lw	r1,(r30)
 1236  00001dec  90220000	lbu	r2,(r1)
 1237  00001df0  6c41002f	sgtui	r1,r2,#47
 1238  00001df4  10200030	beqz	r1,L91_LF2
 1239  00001df8  54000000	nop; delay slot nop
 1240  00001dfc  8fc10000	lw	r1,(r30)
 1241  00001e00  90220000	lbu	r2,(r1)
 1242  00001e04  70410039	sleui	r1,r2,#57
 1243  00001e08  1020001c	beqz	r1,L91_LF2
 1244  00001e0c  54000000	nop; delay slot nop
 1245  00001e10  8fc10000	lw	r1,(r30)
 1246  00001e14  90220000	lbu	r2,(r1)
 1247  00001e18  2041ffd0	addi	r1,r2,#-48
 1248  00001e1c  afc1fff0	sw	-16(r30),r1
 1249  00001e20  0800008c	j	L92_LF2
 1250  00001e24  54000000	nop; delay slot nop
 1251  00001e28          	L91_LF2:
 1252  00001e28  8fc10000	lw	r1,(r30)
 1253  00001e2c  90220000	lbu	r2,(r1)
 1254  00001e30  6c410060	sgtui	r1,r2,#96
 1255  00001e34  10200030	beqz	r1,L93_LF2
 1256  00001e38  54000000	nop; delay slot nop
 1257  00001e3c  8fc10000	lw	r1,(r30)
 1258  00001e40  90220000	lbu	r2,(r1)
 1259  00001e44  7041007a	sleui	r1,r2,#122
 1260  00001e48  1020001c	beqz	r1,L93_LF2
 1261  00001e4c  54000000	nop; delay slot nop
 1262  00001e50  8fc10000	lw	r1,(r30)
 1263  00001e54  90220000	lbu	r2,(r1)
 1264  00001e58  2041ffa9	addi	r1,r2,#-87
 1265  00001e5c  afc1fff0	sw	-16(r30),r1
 1266  00001e60  0800004c	j	L92_LF2
 1267  00001e64  54000000	nop; delay slot nop
 1268  00001e68          	L93_LF2:
 1269  00001e68  8fc10000	lw	r1,(r30)
 1270  00001e6c  90220000	lbu	r2,(r1)
 1271  00001e70  6c410040	sgtui	r1,r2,#64
 1272  00001e74  10200030	beqz	r1,L95_LF2
 1273  00001e78  54000000	nop; delay slot nop
 1274  00001e7c  8fc10000	lw	r1,(r30)
 1275  00001e80  90220000	lbu	r2,(r1)
 1276  00001e84  7041005a	sleui	r1,r2,#90
 1277  00001e88  1020001c	beqz	r1,L95_LF2
 1278  00001e8c  54000000	nop; delay slot nop
 1279  00001e90  8fc10000	lw	r1,(r30)
 1280  00001e94  90220000	lbu	r2,(r1)
 1281  00001e98  2041ffc9	addi	r1,r2,#-55
 1282  00001e9c  afc1fff0	sw	-16(r30),r1
 1283  00001ea0  0800000c	j	L92_LF2
 1284  00001ea4  54000000	nop; delay slot nop
 1285  00001ea8          	L95_LF2:
 1286  00001ea8  200103e8	addi	r1,r0,#1000
 1287  00001eac  afc1fff0	sw	-16(r30),r1
 1288  00001eb0          	L96_LF2:
 1289  00001eb0          	L94_LF2:
 1290  00001eb0          	L92_LF2:
 1291  00001eb0  8fc1fff0	lw	r1,-16(r30)
 1292  00001eb4  8fc20008	lw	r2,8(r30)
 1293  00001eb8  0022082a	slt	r1,r1,r2
 1294  00001ebc  10200040	beqz	r1,L90_LF2
 1295  00001ec0  54000000	nop; delay slot nop
 1296  00001ec4  8fc1fff4	lw	r1,-12(r30)
 1297  00001ec8  8fc20008	lw	r2,8(r30)
 1298  00001ecc  00200035	movi2fp	f0,r1
 1299  00001ed0  00400835	movi2fp	f1,r2
 1300  00001ed4  0401000e	mult	f0,f0,f1
 1301  00001ed8  00000834	movfp2i	r1,f0
 1302  00001edc  afc1fff4	sw	-12(r30),r1
 1303  00001ee0  8fc1fff4	lw	r1,-12(r30)
 1304  00001ee4  8fc2fff0	lw	r2,-16(r30)
 1305  00001ee8  00220820	add	r1,r1,r2
 1306  00001eec  afc1fff4	sw	-12(r30),r1
 1307  00001ef0  8fc20000	lw	r2,(r30)
 1308  00001ef4  20410001	addi	r1,r2,#1
 1309  00001ef8  00011020	add	r2,r0,r1
 1310  00001efc  afc20000	sw	(r30),r2
 1311  00001f00          	L97_LF2:
 1312  00001f00          	L90_LF2:
 1313  00001f00  8fc1fff0	lw	r1,-16(r30)
 1314  00001f04  8fc20008	lw	r2,8(r30)
 1315  00001f08  0022082a	slt	r1,r1,r2
 1316  00001f0c  1420000c	bnez	r1,L98_LF2
 1317  00001f10  54000000	nop; delay slot nop
 1318  00001f14  0800000c	j	L89_LF2
 1319  00001f18  54000000	nop; delay slot nop
 1320  00001f1c          	L98_LF2:
 1321  00001f1c  0bfffec8	j	L88_LF2
 1322  00001f20  54000000	nop; delay slot nop
 1323  00001f24          	L89_LF2:
 1324  00001f24  8fc10004	lw	r1,4(r30)
 1325  00001f28  64220000	snei	r2,r1,#0
 1326  00001f2c  10400010	beqz	r2,L99_LF2
 1327  00001f30  54000000	nop; delay slot nop
 1328  00001f34  8fc10004	lw	r1,4(r30)
 1329  00001f38  8fc20000	lw	r2,(r30)
 1330  00001f3c  ac220000	sw	(r1),r2
 1331  00001f40          	L99_LF2:
 1332  00001f40  8fc1fff4	lw	r1,-12(r30)
 1333  00001f44  8fc2ffec	lw	r2,-20(r30)
 1334  00001f48  00200035	movi2fp	f0,r1
 1335  00001f4c  00400835	movi2fp	f1,r2
 1336  00001f50  0401000e	mult	f0,f0,f1
 1337  00001f54  00000834	movfp2i	r1,f0
 1338  00001f58  afc1fff4	sw	-12(r30),r1
 1339  00001f5c  8fc1fff4	lw	r1,-12(r30)
 1340  00001f60  08000004	j	L72_LF2
 1341  00001f64  54000000	nop; delay slot nop
 1342  00001f68          	L72_LF2:
 1343  00001f68  8fa20000	lw	r2,0(r29)
 1344  00001f6c  8fdffff8	lw	r31,-8(r30)
 1345  00001f70  001ee820	add	r29,r0,r30
 1346  00001f74  8fdefffc	lw	r30,-4(r30)
 1347  00001f78  4be00000	jr	r31
 1348  00001f7c  54000000	nop
 1349  00001f80          	.endproc _dstrtol
 1350  00001f80          	.align 2
 1351  00001f80          	.proc _bcopy
 1352  00001f80          	.global _bcopy
 1353  00001f80          	_bcopy:
 1354                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1355  00001f80  afbefffc	sw	-4(r29),r30; push fp
 1356  00001f84  001df020	add	r30,r0,r29; fp = sp
 1357  00001f88  afbffff8	sw	-8(r29),r31; push ret addr
 1358  00001f8c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1359  00001f90  afa20000	sw	0(r29),r2
 1360  00001f94  afa30004	sw	4(r29),r3
 1361  00001f98  54000000	nop
 1362  00001f9c          	L101_LF2:
 1363  00001f9c  8fc10008	lw	r1,8(r30)
 1364  00001fa0  2022ffff	addi	r2,r1,#-1
 1365  00001fa4  afc20008	sw	8(r30),r2
 1366  00001fa8  6c210000	sgti	r1,r1,#0
 1367  00001fac  1420000c	bnez	r1,L103_LF2
 1368  00001fb0  54000000	nop; delay slot nop
 1369  00001fb4  0800002c	j	L102_LF2
 1370  00001fb8  54000000	nop; delay slot nop
 1371  00001fbc          	L103_LF2:
 1372  00001fbc  8fc10004	lw	r1,4(r30)
 1373  00001fc0  20220001	addi	r2,r1,#1
 1374  00001fc4  afc20004	sw	4(r30),r2
 1375  00001fc8  8fc20000	lw	r2,(r30)
 1376  00001fcc  20430001	addi	r3,r2,#1
 1377  00001fd0  afc30000	sw	(r30),r3
 1378  00001fd4  80420000	lb	r2,(r2)
 1379  00001fd8  a0220000	sb	(r1),r2
 1380  00001fdc  0bffffbc	j	L101_LF2
 1381  00001fe0  54000000	nop; delay slot nop
 1382  00001fe4          	L102_LF2:
 1383  00001fe4          	L100_LF2:
 1384  00001fe4  8fa20000	lw	r2,0(r29)
 1385  00001fe8  8fa30004	lw	r3,4(r29)
 1386  00001fec  8fdffff8	lw	r31,-8(r30)
 1387  00001ff0  001ee820	add	r29,r0,r30
 1388  00001ff4  8fdefffc	lw	r30,-4(r30)
 1389  00001ff8  4be00000	jr	r31
 1390  00001ffc  54000000	nop
 1391  00002000          	.endproc _bcopy
 1392  00002000          	.align 2
 1393  00002000          	.proc _bzero
 1394  00002000          	.global _bzero
 1395  00002000          	_bzero:
 1396                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1397  00002000  afbefffc	sw	-4(r29),r30; push fp
 1398  00002004  001df020	add	r30,r0,r29; fp = sp
 1399  00002008  afbffff8	sw	-8(r29),r31; push ret addr
 1400  0000200c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1401  00002010  afa20000	sw	0(r29),r2
 1402  00002014  54000000	nop
 1403  00002018          	L105_LF2:
 1404  00002018  8fc10004	lw	r1,4(r30)
 1405  0000201c  2022ffff	addi	r2,r1,#-1
 1406  00002020  afc20004	sw	4(r30),r2
 1407  00002024  6c210000	sgti	r1,r1,#0
 1408  00002028  1420000c	bnez	r1,L107_LF2
 1409  0000202c  54000000	nop; delay slot nop
 1410  00002030  08000020	j	L106_LF2
 1411  00002034  54000000	nop; delay slot nop
 1412  00002038          	L107_LF2:
 1413  00002038  8fc10000	lw	r1,(r30)
 1414  0000203c  20220001	addi	r2,r1,#1
 1415  00002040  afc20000	sw	(r30),r2
 1416  00002044  20020000	addi	r2,r0,(#0x0)&0xff
 1417  00002048  a0220000	sb	(r1),r2
 1418  0000204c  0bffffc8	j	L105_LF2
 1419  00002050  54000000	nop; delay slot nop
 1420  00002054          	L106_LF2:
 1421  00002054          	L104_LF2:
 1422  00002054  8fa20000	lw	r2,0(r29)
 1423  00002058  8fdffff8	lw	r31,-8(r30)
 1424  0000205c  001ee820	add	r29,r0,r30
 1425  00002060  8fdefffc	lw	r30,-4(r30)
 1426  00002064  4be00000	jr	r31
 1427  00002068  54000000	nop
 1428  0000206c          	.endproc _bzero
 1429  0000206c          	.align 2
 1430  0000206c          	.proc _min
 1431  0000206c          	.global _min
 1432  0000206c          	_min:
 1433                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1434  0000206c  afbefffc	sw	-4(r29),r30; push fp
 1435  00002070  001df020	add	r30,r0,r29; fp = sp
 1436  00002074  afbffff8	sw	-8(r29),r31; push ret addr
 1437  00002078  2fbd0010	subui	r29,r29,#16; alloc local storage
 1438  0000207c  afa20000	sw	0(r29),r2
 1439  00002080  afa30004	sw	4(r29),r3
 1440  00002084  8fc10000	lw	r1,(r30)
 1441  00002088  8fc20004	lw	r2,4(r30)
 1442  0000208c  0022182c	sle	r3,r1,r2
 1443  00002090  14600008	bnez	r3,L109_LF2
 1444  00002094  54000000	nop; delay slot nop
 1445  00002098  8fc10004	lw	r1,4(r30)
 1446  0000209c          	L109_LF2:
 1447  0000209c  08000004	j	L108_LF2
 1448  000020a0  54000000	nop; delay slot nop
 1449  000020a4          	L108_LF2:
 1450  000020a4  8fa20000	lw	r2,0(r29)
 1451  000020a8  8fa30004	lw	r3,4(r29)
 1452  000020ac  8fdffff8	lw	r31,-8(r30)
 1453  000020b0  001ee820	add	r29,r0,r30
 1454  000020b4  8fdefffc	lw	r30,-4(r30)
 1455  000020b8  4be00000	jr	r31
 1456  000020bc  54000000	nop
 1457  000020c0          	.endproc _min
 1458                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1459                      ;;;
 1460                      ;;; Most of the traps are called in files from libtraps.
 1463  000020c0          	.align 2
 1464  000020c0          	.proc _exit
 1465  000020c0          	.global _exit
 1466  000020c0          	_exit:
 1467  000020c0  44000300	trap	#0x300
 1468  000020c4  4be00000	jr	r31
 1469  000020c8  54000000	nop
 1470  000020cc          	.endproc _exit
 1472                      ; for the benefit of gcc.
 1473  000020cc          	.proc ___main
 1474  000020cc          	.global ___main
 1475  000020cc          	___main:
 1476  000020cc  4be00000	jr	r31
 1477  000020d0  54000000	nop
 1478  000020d4          	.endproc ___main
 1479  000020d4          	.text
 1480  000020d4          	.global _etext
 1481  000020d4          	_etext:
 1482  000020d4          	.align 3
 1483  000020d8          	.data
 1484  000030b6          	.global _edata
 1485  000030b6          	_edata:
