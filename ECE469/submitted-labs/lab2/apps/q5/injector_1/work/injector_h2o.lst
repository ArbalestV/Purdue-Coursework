 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 182
    4                      ; Text size: 4340
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  6d757374	.ascii "must pass three arguments\000"
   82  00003004  20706173	
   82  00003008  73207468	
   82  0000300c  72656520	
   82  00003010  61726775	
   82  00003014  6d656e74	
   82  00003018  7300    	
   83  0000301a          	.align 2
   84  0000301c          	LC1_LF0:
   85  0000301c  6c657373	.ascii "less then 0 molecules injected!\n\000"
   85  00003020  20746865	
   85  00003024  6e203020	
   85  00003028  6d6f6c65	
   85  0000302c  63756c65	
   85  00003030  7320696e	
   85  00003034  6a656374	
   85  00003038  6564210a	
   85  0000303c  00      	
   86  0000303d          	.align 2
   87  00003040          	LC2_LF0:
   88  00003040  48324f20	.ascii "H2O was injected \n\000"
   88  00003044  77617320	
   88  00003048  696e6a65	
   88  0000304c  63746564	
   88  00003050  200a00  	
   89  00003053          	.align 2
   90  00003054          	LC3_LF0:
   91  00003054  42616420	.ascii "Bad semophore created in injector_h20\n\000"
   91  00003058  73656d6f	
   91  0000305c  70686f72	
   91  00003060  65206372	
   91  00003064  65617465	
   91  00003068  6420696e	
   91  0000306c  20696e6a	
   91  00003070  6563746f	
   91  00003074  725f6832	
   91  00003078  300a00  	
   92  0000307b          	.align 2
   93  0000307c          	LC4_LF0:
   94  0000307c  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   94  00003080  73656d61	
   94  00003084  70686f72	
   94  00003088  6520735f	
   94  0000308c  70726f63	
   94  00003090  735f636f	
   94  00003094  6d706c65	
   94  00003098  74656420	
   94  0000309c  28256429	
   94  000030a0  20696e20	
   94  000030a4  00      	
   95  000030a5          	.align 2
   96  000030a8          	LC5_LF0:
   97  000030a8  2c206578	.ascii ", exiting...\n\000"
   97  000030ac  6974696e	
   97  000030b0  672e2e2e	
   97  000030b4  0a00    	
   98  000030b6          	.text
   99  000010d4          	.align 2
  100  000010d4          	.proc _main
  101  000010d4          	.global _main
  102  000010d4          	_main:
  103                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  104  000010d4  afbefffc	sw	-4(r29),r30; push fp
  105  000010d8  001df020	add	r30,r0,r29; fp = sp
  106  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  107  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  108  000010e4  8fc20000	lw	r2,(r30)
  109  000010e8  8fc50004	lw	r5,4(r30)
  110  000010ec  0c000ffc	jal	___main
  111  000010f0  54000000	nop; not filled.
  112  000010f4  64410004	snei	r1,r2,#4
  113  000010f8  10200028	beqz	r1,L14_LF0
  114  000010fc  54000000	nop; not filled.
  115  00001100  23bdfff8	addi	r29,r29,#-8
  116  00001104  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  117  00001108  24c63000	addui	r6,r6,(LC0_LF0)&0xffff
  118  0000110c  afa60000	sw	(r29),r6
  119  00001110  0c0001d0	jal	_Printf
  120  00001114  54000000	nop; not filled.
  121  00001118  0c00027c	jal	_Exit
  122  0000111c  54000000	nop; not filled.
  123  00001120  23bd0008	addi	r29,r29,#8
  124  00001124          	L14_LF0:
  125  00001124  23bdfff0	addi	r29,r29,#-16
  126  00001128  8ca60004	lw	r6,4(r5)
  127  0000112c  afa60000	sw	(r29),r6
  128  00001130  20060000	addi	r6,r0,#0
  129  00001134  afa60004	sw	4(r29),r6
  130  00001138  2006000a	addi	r6,r0,#10
  131  0000113c  afa60008	sw	8(r29),r6
  132  00001140  0c000b00	jal	_dstrtol
  133  00001144  54000000	nop; not filled.
  134  00001148  00011020	add	r2,r0,r1
  135  0000114c  8ca60008	lw	r6,8(r5)
  136  00001150  afa60000	sw	(r29),r6
  137  00001154  20060000	addi	r6,r0,#0
  138  00001158  afa60004	sw	4(r29),r6
  139  0000115c  2006000a	addi	r6,r0,#10
  140  00001160  afa60008	sw	8(r29),r6
  141  00001164  0c000adc	jal	_dstrtol
  142  00001168  54000000	nop; not filled.
  143  0000116c  00011820	add	r3,r0,r1
  144  00001170  8ca6000c	lw	r6,12(r5)
  145  00001174  afa60000	sw	(r29),r6
  146  00001178  20060000	addi	r6,r0,#0
  147  0000117c  afa60004	sw	4(r29),r6
  148  00001180  2006000a	addi	r6,r0,#10
  149  00001184  afa60008	sw	8(r29),r6
  150  00001188  0c000ab8	jal	_dstrtol
  151  0000118c  54000000	nop; not filled.
  152  00001190  00012020	add	r4,r0,r1
  153  00001194  23bd0010	addi	r29,r29,#16
  154  00001198  70410000	slei	r1,r2,#0
  155  0000119c  1020007c	beqz	r1,L22_LF0
  156  000011a0  54000000	nop; not filled.
  157  000011a4  23bdfff8	addi	r29,r29,#-8
  158  000011a8  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  159  000011ac  24c6301c	addui	r6,r6,(LC1_LF0)&0xffff
  160  000011b0  afa60000	sw	(r29),r6
  161  000011b4  0c00012c	jal	_Printf
  162  000011b8  54000000	nop; not filled.
  163  000011bc  23bd0008	addi	r29,r29,#8
  164  000011c0  08000058	j	L22_LF0
  165  000011c4  54000000	nop; not filled.
  166  000011c8          	L18_LF0:
  167  000011c8  23bdfff8	addi	r29,r29,#-8
  168  000011cc  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  169  000011d0  24c63040	addui	r6,r6,(LC2_LF0)&0xffff
  170  000011d4  afa60000	sw	(r29),r6
  171  000011d8  0c000108	jal	_Printf
  172  000011dc  54000000	nop; not filled.
  173  000011e0  afa30000	sw	(r29),r3
  174  000011e4  0c000150	jal	_sem_signal
  175  000011e8  54000000	nop; not filled.
  176  000011ec  23bd0008	addi	r29,r29,#8
  177  000011f0  64210001	snei	r1,r1,#1
  178  000011f4  10200020	beqz	r1,L19_LF0
  179  000011f8  54000000	nop; not filled.
  180  000011fc  23bdfff8	addi	r29,r29,#-8
  181  00001200  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  182  00001204  24c63054	addui	r6,r6,(LC3_LF0)&0xffff
  183  00001208  afa60000	sw	(r29),r6
  184  0000120c  0c0000d4	jal	_Printf
  185  00001210  54000000	nop; not filled.
  186  00001214  23bd0008	addi	r29,r29,#8
  187  00001218          	L19_LF0:
  188  00001218  2042ffff	addi	r2,r2,#-1
  189  0000121c          	L22_LF0:
  190  0000121c  64410000	snei	r1,r2,#0
  191  00001220  1420ffa4	bnez	r1,L18_LF0
  192  00001224  54000000	nop; not filled.
  193  00001228  23bdfff8	addi	r29,r29,#-8
  194  0000122c  afa40000	sw	(r29),r4
  195  00001230  0c000104	jal	_sem_signal
  196  00001234  54000000	nop; not filled.
  197  00001238  23bd0008	addi	r29,r29,#8
  198  0000123c  64210001	snei	r1,r1,#1
  199  00001240  10200050	beqz	r1,L21_LF0
  200  00001244  54000000	nop; not filled.
  201  00001248  23bdfff8	addi	r29,r29,#-8
  202  0000124c  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  203  00001250  24c6307c	addui	r6,r6,(LC4_LF0)&0xffff
  204  00001254  afa60000	sw	(r29),r6
  205  00001258  afa40004	sw	4(r29),r4
  206  0000125c  0c000084	jal	_Printf
  207  00001260  54000000	nop; not filled.
  208  00001264  8ca50000	lw	r5,(r5)
  209  00001268  afa50000	sw	(r29),r5
  210  0000126c  0c000074	jal	_Printf
  211  00001270  54000000	nop; not filled.
  212  00001274  3c060000	lhi	r6,((LC5_LF0)>>16)&0xffff
  213  00001278  24c630a8	addui	r6,r6,(LC5_LF0)&0xffff
  214  0000127c  afa60000	sw	(r29),r6
  215  00001280  0c000060	jal	_Printf
  216  00001284  54000000	nop; not filled.
  217  00001288  0c00010c	jal	_Exit
  218  0000128c  54000000	nop; not filled.
  219  00001290  23bd0008	addi	r29,r29,#8
  220  00001294          	L21_LF0:
  221  00001294  0c000e48	jal	_exit
  222  00001298  54000000	nop
  223  0000129c          	.endproc _main
  224                      ;;;
  225                      ;;; Stub functions for DLX traps.
  226                      ;;;
  227                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  228                      ;;;
  229                      ;;; The traps such as Open and Close
  230                      ;;; (note the capital letters) are for use by user programs.  The traps
  231                      ;;; with names such as open and close (lower case) are for use by the OS.
  232                      ;;;
  235  0000129c          	.align 2
  237                      ;;; The following are the traps to be used by user-level programs
  238                      ;;;
  240  0000129c          	.align 2
  241  0000129c          	.proc _Open
  242  0000129c          	.global _Open
  243  0000129c          	_Open:
  244                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  245                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  246                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  247  0000129c  44000213	trap	#0x213
  248  000012a0  4be00000	jr	r31
  249  000012a4  54000000	nop
  250  000012a8          	.endproc _Open
  252  000012a8          	.proc _Close
  253  000012a8          	.global _Close
  254  000012a8          	_Close:
  255  000012a8  44000214	trap	#0x214
  256  000012ac  4be00000	jr	r31
  257  000012b0  54000000	nop
  258  000012b4          	.endproc _Close
  260  000012b4          	.proc _Read
  261  000012b4          	.global _Read
  262  000012b4          	_Read:
  263  000012b4  44000210	trap	#0x210
  264  000012b8  4be00000	jr	r31
  265  000012bc  54000000	nop
  266  000012c0          	.endproc _Read
  268  000012c0          	.proc _Write
  269  000012c0          	.global _Write
  270  000012c0          	_Write:
  271  000012c0  44000211	trap	#0x211
  272  000012c4  4be00000	jr	r31
  273  000012c8  54000000	nop
  274  000012cc          	.endproc _Write
  276  000012cc          	.proc _Lseek
  277  000012cc          	.global _Lseek
  278  000012cc          	_Lseek:
  279  000012cc  44000212	trap	#0x212
  280  000012d0  4be00000	jr	r31
  281  000012d4  54000000	nop
  282  000012d8          	.endproc _Lseek
  284  000012d8          	.proc _Putchar
  285  000012d8          	.global _Putchar
  286  000012d8          	_Putchar:
  287  000012d8  44000280	trap	#0x280
  288  000012dc  4be00000	jr	r31
  289  000012e0  54000000	nop
  290  000012e4          	.endproc _Putchar
  292  000012e4          	.proc _Printf
  293  000012e4          	.global _Printf
  294  000012e4          	_Printf:
  295  000012e4  44000201	trap	#0x201
  296  000012e8  4be00000	jr	r31
  297  000012ec  54000000	nop
  298  000012f0          	.endproc _Printf
  300  000012f0          	.proc _getpid
  301  000012f0          	.global _getpid
  302  000012f0          	_getpid:
  303  000012f0  44000431	trap	#0x431
  304  000012f4  4be00000	jr	r31
  305  000012f8  54000000	nop
  306  000012fc          	.endproc _getpid
  308  000012fc          	.proc _process_create
  309  000012fc          	.global _process_create
  310  000012fc          	_process_create:
  311  000012fc  44000432	trap	#0x432
  312  00001300  4be00000	jr	r31
  313  00001304  54000000	nop
  314  00001308          	.endproc _process_create
  316  00001308          	.proc _shmget
  317  00001308          	.global _shmget
  318  00001308          	_shmget:
  319  00001308  44000440	trap	#0x440
  320  0000130c  4be00000	jr	r31
  321  00001310  54000000	nop
  322  00001314          	.endproc _shmget
  324  00001314          	.proc _shmat
  325  00001314          	.global _shmat
  326  00001314          	_shmat:
  327  00001314  44000441	trap	#0x441
  328  00001318  4be00000	jr	r31
  329  0000131c  54000000	nop
  330  00001320          	.endproc _shmat
  332  00001320          	.proc _sem_create
  333  00001320          	.global _sem_create
  334  00001320          	_sem_create:
  335  00001320  44000450	trap	#0x450
  336  00001324  4be00000	jr	r31
  337  00001328  54000000	nop
  338  0000132c          	.endproc _sem_create
  340  0000132c          	.proc _sem_wait
  341  0000132c          	.global _sem_wait
  342  0000132c          	_sem_wait:
  343  0000132c  44000451	trap	#0x451
  344  00001330  4be00000	jr	r31
  345  00001334  54000000	nop
  346  00001338          	.endproc _sem_wait
  348  00001338          	.proc _sem_signal
  349  00001338          	.global _sem_signal
  350  00001338          	_sem_signal:
  351  00001338  44000452	trap	#0x452
  352  0000133c  4be00000	jr	r31
  353  00001340  54000000	nop
  354  00001344          	.endproc _sem_signal
  356  00001344          	.proc _lock_create
  357  00001344          	.global _lock_create
  358  00001344          	_lock_create:
  359  00001344  44000453	trap	#0x453
  360  00001348  4be00000	jr	r31
  361  0000134c  54000000	nop
  362  00001350          	.endproc _lock_create
  364  00001350          	.proc _lock_acquire
  365  00001350          	.global _lock_acquire
  366  00001350          	_lock_acquire:
  367  00001350  44000454	trap	#0x454
  368  00001354  4be00000	jr	r31
  369  00001358  54000000	nop
  370  0000135c          	.endproc _lock_acquire
  372  0000135c          	.proc _lock_release
  373  0000135c          	.global _lock_release
  374  0000135c          	_lock_release:
  375  0000135c  44000455	trap	#0x455
  376  00001360  4be00000	jr	r31
  377  00001364  54000000	nop
  378  00001368          	.endproc _lock_release
  380  00001368          	.proc _cond_create
  381  00001368          	.global _cond_create
  382  00001368          	_cond_create:
  383  00001368  44000456	trap	#0x456
  384  0000136c  4be00000	jr	r31
  385  00001370  54000000	nop
  386  00001374          	.endproc _cond_create
  388  00001374          	.proc _cond_wait
  389  00001374          	.global _cond_wait
  390  00001374          	_cond_wait:
  391  00001374  44000457	trap	#0x457
  392  00001378  4be00000	jr	r31
  393  0000137c  54000000	nop
  394  00001380          	.endproc _cond_wait
  396  00001380          	.proc _cond_signal
  397  00001380          	.global _cond_signal
  398  00001380          	_cond_signal:
  399  00001380  44000458	trap	#0x458
  400  00001384  4be00000	jr	r31
  401  00001388  54000000	nop
  402  0000138c          	.endproc _cond_signal
  404  0000138c          	.proc _cond_broadcast
  405  0000138c          	.global _cond_broadcast
  406  0000138c          	_cond_broadcast:
  407  0000138c  44000459	trap	#0x459
  408  00001390  4be00000	jr	r31
  409  00001394  54000000	nop
  410  00001398          	.endproc _cond_broadcast
  412  00001398          	.proc _Exit
  413  00001398          	.global _Exit
  414  00001398          	_Exit:
  415  00001398  44000500	trap	#0x500
  416  0000139c  4be00000	jr	r31
  417  000013a0  54000000	nop
  418  000013a4          	.endproc _Exit
  419                      ; Compiled by GCC
  421  000013a4          	.align 2
  422  000013a4          	.proc _isspace
  423  000013a4          	.global _isspace
  424  000013a4          	_isspace:
  425                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  426  000013a4  afbefffc	sw	-4(r29),r30; push fp
  427  000013a8  001df020	add	r30,r0,r29; fp = sp
  428  000013ac  afbffff8	sw	-8(r29),r31; push ret addr
  429  000013b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  430  000013b4  afa20000	sw	0(r29),r2
  431  000013b8  afa30004	sw	4(r29),r3
  432  000013bc  afa40008	sw	8(r29),r4
  433  000013c0  83c20003	lb	r2,3(r30)
  434  000013c4  20010000	addi	r1,r0,#0
  435  000013c8  304300ff	andi	r3,r2,#0x00ff
  436  000013cc  60640020	seqi	r4,r3,#32
  437  000013d0  1480002c	bnez	r4,L3_LF2
  438  000013d4  54000000	nop; delay slot nop
  439  000013d8  304300ff	andi	r3,r2,#0x00ff
  440  000013dc  60640009	seqi	r4,r3,#9
  441  000013e0  1480001c	bnez	r4,L3_LF2
  442  000013e4  54000000	nop; delay slot nop
  443  000013e8  304300ff	andi	r3,r2,#0x00ff
  444  000013ec  6064000a	seqi	r4,r3,#10
  445  000013f0  1480000c	bnez	r4,L3_LF2
  446  000013f4  54000000	nop; delay slot nop
  447  000013f8  08000008	j	L2_LF2
  448  000013fc  54000000	nop; delay slot nop
  449  00001400          	L3_LF2:
  450  00001400  20010001	addi	r1,r0,#1
  451  00001404          	L2_LF2:
  452  00001404  08000004	j	L1_LF2
  453  00001408  54000000	nop; delay slot nop
  454  0000140c          	L1_LF2:
  455  0000140c  8fa20000	lw	r2,0(r29)
  456  00001410  8fa30004	lw	r3,4(r29)
  457  00001414  8fa40008	lw	r4,8(r29)
  458  00001418  8fdffff8	lw	r31,-8(r30)
  459  0000141c  001ee820	add	r29,r0,r30
  460  00001420  8fdefffc	lw	r30,-4(r30)
  461  00001424  4be00000	jr	r31
  462  00001428  54000000	nop
  463  0000142c          	.endproc _isspace
  464  0000142c          	.align 2
  465  0000142c          	.proc _isxdigit
  466  0000142c          	.global _isxdigit
  467  0000142c          	_isxdigit:
  468                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  469  0000142c  afbefffc	sw	-4(r29),r30; push fp
  470  00001430  001df020	add	r30,r0,r29; fp = sp
  471  00001434  afbffff8	sw	-8(r29),r31; push ret addr
  472  00001438  2fbd0018	subui	r29,r29,#24; alloc local storage
  473  0000143c  afa20000	sw	0(r29),r2
  474  00001440  afa30004	sw	4(r29),r3
  475  00001444  afa40008	sw	8(r29),r4
  476  00001448  83c20003	lb	r2,3(r30)
  477  0000144c  20010000	addi	r1,r0,#0
  478  00001450  304300ff	andi	r3,r2,#0x00ff
  479  00001454  6c64002f	sgtui	r4,r3,#47
  480  00001458  1080001c	beqz	r4,L7_LF2
  481  0000145c  54000000	nop; delay slot nop
  482  00001460  304300ff	andi	r3,r2,#0x00ff
  483  00001464  70640039	sleui	r4,r3,#57
  484  00001468  1480005c	bnez	r4,L6_LF2
  485  0000146c  54000000	nop; delay slot nop
  486  00001470  08000004	j	L7_LF2
  487  00001474  54000000	nop; delay slot nop
  488  00001478          	L7_LF2:
  489  00001478  304300ff	andi	r3,r2,#0x00ff
  490  0000147c  6c640060	sgtui	r4,r3,#96
  491  00001480  1080001c	beqz	r4,L8_LF2
  492  00001484  54000000	nop; delay slot nop
  493  00001488  304300ff	andi	r3,r2,#0x00ff
  494  0000148c  70640066	sleui	r4,r3,#102
  495  00001490  14800034	bnez	r4,L6_LF2
  496  00001494  54000000	nop; delay slot nop
  497  00001498  08000004	j	L8_LF2
  498  0000149c  54000000	nop; delay slot nop
  499  000014a0          	L8_LF2:
  500  000014a0  304300ff	andi	r3,r2,#0x00ff
  501  000014a4  6c640040	sgtui	r4,r3,#64
  502  000014a8  10800020	beqz	r4,L5_LF2
  503  000014ac  54000000	nop; delay slot nop
  504  000014b0  304300ff	andi	r3,r2,#0x00ff
  505  000014b4  70640041	sleui	r4,r3,#65
  506  000014b8  1480000c	bnez	r4,L6_LF2
  507  000014bc  54000000	nop; delay slot nop
  508  000014c0  08000008	j	L5_LF2
  509  000014c4  54000000	nop; delay slot nop
  510  000014c8          	L6_LF2:
  511  000014c8  20010001	addi	r1,r0,#1
  512  000014cc          	L5_LF2:
  513  000014cc  08000004	j	L4_LF2
  514  000014d0  54000000	nop; delay slot nop
  515  000014d4          	L4_LF2:
  516  000014d4  8fa20000	lw	r2,0(r29)
  517  000014d8  8fa30004	lw	r3,4(r29)
  518  000014dc  8fa40008	lw	r4,8(r29)
  519  000014e0  8fdffff8	lw	r31,-8(r30)
  520  000014e4  001ee820	add	r29,r0,r30
  521  000014e8  8fdefffc	lw	r30,-4(r30)
  522  000014ec  4be00000	jr	r31
  523  000014f0  54000000	nop
  524  000014f4          	.endproc _isxdigit
  525  000014f4          	.align 2
  526  000014f4          	.proc _dstrcpy
  527  000014f4          	.global _dstrcpy
  528  000014f4          	_dstrcpy:
  529                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  530  000014f4  afbefffc	sw	-4(r29),r30; push fp
  531  000014f8  001df020	add	r30,r0,r29; fp = sp
  532  000014fc  afbffff8	sw	-8(r29),r31; push ret addr
  533  00001500  2fbd0018	subui	r29,r29,#24; alloc local storage
  534  00001504  afa20000	sw	0(r29),r2
  535  00001508  afa30004	sw	4(r29),r3
  536  0000150c  8fc10000	lw	r1,(r30)
  537  00001510  afc1fff4	sw	-12(r30),r1
  538  00001514          	L10_LF2:
  539  00001514  8fc10000	lw	r1,(r30)
  540  00001518  20220001	addi	r2,r1,#1
  541  0000151c  afc20000	sw	(r30),r2
  542  00001520  8fc20004	lw	r2,4(r30)
  543  00001524  20430001	addi	r3,r2,#1
  544  00001528  afc30004	sw	4(r30),r3
  545  0000152c  80420000	lb	r2,(r2)
  546  00001530  a0220000	sb	(r1),r2
  547  00001534  a3c2fff3	sb	-13(r30),r2
  548  00001538          	L12_LF2:
  549  00001538  93c1fff3	lbu	r1,-13(r30)
  550  0000153c  64220000	snei	r2,r1,#0
  551  00001540  1440000c	bnez	r2,L13_LF2
  552  00001544  54000000	nop; delay slot nop
  553  00001548  0800000c	j	L11_LF2
  554  0000154c  54000000	nop; delay slot nop
  555  00001550          	L13_LF2:
  556  00001550  0bffffc0	j	L10_LF2
  557  00001554  54000000	nop; delay slot nop
  558  00001558          	L11_LF2:
  559  00001558  8fc1fff4	lw	r1,-12(r30)
  560  0000155c  08000004	j	L9_LF2
  561  00001560  54000000	nop; delay slot nop
  562  00001564          	L9_LF2:
  563  00001564  8fa20000	lw	r2,0(r29)
  564  00001568  8fa30004	lw	r3,4(r29)
  565  0000156c  8fdffff8	lw	r31,-8(r30)
  566  00001570  001ee820	add	r29,r0,r30
  567  00001574  8fdefffc	lw	r30,-4(r30)
  568  00001578  4be00000	jr	r31
  569  0000157c  54000000	nop
  570  00001580          	.endproc _dstrcpy
  571  00001580          	.align 2
  572  00001580          	.proc _dstrncpy
  573  00001580          	.global _dstrncpy
  574  00001580          	_dstrncpy:
  575                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  576  00001580  afbefffc	sw	-4(r29),r30; push fp
  577  00001584  001df020	add	r30,r0,r29; fp = sp
  578  00001588  afbffff8	sw	-8(r29),r31; push ret addr
  579  0000158c  2fbd0018	subui	r29,r29,#24; alloc local storage
  580  00001590  afa20000	sw	0(r29),r2
  581  00001594  afa30004	sw	4(r29),r3
  582  00001598  8fc10000	lw	r1,(r30)
  583  0000159c  afc1fff4	sw	-12(r30),r1
  584  000015a0          	L15_LF2:
  585  000015a0  8fc10008	lw	r1,8(r30)
  586  000015a4  2022ffff	addi	r2,r1,#-1
  587  000015a8  afc20008	sw	8(r30),r2
  588  000015ac  70210000	slei	r1,r1,#0
  589  000015b0  1020000c	beqz	r1,L18_LF2
  590  000015b4  54000000	nop; delay slot nop
  591  000015b8  08000048	j	L16_LF2
  592  000015bc  54000000	nop; delay slot nop
  593  000015c0          	L18_LF2:
  594  000015c0  8fc10000	lw	r1,(r30)
  595  000015c4  20220001	addi	r2,r1,#1
  596  000015c8  afc20000	sw	(r30),r2
  597  000015cc  8fc20004	lw	r2,4(r30)
  598  000015d0  20430001	addi	r3,r2,#1
  599  000015d4  afc30004	sw	4(r30),r3
  600  000015d8  80420000	lb	r2,(r2)
  601  000015dc  a0220000	sb	(r1),r2
  602  000015e0  a3c2fff3	sb	-13(r30),r2
  603  000015e4          	L17_LF2:
  604  000015e4  93c1fff3	lbu	r1,-13(r30)
  605  000015e8  64220000	snei	r2,r1,#0
  606  000015ec  1440000c	bnez	r2,L19_LF2
  607  000015f0  54000000	nop; delay slot nop
  608  000015f4  0800000c	j	L16_LF2
  609  000015f8  54000000	nop; delay slot nop
  610  000015fc          	L19_LF2:
  611  000015fc  0bffffa0	j	L15_LF2
  612  00001600  54000000	nop; delay slot nop
  613  00001604          	L16_LF2:
  614  00001604  8fc1fff4	lw	r1,-12(r30)
  615  00001608  08000004	j	L14_LF2
  616  0000160c  54000000	nop; delay slot nop
  617  00001610          	L14_LF2:
  618  00001610  8fa20000	lw	r2,0(r29)
  619  00001614  8fa30004	lw	r3,4(r29)
  620  00001618  8fdffff8	lw	r31,-8(r30)
  621  0000161c  001ee820	add	r29,r0,r30
  622  00001620  8fdefffc	lw	r30,-4(r30)
  623  00001624  4be00000	jr	r31
  624  00001628  54000000	nop
  625  0000162c          	.endproc _dstrncpy
  626  0000162c          	.align 2
  627  0000162c          	.proc _dstrcat
  628  0000162c          	.global _dstrcat
  629  0000162c          	_dstrcat:
  630                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  631  0000162c  afbefffc	sw	-4(r29),r30; push fp
  632  00001630  001df020	add	r30,r0,r29; fp = sp
  633  00001634  afbffff8	sw	-8(r29),r31; push ret addr
  634  00001638  2fbd0018	subui	r29,r29,#24; alloc local storage
  635  0000163c  afa20000	sw	0(r29),r2
  636  00001640  8fc10000	lw	r1,(r30)
  637  00001644  afc1fff4	sw	-12(r30),r1
  638  00001648          	L21_LF2:
  639  00001648  8fc10000	lw	r1,(r30)
  640  0000164c  90220000	lbu	r2,(r1)
  641  00001650  64410000	snei	r1,r2,#0
  642  00001654  1420000c	bnez	r1,L23_LF2
  643  00001658  54000000	nop; delay slot nop
  644  0000165c  0800001c	j	L22_LF2
  645  00001660  54000000	nop; delay slot nop
  646  00001664          	L23_LF2:
  647  00001664  8fc20000	lw	r2,(r30)
  648  00001668  20410001	addi	r1,r2,#1
  649  0000166c  00011020	add	r2,r0,r1
  650  00001670  afc20000	sw	(r30),r2
  651  00001674  0bffffd0	j	L21_LF2
  652  00001678  54000000	nop; delay slot nop
  653  0000167c          	L22_LF2:
  654  0000167c  23bdfff8	addi	r29,r29,#-8
  655  00001680  001d0820	add	r1,r0,r29
  656  00001684  8fc20000	lw	r2,(r30)
  657  00001688  ac220000	sw	(r1),r2
  658  0000168c  8fc20004	lw	r2,4(r30)
  659  00001690  ac220004	sw	4(r1),r2
  660  00001694  0ffffe5c	jal	_dstrcpy
  661  00001698  54000000	nop; delay slot nop
  662  0000169c  23bd0008	addi	r29,r29,#8
  663  000016a0  8fc1fff4	lw	r1,-12(r30)
  664  000016a4  08000004	j	L20_LF2
  665  000016a8  54000000	nop; delay slot nop
  666  000016ac          	L20_LF2:
  667  000016ac  8fa20000	lw	r2,0(r29)
  668  000016b0  8fdffff8	lw	r31,-8(r30)
  669  000016b4  001ee820	add	r29,r0,r30
  670  000016b8  8fdefffc	lw	r30,-4(r30)
  671  000016bc  4be00000	jr	r31
  672  000016c0  54000000	nop
  673  000016c4          	.endproc _dstrcat
  674  000016c4          	.align 2
  675  000016c4          	.proc _dstrncmp
  676  000016c4          	.global _dstrncmp
  677  000016c4          	_dstrncmp:
  678                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  679  000016c4  afbefffc	sw	-4(r29),r30; push fp
  680  000016c8  001df020	add	r30,r0,r29; fp = sp
  681  000016cc  afbffff8	sw	-8(r29),r31; push ret addr
  682  000016d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  683  000016d4  afa20000	sw	0(r29),r2
  684  000016d8  afa30004	sw	4(r29),r3
  685  000016dc  54000000	nop
  686  000016e0  20010000	addi	r1,r0,#0
  687  000016e4  afc1fff4	sw	-12(r30),r1
  688  000016e8          	L25_LF2:
  689  000016e8  8fc1fff4	lw	r1,-12(r30)
  690  000016ec  8fc20008	lw	r2,8(r30)
  691  000016f0  0022082a	slt	r1,r1,r2
  692  000016f4  1420000c	bnez	r1,L28_LF2
  693  000016f8  54000000	nop; delay slot nop
  694  000016fc  08000088	j	L26_LF2
  695  00001700  54000000	nop; delay slot nop
  696  00001704          	L28_LF2:
  697  00001704  8fc10004	lw	r1,4(r30)
  698  00001708  90220000	lbu	r2,(r1)
  699  0000170c  64410000	snei	r1,r2,#0
  700  00001710  14200018	bnez	r1,L29_LF2
  701  00001714  54000000	nop; delay slot nop
  702  00001718  20010000	addi	r1,r0,#0
  703  0000171c  080000d8	j	L24_LF2
  704  00001720  54000000	nop; delay slot nop
  705  00001724  08000028	j	L30_LF2
  706  00001728  54000000	nop; delay slot nop
  707  0000172c          	L29_LF2:
  708  0000172c  8fc10000	lw	r1,(r30)
  709  00001730  8fc20004	lw	r2,4(r30)
  710  00001734  90210000	lbu	r1,(r1)
  711  00001738  90420000	lbu	r2,(r2)
  712  0000173c  00220829	sne	r1,r1,r2
  713  00001740  1020000c	beqz	r1,L30_LF2
  714  00001744  54000000	nop; delay slot nop
  715  00001748  0800003c	j	L26_LF2
  716  0000174c  54000000	nop; delay slot nop
  717  00001750          	L31_LF2:
  718  00001750          	L30_LF2:
  719  00001750  8fc20000	lw	r2,(r30)
  720  00001754  20410001	addi	r1,r2,#1
  721  00001758  00011020	add	r2,r0,r1
  722  0000175c  afc20000	sw	(r30),r2
  723  00001760  8fc20004	lw	r2,4(r30)
  724  00001764  20410001	addi	r1,r2,#1
  725  00001768  00011020	add	r2,r0,r1
  726  0000176c  afc20004	sw	4(r30),r2
  727  00001770          	L27_LF2:
  728  00001770  8fc2fff4	lw	r2,-12(r30)
  729  00001774  20410001	addi	r1,r2,#1
  730  00001778  00011020	add	r2,r0,r1
  731  0000177c  afc2fff4	sw	-12(r30),r2
  732  00001780  0bffff64	j	L25_LF2
  733  00001784  54000000	nop; delay slot nop
  734  00001788          	L26_LF2:
  735  00001788  8fc1fff4	lw	r1,-12(r30)
  736  0000178c  8fc20008	lw	r2,8(r30)
  737  00001790  00220828	seq	r1,r1,r2
  738  00001794  10200018	beqz	r1,L32_LF2
  739  00001798  54000000	nop; delay slot nop
  740  0000179c  20010000	addi	r1,r0,#0
  741  000017a0  08000054	j	L24_LF2
  742  000017a4  54000000	nop; delay slot nop
  743  000017a8  0800004c	j	L33_LF2
  744  000017ac  54000000	nop; delay slot nop
  745  000017b0          	L32_LF2:
  746  000017b0  8fc20000	lw	r2,(r30)
  747  000017b4  90410000	lbu	r1,(r2)
  748  000017b8  8fc20004	lw	r2,4(r30)
  749  000017bc  90430000	lbu	r3,(r2)
  750  000017c0  00230822	sub	r1,r1,r3
  751  000017c4  74220000	sgei	r2,r1,#0
  752  000017c8  10400020	beqz	r2,L34_LF2
  753  000017cc  54000000	nop; delay slot nop
  754  000017d0  8fc10000	lw	r1,(r30)
  755  000017d4  8fc20004	lw	r2,4(r30)
  756  000017d8  90210000	lbu	r1,(r1)
  757  000017dc  90420000	lbu	r2,(r2)
  758  000017e0  00220829	sne	r1,r1,r2
  759  000017e4  08000008	j	L35_LF2
  760  000017e8  54000000	nop; delay slot nop
  761  000017ec          	L34_LF2:
  762  000017ec  2001ffff	addi	r1,r0,#-1
  763  000017f0          	L35_LF2:
  764  000017f0  08000004	j	L24_LF2
  765  000017f4  54000000	nop; delay slot nop
  766  000017f8          	L33_LF2:
  767  000017f8          	L24_LF2:
  768  000017f8  8fa20000	lw	r2,0(r29)
  769  000017fc  8fa30004	lw	r3,4(r29)
  770  00001800  8fdffff8	lw	r31,-8(r30)
  771  00001804  001ee820	add	r29,r0,r30
  772  00001808  8fdefffc	lw	r30,-4(r30)
  773  0000180c  4be00000	jr	r31
  774  00001810  54000000	nop
  775  00001814          	.endproc _dstrncmp
  776  00001814          	.align 2
  777  00001814          	.proc _dstrlen
  778  00001814          	.global _dstrlen
  779  00001814          	_dstrlen:
  780                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  781  00001814  afbefffc	sw	-4(r29),r30; push fp
  782  00001818  001df020	add	r30,r0,r29; fp = sp
  783  0000181c  afbffff8	sw	-8(r29),r31; push ret addr
  784  00001820  2fbd0018	subui	r29,r29,#24; alloc local storage
  785  00001824  afa20000	sw	0(r29),r2
  786  00001828  20010000	addi	r1,r0,#0
  787  0000182c  afc1fff4	sw	-12(r30),r1
  788  00001830          	L37_LF2:
  789  00001830  8fc10000	lw	r1,(r30)
  790  00001834  20220001	addi	r2,r1,#1
  791  00001838  afc20000	sw	(r30),r2
  792  0000183c  90210000	lbu	r1,(r1)
  793  00001840  64220000	snei	r2,r1,#0
  794  00001844  1440000c	bnez	r2,L39_LF2
  795  00001848  54000000	nop; delay slot nop
  796  0000184c  0800001c	j	L38_LF2
  797  00001850  54000000	nop; delay slot nop
  798  00001854          	L39_LF2:
  799  00001854  8fc2fff4	lw	r2,-12(r30)
  800  00001858  20410001	addi	r1,r2,#1
  801  0000185c  00011020	add	r2,r0,r1
  802  00001860  afc2fff4	sw	-12(r30),r2
  803  00001864  0bffffc8	j	L37_LF2
  804  00001868  54000000	nop; delay slot nop
  805  0000186c          	L38_LF2:
  806  0000186c  8fc1fff4	lw	r1,-12(r30)
  807  00001870  08000004	j	L36_LF2
  808  00001874  54000000	nop; delay slot nop
  809  00001878          	L36_LF2:
  810  00001878  8fa20000	lw	r2,0(r29)
  811  0000187c  8fdffff8	lw	r31,-8(r30)
  812  00001880  001ee820	add	r29,r0,r30
  813  00001884  8fdefffc	lw	r30,-4(r30)
  814  00001888  4be00000	jr	r31
  815  0000188c  54000000	nop
  816  00001890          	.endproc _dstrlen
  817  00001890          	.align 2
  818  00001890          	.proc _dstrstr
  819  00001890          	.global _dstrstr
  820  00001890          	_dstrstr:
  821                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  822  00001890  afbefffc	sw	-4(r29),r30; push fp
  823  00001894  001df020	add	r30,r0,r29; fp = sp
  824  00001898  afbffff8	sw	-8(r29),r31; push ret addr
  825  0000189c  2fbd0018	subui	r29,r29,#24; alloc local storage
  826  000018a0  afa20000	sw	0(r29),r2
  827  000018a4  23bdfff8	addi	r29,r29,#-8
  828  000018a8  001d0820	add	r1,r0,r29
  829  000018ac  8fc20004	lw	r2,4(r30)
  830  000018b0  ac220000	sw	(r1),r2
  831  000018b4  0fffff5c	jal	_dstrlen
  832  000018b8  54000000	nop; delay slot nop
  833  000018bc  23bd0008	addi	r29,r29,#8
  834  000018c0  afc1fff4	sw	-12(r30),r1
  835  000018c4          	L41_LF2:
  836  000018c4  8fc10000	lw	r1,(r30)
  837  000018c8  90220000	lbu	r2,(r1)
  838  000018cc  64410000	snei	r1,r2,#0
  839  000018d0  1420000c	bnez	r1,L43_LF2
  840  000018d4  54000000	nop; delay slot nop
  841  000018d8  08000060	j	L42_LF2
  842  000018dc  54000000	nop; delay slot nop
  843  000018e0          	L43_LF2:
  844  000018e0  23bdfff0	addi	r29,r29,#-16
  845  000018e4  001d0820	add	r1,r0,r29
  846  000018e8  8fc20000	lw	r2,(r30)
  847  000018ec  ac220000	sw	(r1),r2
  848  000018f0  8fc20004	lw	r2,4(r30)
  849  000018f4  ac220004	sw	4(r1),r2
  850  000018f8  8fc2fff4	lw	r2,-12(r30)
  851  000018fc  ac220008	sw	8(r1),r2
  852  00001900  0ffffdc0	jal	_dstrncmp
  853  00001904  54000000	nop; delay slot nop
  854  00001908  23bd0010	addi	r29,r29,#16
  855  0000190c  64220000	snei	r2,r1,#0
  856  00001910  14400010	bnez	r2,L44_LF2
  857  00001914  54000000	nop; delay slot nop
  858  00001918  8fc10000	lw	r1,(r30)
  859  0000191c  08000028	j	L40_LF2
  860  00001920  54000000	nop; delay slot nop
  861  00001924          	L44_LF2:
  862  00001924  8fc20000	lw	r2,(r30)
  863  00001928  20410001	addi	r1,r2,#1
  864  0000192c  00011020	add	r2,r0,r1
  865  00001930  afc20000	sw	(r30),r2
  866  00001934  0bffff8c	j	L41_LF2
  867  00001938  54000000	nop; delay slot nop
  868  0000193c          	L42_LF2:
  869  0000193c  20010000	addi	r1,r0,#0
  870  00001940  08000004	j	L40_LF2
  871  00001944  54000000	nop; delay slot nop
  872  00001948          	L40_LF2:
  873  00001948  8fa20000	lw	r2,0(r29)
  874  0000194c  8fdffff8	lw	r31,-8(r30)
  875  00001950  001ee820	add	r29,r0,r30
  876  00001954  8fdefffc	lw	r30,-4(r30)
  877  00001958  4be00000	jr	r31
  878  0000195c  54000000	nop
  879  00001960          	.endproc _dstrstr
  880  00001960          	.align 2
  881  00001960          	.proc _dmindex
  882  00001960          	.global _dmindex
  883  00001960          	_dmindex:
  884                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  885  00001960  afbefffc	sw	-4(r29),r30; push fp
  886  00001964  001df020	add	r30,r0,r29; fp = sp
  887  00001968  afbffff8	sw	-8(r29),r31; push ret addr
  888  0000196c  2fbd0018	subui	r29,r29,#24; alloc local storage
  889  00001970  afa20000	sw	0(r29),r2
  890  00001974  54000000	nop
  891  00001978          	L46_LF2:
  892  00001978  8fc10000	lw	r1,(r30)
  893  0000197c  90220000	lbu	r2,(r1)
  894  00001980  64410000	snei	r1,r2,#0
  895  00001984  1420000c	bnez	r1,L48_LF2
  896  00001988  54000000	nop; delay slot nop
  897  0000198c  08000070	j	L47_LF2
  898  00001990  54000000	nop; delay slot nop
  899  00001994          	L48_LF2:
  900  00001994  8fc10004	lw	r1,4(r30)
  901  00001998  afc1fff4	sw	-12(r30),r1
  902  0000199c          	L49_LF2:
  903  0000199c  8fc1fff4	lw	r1,-12(r30)
  904  000019a0  90220000	lbu	r2,(r1)
  905  000019a4  64410000	snei	r1,r2,#0
  906  000019a8  1420000c	bnez	r1,L52_LF2
  907  000019ac  54000000	nop; delay slot nop
  908  000019b0  08000044	j	L50_LF2
  909  000019b4  54000000	nop; delay slot nop
  910  000019b8          	L52_LF2:
  911  000019b8  8fc10000	lw	r1,(r30)
  912  000019bc  8fc2fff4	lw	r2,-12(r30)
  913  000019c0  90210000	lbu	r1,(r1)
  914  000019c4  90420000	lbu	r2,(r2)
  915  000019c8  00220828	seq	r1,r1,r2
  916  000019cc  10200010	beqz	r1,L51_LF2
  917  000019d0  54000000	nop; delay slot nop
  918  000019d4  8fc10000	lw	r1,(r30)
  919  000019d8  08000030	j	L45_LF2
  920  000019dc  54000000	nop; delay slot nop
  921  000019e0          	L53_LF2:
  922  000019e0          	L51_LF2:
  923  000019e0  8fc2fff4	lw	r2,-12(r30)
  924  000019e4  20410001	addi	r1,r2,#1
  925  000019e8  00011020	add	r2,r0,r1
  926  000019ec  afc2fff4	sw	-12(r30),r2
  927  000019f0  0bffffa8	j	L49_LF2
  928  000019f4  54000000	nop; delay slot nop
  929  000019f8          	L50_LF2:
  930  000019f8  0bffff7c	j	L46_LF2
  931  000019fc  54000000	nop; delay slot nop
  932  00001a00          	L47_LF2:
  933  00001a00  20010000	addi	r1,r0,#0
  934  00001a04  08000004	j	L45_LF2
  935  00001a08  54000000	nop; delay slot nop
  936  00001a0c          	L45_LF2:
  937  00001a0c  8fa20000	lw	r2,0(r29)
  938  00001a10  8fdffff8	lw	r31,-8(r30)
  939  00001a14  001ee820	add	r29,r0,r30
  940  00001a18  8fdefffc	lw	r30,-4(r30)
  941  00001a1c  4be00000	jr	r31
  942  00001a20  54000000	nop
  943  00001a24          	.endproc _dmindex
  944  00001a24          	.align 2
  945  00001a24          	.proc _dindex
  946  00001a24          	.global _dindex
  947  00001a24          	_dindex:
  948                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  949  00001a24  afbefffc	sw	-4(r29),r30; push fp
  950  00001a28  001df020	add	r30,r0,r29; fp = sp
  951  00001a2c  afbffff8	sw	-8(r29),r31; push ret addr
  952  00001a30  2fbd0010	subui	r29,r29,#16; alloc local storage
  953  00001a34  afa20000	sw	0(r29),r2
  954  00001a38  54000000	nop
  955  00001a3c          	L55_LF2:
  956  00001a3c  8fc10000	lw	r1,(r30)
  957  00001a40  90220000	lbu	r2,(r1)
  958  00001a44  64410000	snei	r1,r2,#0
  959  00001a48  1420000c	bnez	r1,L57_LF2
  960  00001a4c  54000000	nop; delay slot nop
  961  00001a50  08000040	j	L56_LF2
  962  00001a54  54000000	nop; delay slot nop
  963  00001a58          	L57_LF2:
  964  00001a58  8fc10000	lw	r1,(r30)
  965  00001a5c  90220000	lbu	r2,(r1)
  966  00001a60  8fc10004	lw	r1,4(r30)
  967  00001a64  00411028	seq	r2,r2,r1
  968  00001a68  10400010	beqz	r2,L58_LF2
  969  00001a6c  54000000	nop; delay slot nop
  970  00001a70  8fc10000	lw	r1,(r30)
  971  00001a74  08000028	j	L54_LF2
  972  00001a78  54000000	nop; delay slot nop
  973  00001a7c          	L58_LF2:
  974  00001a7c  8fc20000	lw	r2,(r30)
  975  00001a80  20410001	addi	r1,r2,#1
  976  00001a84  00011020	add	r2,r0,r1
  977  00001a88  afc20000	sw	(r30),r2
  978  00001a8c  0bffffac	j	L55_LF2
  979  00001a90  54000000	nop; delay slot nop
  980  00001a94          	L56_LF2:
  981  00001a94  20010000	addi	r1,r0,#0
  982  00001a98  08000004	j	L54_LF2
  983  00001a9c  54000000	nop; delay slot nop
  984  00001aa0          	L54_LF2:
  985  00001aa0  8fa20000	lw	r2,0(r29)
  986  00001aa4  8fdffff8	lw	r31,-8(r30)
  987  00001aa8  001ee820	add	r29,r0,r30
  988  00001aac  8fdefffc	lw	r30,-4(r30)
  989  00001ab0  4be00000	jr	r31
  990  00001ab4  54000000	nop
  991  00001ab8          	.endproc _dindex
  992  00001ab8          	.align 2
  993  00001ab8          	.proc _ditoa
  994  00001ab8          	.global _ditoa
  995  00001ab8          	_ditoa:
  996                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  997  00001ab8  afbefffc	sw	-4(r29),r30; push fp
  998  00001abc  001df020	add	r30,r0,r29; fp = sp
  999  00001ac0  afbffff8	sw	-8(r29),r31; push ret addr
 1000  00001ac4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1001  00001ac8  afa20000	sw	0(r29),r2
 1002  00001acc  afa30004	sw	4(r29),r3
 1003  00001ad0  8fc10000	lw	r1,(r30)
 1004  00001ad4  68220000	slti	r2,r1,#0
 1005  00001ad8  1040002c	beqz	r2,L60_LF2
 1006  00001adc  54000000	nop; delay slot nop
 1007  00001ae0  8fc10004	lw	r1,4(r30)
 1008  00001ae4  20220001	addi	r2,r1,#1
 1009  00001ae8  afc20004	sw	4(r30),r2
 1010  00001aec  2002002d	addi	r2,r0,(#0x2d)&0xff
 1011  00001af0  a0220000	sb	(r1),r2
 1012  00001af4  8fc10000	lw	r1,(r30)
 1013  00001af8  00011022	sub	r2,r0,r1
 1014  00001afc  afc20000	sw	(r30),r2
 1015  00001b00  08000118	j	L61_LF2
 1016  00001b04  54000000	nop; delay slot nop
 1017  00001b08          	L60_LF2:
 1018  00001b08  8fc10000	lw	r1,(r30)
 1019  00001b0c  64220000	snei	r2,r1,#0
 1020  00001b10  14400020	bnez	r2,L62_LF2
 1021  00001b14  54000000	nop; delay slot nop
 1022  00001b18  8fc10004	lw	r1,4(r30)
 1023  00001b1c  20220001	addi	r2,r1,#1
 1024  00001b20  afc20004	sw	4(r30),r2
 1025  00001b24  20020030	addi	r2,r0,(#0x30)&0xff
 1026  00001b28  a0220000	sb	(r1),r2
 1027  00001b2c  080000ec	j	L61_LF2
 1028  00001b30  54000000	nop; delay slot nop
 1029  00001b34          	L62_LF2:
 1030  00001b34  20010001	addi	r1,r0,#1
 1031  00001b38  afc1fff4	sw	-12(r30),r1
 1032  00001b3c          	L64_LF2:
 1033  00001b3c  8fc1fff4	lw	r1,-12(r30)
 1034  00001b40  8fc20000	lw	r2,(r30)
 1035  00001b44  0022082c	sle	r1,r1,r2
 1036  00001b48  1420000c	bnez	r1,L66_LF2
 1037  00001b4c  54000000	nop; delay slot nop
 1038  00001b50  08000024	j	L65_LF2
 1039  00001b54  54000000	nop; delay slot nop
 1040  00001b58          	L67_LF2:
 1041  00001b58          	L66_LF2:
 1042  00001b58  8fc1fff4	lw	r1,-12(r30)
 1043  00001b5c  00011820	add	r3,r0,r1
 1044  00001b60  50620002	slli	r2,r3,#0x2
 1045  00001b64  00411020	add	r2,r2,r1
 1046  00001b68  50410001	slli	r1,r2,#0x1
 1047  00001b6c  afc1fff4	sw	-12(r30),r1
 1048  00001b70  0bffffc8	j	L64_LF2
 1049  00001b74  54000000	nop; delay slot nop
 1050  00001b78          	L65_LF2:
 1051  00001b78  54000000	nop
 1052  00001b7c          	L68_LF2:
 1053  00001b7c  8fc1fff4	lw	r1,-12(r30)
 1054  00001b80  2002000a	addi	r2,r0,#10
 1055  00001b84  00200035	movi2fp	f0,r1
 1056  00001b88  00400835	movi2fp	f1,r2
 1057  00001b8c  0401000f	div	f0,f0,f1
 1058  00001b90  00000834	movfp2i	r1,f0
 1059  00001b94  afc1fff4	sw	-12(r30),r1
 1060  00001b98  8fc10004	lw	r1,4(r30)
 1061  00001b9c  20220001	addi	r2,r1,#1
 1062  00001ba0  afc20004	sw	4(r30),r2
 1063  00001ba4  8fc20000	lw	r2,(r30)
 1064  00001ba8  8fc3fff4	lw	r3,-12(r30)
 1065  00001bac  00400035	movi2fp	f0,r2
 1066  00001bb0  00600835	movi2fp	f1,r3
 1067  00001bb4  0401000f	div	f0,f0,f1
 1068  00001bb8  00001034	movfp2i	r2,f0
 1069  00001bbc  00021820	add	r3,r0,r2
 1070  00001bc0  20620030	addi	r2,r3,#48
 1071  00001bc4  a0220000	sb	(r1),r2
 1072  00001bc8  8fc10000	lw	r1,(r30)
 1073  00001bcc  8fc3fff4	lw	r3,-12(r30)
 1074  00001bd0  00200035	movi2fp	f0,r1
 1075  00001bd4  00600835	movi2fp	f1,r3
 1076  00001bd8  0401000f	div	f0,f0,f1
 1077  00001bdc  00001034	movfp2i	r2,f0
 1078  00001be0  8fc3fff4	lw	r3,-12(r30)
 1079  00001be4  00400035	movi2fp	f0,r2
 1080  00001be8  00600835	movi2fp	f1,r3
 1081  00001bec  0401000e	mult	f0,f0,f1
 1082  00001bf0  00001034	movfp2i	r2,f0
 1083  00001bf4  00220822	sub	r1,r1,r2
 1084  00001bf8  afc10000	sw	(r30),r1
 1085  00001bfc          	L70_LF2:
 1086  00001bfc  8fc1fff4	lw	r1,-12(r30)
 1087  00001c00  6c220001	sgti	r2,r1,#1
 1088  00001c04  1440000c	bnez	r2,L71_LF2
 1089  00001c08  54000000	nop; delay slot nop
 1090  00001c0c  0800000c	j	L61_LF2
 1091  00001c10  54000000	nop; delay slot nop
 1092  00001c14          	L71_LF2:
 1093  00001c14  0bffff64	j	L68_LF2
 1094  00001c18  54000000	nop; delay slot nop
 1095  00001c1c          	L69_LF2:
 1096  00001c1c          	L63_LF2:
 1097  00001c1c          	L61_LF2:
 1098  00001c1c  8fc10004	lw	r1,4(r30)
 1099  00001c20  20020000	addi	r2,r0,(#0x0)&0xff
 1100  00001c24  a0220000	sb	(r1),r2
 1101  00001c28          	L59_LF2:
 1102  00001c28  8fa20000	lw	r2,0(r29)
 1103  00001c2c  8fa30004	lw	r3,4(r29)
 1104  00001c30  8fdffff8	lw	r31,-8(r30)
 1105  00001c34  001ee820	add	r29,r0,r30
 1106  00001c38  8fdefffc	lw	r30,-4(r30)
 1107  00001c3c  4be00000	jr	r31
 1108  00001c40  54000000	nop
 1109  00001c44          	.endproc _ditoa
 1110  00001c44          	.align 2
 1111  00001c44          	.proc _dstrtol
 1112  00001c44          	.global _dstrtol
 1113  00001c44          	_dstrtol:
 1114                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1115  00001c44  afbefffc	sw	-4(r29),r30; push fp
 1116  00001c48  001df020	add	r30,r0,r29; fp = sp
 1117  00001c4c  afbffff8	sw	-8(r29),r31; push ret addr
 1118  00001c50  2fbd0020	subui	r29,r29,#32; alloc local storage
 1119  00001c54  afa20000	sw	0(r29),r2
 1120  00001c58  20010000	addi	r1,r0,#0
 1121  00001c5c  afc1fff4	sw	-12(r30),r1
 1122  00001c60          	L73_LF2:
 1123  00001c60  8fc10000	lw	r1,(r30)
 1124  00001c64  90220000	lbu	r2,(r1)
 1125  00001c68  60410020	seqi	r1,r2,#32
 1126  00001c6c  14200034	bnez	r1,L75_LF2
 1127  00001c70  54000000	nop; delay slot nop
 1128  00001c74  8fc10000	lw	r1,(r30)
 1129  00001c78  90220000	lbu	r2,(r1)
 1130  00001c7c  60410009	seqi	r1,r2,#9
 1131  00001c80  14200020	bnez	r1,L75_LF2
 1132  00001c84  54000000	nop; delay slot nop
 1133  00001c88  8fc10000	lw	r1,(r30)
 1134  00001c8c  90220000	lbu	r2,(r1)
 1135  00001c90  6041000a	seqi	r1,r2,#10
 1136  00001c94  1420000c	bnez	r1,L75_LF2
 1137  00001c98  54000000	nop; delay slot nop
 1138  00001c9c  0800001c	j	L74_LF2
 1139  00001ca0  54000000	nop; delay slot nop
 1140  00001ca4          	L75_LF2:
 1141  00001ca4  8fc20000	lw	r2,(r30)
 1142  00001ca8  20410001	addi	r1,r2,#1
 1143  00001cac  00011020	add	r2,r0,r1
 1144  00001cb0  afc20000	sw	(r30),r2
 1145  00001cb4  0bffffa8	j	L73_LF2
 1146  00001cb8  54000000	nop; delay slot nop
 1147  00001cbc          	L74_LF2:
 1148  00001cbc  8fc10004	lw	r1,4(r30)
 1149  00001cc0  64220000	snei	r2,r1,#0
 1150  00001cc4  10400010	beqz	r2,L76_LF2
 1151  00001cc8  54000000	nop; delay slot nop
 1152  00001ccc  8fc10004	lw	r1,4(r30)
 1153  00001cd0  8fc20000	lw	r2,(r30)
 1154  00001cd4  ac220000	sw	(r1),r2
 1155  00001cd8          	L76_LF2:
 1156  00001cd8  8fc10000	lw	r1,(r30)
 1157  00001cdc  90220000	lbu	r2,(r1)
 1158  00001ce0  64410000	snei	r1,r2,#0
 1159  00001ce4  14200010	bnez	r1,L77_LF2
 1160  00001ce8  54000000	nop; delay slot nop
 1161  00001cec  8fc1fff4	lw	r1,-12(r30)
 1162  00001cf0  08000294	j	L72_LF2
 1163  00001cf4  54000000	nop; delay slot nop
 1164  00001cf8          	L77_LF2:
 1165  00001cf8  8fc10000	lw	r1,(r30)
 1166  00001cfc  90220000	lbu	r2,(r1)
 1167  00001d00  6041002d	seqi	r1,r2,#45
 1168  00001d04  10200024	beqz	r1,L78_LF2
 1169  00001d08  54000000	nop; delay slot nop
 1170  00001d0c  2001ffff	addi	r1,r0,#-1
 1171  00001d10  afc1ffec	sw	-20(r30),r1
 1172  00001d14  8fc20000	lw	r2,(r30)
 1173  00001d18  20410001	addi	r1,r2,#1
 1174  00001d1c  00011020	add	r2,r0,r1
 1175  00001d20  afc20000	sw	(r30),r2
 1176  00001d24  0800000c	j	L79_LF2
 1177  00001d28  54000000	nop; delay slot nop
 1178  00001d2c          	L78_LF2:
 1179  00001d2c  20010001	addi	r1,r0,#1
 1180  00001d30  afc1ffec	sw	-20(r30),r1
 1181  00001d34          	L79_LF2:
 1182  00001d34  8fc10008	lw	r1,8(r30)
 1183  00001d38  64220000	snei	r2,r1,#0
 1184  00001d3c  14400090	bnez	r2,L80_LF2
 1185  00001d40  54000000	nop; delay slot nop
 1186  00001d44  8fc10000	lw	r1,(r30)
 1187  00001d48  90220000	lbu	r2,(r1)
 1188  00001d4c  60410030	seqi	r1,r2,#48
 1189  00001d50  10200074	beqz	r1,L81_LF2
 1190  00001d54  54000000	nop; delay slot nop
 1191  00001d58  8fc20000	lw	r2,(r30)
 1192  00001d5c  20410001	addi	r1,r2,#1
 1193  00001d60  00011020	add	r2,r0,r1
 1194  00001d64  afc20000	sw	(r30),r2
 1195  00001d68  8fc10000	lw	r1,(r30)
 1196  00001d6c  90220000	lbu	r2,(r1)
 1197  00001d70  60410078	seqi	r1,r2,#120
 1198  00001d74  14200020	bnez	r1,L83_LF2
 1199  00001d78  54000000	nop; delay slot nop
 1200  00001d7c  8fc10000	lw	r1,(r30)
 1201  00001d80  90220000	lbu	r2,(r1)
 1202  00001d84  60410058	seqi	r1,r2,#88
 1203  00001d88  1420000c	bnez	r1,L83_LF2
 1204  00001d8c  54000000	nop; delay slot nop
 1205  00001d90  08000024	j	L82_LF2
 1206  00001d94  54000000	nop; delay slot nop
 1207  00001d98          	L83_LF2:
 1208  00001d98  20010010	addi	r1,r0,#16
 1209  00001d9c  afc10008	sw	8(r30),r1
 1210  00001da0  8fc20000	lw	r2,(r30)
 1211  00001da4  20410001	addi	r1,r2,#1
 1212  00001da8  00011020	add	r2,r0,r1
 1213  00001dac  afc20000	sw	(r30),r2
 1214  00001db0  0800000c	j	L84_LF2
 1215  00001db4  54000000	nop; delay slot nop
 1216  00001db8          	L82_LF2:
 1217  00001db8  20010008	addi	r1,r0,#8
 1218  00001dbc  afc10008	sw	8(r30),r1
 1219  00001dc0          	L84_LF2:
 1220  00001dc0  0800000c	j	L80_LF2
 1221  00001dc4  54000000	nop; delay slot nop
 1222  00001dc8          	L81_LF2:
 1223  00001dc8  2001000a	addi	r1,r0,#10
 1224  00001dcc  afc10008	sw	8(r30),r1
 1225  00001dd0          	L85_LF2:
 1226  00001dd0          	L80_LF2:
 1227  00001dd0  8fc10008	lw	r1,8(r30)
 1228  00001dd4  70220000	slei	r2,r1,#0
 1229  00001dd8  1440001c	bnez	r2,L87_LF2
 1230  00001ddc  54000000	nop; delay slot nop
 1231  00001de0  8fc10008	lw	r1,8(r30)
 1232  00001de4  6c220010	sgti	r2,r1,#16
 1233  00001de8  1440000c	bnez	r2,L87_LF2
 1234  00001dec  54000000	nop; delay slot nop
 1235  00001df0  08000010	j	L86_LF2
 1236  00001df4  54000000	nop; delay slot nop
 1237  00001df8          	L87_LF2:
 1238  00001df8  8fc1fff4	lw	r1,-12(r30)
 1239  00001dfc  08000188	j	L72_LF2
 1240  00001e00  54000000	nop; delay slot nop
 1241  00001e04          	L86_LF2:
 1242  00001e04  54000000	nop
 1243  00001e08          	L88_LF2:
 1244  00001e08  8fc10000	lw	r1,(r30)
 1245  00001e0c  90220000	lbu	r2,(r1)
 1246  00001e10  6c41002f	sgtui	r1,r2,#47
 1247  00001e14  10200030	beqz	r1,L91_LF2
 1248  00001e18  54000000	nop; delay slot nop
 1249  00001e1c  8fc10000	lw	r1,(r30)
 1250  00001e20  90220000	lbu	r2,(r1)
 1251  00001e24  70410039	sleui	r1,r2,#57
 1252  00001e28  1020001c	beqz	r1,L91_LF2
 1253  00001e2c  54000000	nop; delay slot nop
 1254  00001e30  8fc10000	lw	r1,(r30)
 1255  00001e34  90220000	lbu	r2,(r1)
 1256  00001e38  2041ffd0	addi	r1,r2,#-48
 1257  00001e3c  afc1fff0	sw	-16(r30),r1
 1258  00001e40  0800008c	j	L92_LF2
 1259  00001e44  54000000	nop; delay slot nop
 1260  00001e48          	L91_LF2:
 1261  00001e48  8fc10000	lw	r1,(r30)
 1262  00001e4c  90220000	lbu	r2,(r1)
 1263  00001e50  6c410060	sgtui	r1,r2,#96
 1264  00001e54  10200030	beqz	r1,L93_LF2
 1265  00001e58  54000000	nop; delay slot nop
 1266  00001e5c  8fc10000	lw	r1,(r30)
 1267  00001e60  90220000	lbu	r2,(r1)
 1268  00001e64  7041007a	sleui	r1,r2,#122
 1269  00001e68  1020001c	beqz	r1,L93_LF2
 1270  00001e6c  54000000	nop; delay slot nop
 1271  00001e70  8fc10000	lw	r1,(r30)
 1272  00001e74  90220000	lbu	r2,(r1)
 1273  00001e78  2041ffa9	addi	r1,r2,#-87
 1274  00001e7c  afc1fff0	sw	-16(r30),r1
 1275  00001e80  0800004c	j	L92_LF2
 1276  00001e84  54000000	nop; delay slot nop
 1277  00001e88          	L93_LF2:
 1278  00001e88  8fc10000	lw	r1,(r30)
 1279  00001e8c  90220000	lbu	r2,(r1)
 1280  00001e90  6c410040	sgtui	r1,r2,#64
 1281  00001e94  10200030	beqz	r1,L95_LF2
 1282  00001e98  54000000	nop; delay slot nop
 1283  00001e9c  8fc10000	lw	r1,(r30)
 1284  00001ea0  90220000	lbu	r2,(r1)
 1285  00001ea4  7041005a	sleui	r1,r2,#90
 1286  00001ea8  1020001c	beqz	r1,L95_LF2
 1287  00001eac  54000000	nop; delay slot nop
 1288  00001eb0  8fc10000	lw	r1,(r30)
 1289  00001eb4  90220000	lbu	r2,(r1)
 1290  00001eb8  2041ffc9	addi	r1,r2,#-55
 1291  00001ebc  afc1fff0	sw	-16(r30),r1
 1292  00001ec0  0800000c	j	L92_LF2
 1293  00001ec4  54000000	nop; delay slot nop
 1294  00001ec8          	L95_LF2:
 1295  00001ec8  200103e8	addi	r1,r0,#1000
 1296  00001ecc  afc1fff0	sw	-16(r30),r1
 1297  00001ed0          	L96_LF2:
 1298  00001ed0          	L94_LF2:
 1299  00001ed0          	L92_LF2:
 1300  00001ed0  8fc1fff0	lw	r1,-16(r30)
 1301  00001ed4  8fc20008	lw	r2,8(r30)
 1302  00001ed8  0022082a	slt	r1,r1,r2
 1303  00001edc  10200040	beqz	r1,L90_LF2
 1304  00001ee0  54000000	nop; delay slot nop
 1305  00001ee4  8fc1fff4	lw	r1,-12(r30)
 1306  00001ee8  8fc20008	lw	r2,8(r30)
 1307  00001eec  00200035	movi2fp	f0,r1
 1308  00001ef0  00400835	movi2fp	f1,r2
 1309  00001ef4  0401000e	mult	f0,f0,f1
 1310  00001ef8  00000834	movfp2i	r1,f0
 1311  00001efc  afc1fff4	sw	-12(r30),r1
 1312  00001f00  8fc1fff4	lw	r1,-12(r30)
 1313  00001f04  8fc2fff0	lw	r2,-16(r30)
 1314  00001f08  00220820	add	r1,r1,r2
 1315  00001f0c  afc1fff4	sw	-12(r30),r1
 1316  00001f10  8fc20000	lw	r2,(r30)
 1317  00001f14  20410001	addi	r1,r2,#1
 1318  00001f18  00011020	add	r2,r0,r1
 1319  00001f1c  afc20000	sw	(r30),r2
 1320  00001f20          	L97_LF2:
 1321  00001f20          	L90_LF2:
 1322  00001f20  8fc1fff0	lw	r1,-16(r30)
 1323  00001f24  8fc20008	lw	r2,8(r30)
 1324  00001f28  0022082a	slt	r1,r1,r2
 1325  00001f2c  1420000c	bnez	r1,L98_LF2
 1326  00001f30  54000000	nop; delay slot nop
 1327  00001f34  0800000c	j	L89_LF2
 1328  00001f38  54000000	nop; delay slot nop
 1329  00001f3c          	L98_LF2:
 1330  00001f3c  0bfffec8	j	L88_LF2
 1331  00001f40  54000000	nop; delay slot nop
 1332  00001f44          	L89_LF2:
 1333  00001f44  8fc10004	lw	r1,4(r30)
 1334  00001f48  64220000	snei	r2,r1,#0
 1335  00001f4c  10400010	beqz	r2,L99_LF2
 1336  00001f50  54000000	nop; delay slot nop
 1337  00001f54  8fc10004	lw	r1,4(r30)
 1338  00001f58  8fc20000	lw	r2,(r30)
 1339  00001f5c  ac220000	sw	(r1),r2
 1340  00001f60          	L99_LF2:
 1341  00001f60  8fc1fff4	lw	r1,-12(r30)
 1342  00001f64  8fc2ffec	lw	r2,-20(r30)
 1343  00001f68  00200035	movi2fp	f0,r1
 1344  00001f6c  00400835	movi2fp	f1,r2
 1345  00001f70  0401000e	mult	f0,f0,f1
 1346  00001f74  00000834	movfp2i	r1,f0
 1347  00001f78  afc1fff4	sw	-12(r30),r1
 1348  00001f7c  8fc1fff4	lw	r1,-12(r30)
 1349  00001f80  08000004	j	L72_LF2
 1350  00001f84  54000000	nop; delay slot nop
 1351  00001f88          	L72_LF2:
 1352  00001f88  8fa20000	lw	r2,0(r29)
 1353  00001f8c  8fdffff8	lw	r31,-8(r30)
 1354  00001f90  001ee820	add	r29,r0,r30
 1355  00001f94  8fdefffc	lw	r30,-4(r30)
 1356  00001f98  4be00000	jr	r31
 1357  00001f9c  54000000	nop
 1358  00001fa0          	.endproc _dstrtol
 1359  00001fa0          	.align 2
 1360  00001fa0          	.proc _bcopy
 1361  00001fa0          	.global _bcopy
 1362  00001fa0          	_bcopy:
 1363                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1364  00001fa0  afbefffc	sw	-4(r29),r30; push fp
 1365  00001fa4  001df020	add	r30,r0,r29; fp = sp
 1366  00001fa8  afbffff8	sw	-8(r29),r31; push ret addr
 1367  00001fac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1368  00001fb0  afa20000	sw	0(r29),r2
 1369  00001fb4  afa30004	sw	4(r29),r3
 1370  00001fb8  54000000	nop
 1371  00001fbc          	L101_LF2:
 1372  00001fbc  8fc10008	lw	r1,8(r30)
 1373  00001fc0  2022ffff	addi	r2,r1,#-1
 1374  00001fc4  afc20008	sw	8(r30),r2
 1375  00001fc8  6c210000	sgti	r1,r1,#0
 1376  00001fcc  1420000c	bnez	r1,L103_LF2
 1377  00001fd0  54000000	nop; delay slot nop
 1378  00001fd4  0800002c	j	L102_LF2
 1379  00001fd8  54000000	nop; delay slot nop
 1380  00001fdc          	L103_LF2:
 1381  00001fdc  8fc10004	lw	r1,4(r30)
 1382  00001fe0  20220001	addi	r2,r1,#1
 1383  00001fe4  afc20004	sw	4(r30),r2
 1384  00001fe8  8fc20000	lw	r2,(r30)
 1385  00001fec  20430001	addi	r3,r2,#1
 1386  00001ff0  afc30000	sw	(r30),r3
 1387  00001ff4  80420000	lb	r2,(r2)
 1388  00001ff8  a0220000	sb	(r1),r2
 1389  00001ffc  0bffffbc	j	L101_LF2
 1390  00002000  54000000	nop; delay slot nop
 1391  00002004          	L102_LF2:
 1392  00002004          	L100_LF2:
 1393  00002004  8fa20000	lw	r2,0(r29)
 1394  00002008  8fa30004	lw	r3,4(r29)
 1395  0000200c  8fdffff8	lw	r31,-8(r30)
 1396  00002010  001ee820	add	r29,r0,r30
 1397  00002014  8fdefffc	lw	r30,-4(r30)
 1398  00002018  4be00000	jr	r31
 1399  0000201c  54000000	nop
 1400  00002020          	.endproc _bcopy
 1401  00002020          	.align 2
 1402  00002020          	.proc _bzero
 1403  00002020          	.global _bzero
 1404  00002020          	_bzero:
 1405                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1406  00002020  afbefffc	sw	-4(r29),r30; push fp
 1407  00002024  001df020	add	r30,r0,r29; fp = sp
 1408  00002028  afbffff8	sw	-8(r29),r31; push ret addr
 1409  0000202c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1410  00002030  afa20000	sw	0(r29),r2
 1411  00002034  54000000	nop
 1412  00002038          	L105_LF2:
 1413  00002038  8fc10004	lw	r1,4(r30)
 1414  0000203c  2022ffff	addi	r2,r1,#-1
 1415  00002040  afc20004	sw	4(r30),r2
 1416  00002044  6c210000	sgti	r1,r1,#0
 1417  00002048  1420000c	bnez	r1,L107_LF2
 1418  0000204c  54000000	nop; delay slot nop
 1419  00002050  08000020	j	L106_LF2
 1420  00002054  54000000	nop; delay slot nop
 1421  00002058          	L107_LF2:
 1422  00002058  8fc10000	lw	r1,(r30)
 1423  0000205c  20220001	addi	r2,r1,#1
 1424  00002060  afc20000	sw	(r30),r2
 1425  00002064  20020000	addi	r2,r0,(#0x0)&0xff
 1426  00002068  a0220000	sb	(r1),r2
 1427  0000206c  0bffffc8	j	L105_LF2
 1428  00002070  54000000	nop; delay slot nop
 1429  00002074          	L106_LF2:
 1430  00002074          	L104_LF2:
 1431  00002074  8fa20000	lw	r2,0(r29)
 1432  00002078  8fdffff8	lw	r31,-8(r30)
 1433  0000207c  001ee820	add	r29,r0,r30
 1434  00002080  8fdefffc	lw	r30,-4(r30)
 1435  00002084  4be00000	jr	r31
 1436  00002088  54000000	nop
 1437  0000208c          	.endproc _bzero
 1438  0000208c          	.align 2
 1439  0000208c          	.proc _min
 1440  0000208c          	.global _min
 1441  0000208c          	_min:
 1442                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1443  0000208c  afbefffc	sw	-4(r29),r30; push fp
 1444  00002090  001df020	add	r30,r0,r29; fp = sp
 1445  00002094  afbffff8	sw	-8(r29),r31; push ret addr
 1446  00002098  2fbd0010	subui	r29,r29,#16; alloc local storage
 1447  0000209c  afa20000	sw	0(r29),r2
 1448  000020a0  afa30004	sw	4(r29),r3
 1449  000020a4  8fc10000	lw	r1,(r30)
 1450  000020a8  8fc20004	lw	r2,4(r30)
 1451  000020ac  0022182c	sle	r3,r1,r2
 1452  000020b0  14600008	bnez	r3,L109_LF2
 1453  000020b4  54000000	nop; delay slot nop
 1454  000020b8  8fc10004	lw	r1,4(r30)
 1455  000020bc          	L109_LF2:
 1456  000020bc  08000004	j	L108_LF2
 1457  000020c0  54000000	nop; delay slot nop
 1458  000020c4          	L108_LF2:
 1459  000020c4  8fa20000	lw	r2,0(r29)
 1460  000020c8  8fa30004	lw	r3,4(r29)
 1461  000020cc  8fdffff8	lw	r31,-8(r30)
 1462  000020d0  001ee820	add	r29,r0,r30
 1463  000020d4  8fdefffc	lw	r30,-4(r30)
 1464  000020d8  4be00000	jr	r31
 1465  000020dc  54000000	nop
 1466  000020e0          	.endproc _min
 1467                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1468                      ;;;
 1469                      ;;; Most of the traps are called in files from libtraps.
 1472  000020e0          	.align 2
 1473  000020e0          	.proc _exit
 1474  000020e0          	.global _exit
 1475  000020e0          	_exit:
 1476  000020e0  44000300	trap	#0x300
 1477  000020e4  4be00000	jr	r31
 1478  000020e8  54000000	nop
 1479  000020ec          	.endproc _exit
 1481                      ; for the benefit of gcc.
 1482  000020ec          	.proc ___main
 1483  000020ec          	.global ___main
 1484  000020ec          	___main:
 1485  000020ec  4be00000	jr	r31
 1486  000020f0  54000000	nop
 1487  000020f4          	.endproc ___main
 1488  000020f4          	.text
 1489  000020f4          	.global _etext
 1490  000020f4          	_etext:
 1491  000020f4          	.align 3
 1492  000020f8          	.data
 1493  000030b6          	.global _edata
 1494  000030b6          	_edata:
