 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 281
    4                      ; Text size: 4616
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  48656c6c	.ascii "Hello world\000"
   82  00003004  6f20776f	
   82  00003008  726c6400	
   83  0000300c          	.align 2
   84  0000300c          	LC1_LF0:
   85  0000300c  55736167	.ascii "Usage: \000"
   85  00003010  653a2000	
   86  00003014          	.align 2
   87  00003014          	LC2_LF0:
   88  00003014  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   88  00003018  6e646c65	
   88  0000301c  5f746f5f	
   88  00003020  73686172	
   88  00003024  65645f6d	
   88  00003028  656d6f72	
   88  0000302c  795f7061	
   88  00003030  67653e20	
   88  00003034  3c68616e	
   88  00003038  646c655f	
   88  0000303c  746f5f70	
   88  00003040  6167655f	
   88  00003044  6d617070	
   88  00003048  65645f73	
   88  0000304c  656d6170	
   88  00003050  686f7265	
   88  00003054  3e0a00  	
   89  00003057          	.align 2
   90  00003058          	LC3_LF0:
   91  00003058  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   91  0000305c  64206e6f	
   91  00003060  74206d61	
   91  00003064  70207468	
   91  00003068  65207669	
   91  0000306c  72747561	
   91  00003070  6c206164	
   91  00003074  64726573	
   91  00003078  7320746f	
   91  0000307c  20746865	
   91  00003080  206d656d	
   91  00003084  6f727920	
   91  00003088  696e2000	
   92  0000308c          	.align 2
   93  0000308c          	LC4_LF0:
   94  0000308c  2c206578	.ascii ", exiting...\n\000"
   94  00003090  6974696e	
   94  00003094  672e2e2e	
   94  00003098  0a00    	
   95  0000309a          	.align 2
   96  0000309c          	LC5_LF0:
   97  0000309c  50726f64	.ascii "Producer %d inserted: %c\n\000"
   97  000030a0  75636572	
   97  000030a4  20256420	
   97  000030a8  696e7365	
   97  000030ac  72746564	
   97  000030b0  3a202563	
   97  000030b4  0a00    	
   98  000030b6          	.align 2
   99  000030b8          	LC6_LF0:
  100  000030b8  0a4c4f43	.ascii "\nLOCK IS NOT GETTING RELEASED IN THE MIDDLE OF A PROD.\000"
  100  000030bc  4b204953	
  100  000030c0  204e4f54	
  100  000030c4  20474554	
  100  000030c8  54494e47	
  100  000030cc  2052454c	
  100  000030d0  45415345	
  100  000030d4  4420494e	
  100  000030d8  20544845	
  100  000030dc  204d4944	
  100  000030e0  444c4520	
  100  000030e4  4f462041	
  100  000030e8  2050524f	
  100  000030ec  442e00  	
  101  000030ef          	.align 2
  102  000030f0          	LC7_LF0:
  103  000030f0  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  103  000030f4  73656d61	
  103  000030f8  70686f72	
  103  000030fc  6520735f	
  103  00003100  70726f63	
  103  00003104  735f636f	
  103  00003108  6d706c65	
  103  0000310c  74656420	
  103  00003110  28256429	
  103  00003114  20696e20	
  103  00003118  00      	
  104  00003119          	.text
  105  000010d4          	.align 2
  106  000010d4          	.proc _main
  107  000010d4          	.global _main
  108  000010d4          	_main:
  109                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  110  000010d4  afbefffc	sw	-4(r29),r30; push fp
  111  000010d8  001df020	add	r30,r0,r29; fp = sp
  112  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  113  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  114  000010e4  8fc20000	lw	r2,(r30)
  115  000010e8  8fc90004	lw	r9,4(r30)
  116  000010ec  0c001110	jal	___main
  117  000010f0  54000000	nop; not filled.
  118  000010f4  20070000	addi	r7,r0,#0
  119  000010f8  64410004	snei	r1,r2,#4
  120  000010fc  1020004c	beqz	r1,L14_LF0
  121  00001100  54000000	nop; not filled.
  122  00001104  23bdfff8	addi	r29,r29,#-8
  123  00001108  3c0b0000	lhi	r11,((LC1_LF0)>>16)&0xffff
  124  0000110c  256b300c	addui	r11,r11,(LC1_LF0)&0xffff
  125  00001110  afab0000	sw	(r29),r11
  126  00001114  0c0002e0	jal	_Printf
  127  00001118  54000000	nop; not filled.
  128  0000111c  8d2b0000	lw	r11,(r9)
  129  00001120  afab0000	sw	(r29),r11
  130  00001124  0c0002d0	jal	_Printf
  131  00001128  54000000	nop; not filled.
  132  0000112c  3c0b0000	lhi	r11,((LC2_LF0)>>16)&0xffff
  133  00001130  256b3014	addui	r11,r11,(LC2_LF0)&0xffff
  134  00001134  afab0000	sw	(r29),r11
  135  00001138  0c0002bc	jal	_Printf
  136  0000113c  54000000	nop; not filled.
  137  00001140  0c000368	jal	_Exit
  138  00001144  54000000	nop; not filled.
  139  00001148  23bd0008	addi	r29,r29,#8
  140  0000114c          	L14_LF0:
  141  0000114c  23bdfff0	addi	r29,r29,#-16
  142  00001150  8d2b0004	lw	r11,4(r9)
  143  00001154  afab0000	sw	(r29),r11
  144  00001158  200b0000	addi	r11,r0,#0
  145  0000115c  afab0004	sw	4(r29),r11
  146  00001160  200b000a	addi	r11,r0,#10
  147  00001164  afab0008	sw	8(r29),r11
  148  00001168  0c000bec	jal	_dstrtol
  149  0000116c  54000000	nop; not filled.
  150  00001170  00011020	add	r2,r0,r1
  151  00001174  8d2b0008	lw	r11,8(r9)
  152  00001178  afab0000	sw	(r29),r11
  153  0000117c  200b0000	addi	r11,r0,#0
  154  00001180  afab0004	sw	4(r29),r11
  155  00001184  200b000a	addi	r11,r0,#10
  156  00001188  afab0008	sw	8(r29),r11
  157  0000118c  0c000bc8	jal	_dstrtol
  158  00001190  54000000	nop; not filled.
  159  00001194  00015020	add	r10,r0,r1
  160  00001198  8d2b000c	lw	r11,12(r9)
  161  0000119c  afab0000	sw	(r29),r11
  162  000011a0  200b0000	addi	r11,r0,#0
  163  000011a4  afab0004	sw	4(r29),r11
  164  000011a8  200b000a	addi	r11,r0,#10
  165  000011ac  afab0008	sw	8(r29),r11
  166  000011b0  0c000ba4	jal	_dstrtol
  167  000011b4  54000000	nop; not filled.
  168  000011b8  00013020	add	r6,r0,r1
  169  000011bc  afa20000	sw	(r29),r2
  170  000011c0  0c000264	jal	_shmat
  171  000011c4  54000000	nop; not filled.
  172  000011c8  00012020	add	r4,r0,r1
  173  000011cc  23bd0010	addi	r29,r29,#16
  174  000011d0  64810000	snei	r1,r4,#0
  175  000011d4  1420004c	bnez	r1,L15_LF0
  176  000011d8  54000000	nop; not filled.
  177  000011dc  23bdfff8	addi	r29,r29,#-8
  178  000011e0  3c0b0000	lhi	r11,((LC3_LF0)>>16)&0xffff
  179  000011e4  256b3058	addui	r11,r11,(LC3_LF0)&0xffff
  180  000011e8  afab0000	sw	(r29),r11
  181  000011ec  0c000208	jal	_Printf
  182  000011f0  54000000	nop; not filled.
  183  000011f4  8d2b0000	lw	r11,(r9)
  184  000011f8  afab0000	sw	(r29),r11
  185  000011fc  0c0001f8	jal	_Printf
  186  00001200  54000000	nop; not filled.
  187  00001204  3c0b0000	lhi	r11,((LC4_LF0)>>16)&0xffff
  188  00001208  256b308c	addui	r11,r11,(LC4_LF0)&0xffff
  189  0000120c  afab0000	sw	(r29),r11
  190  00001210  0c0001e4	jal	_Printf
  191  00001214  54000000	nop; not filled.
  192  00001218  0c000290	jal	_Exit
  193  0000121c  54000000	nop; not filled.
  194  00001220  23bd0008	addi	r29,r29,#8
  195  00001224          	L15_LF0:
  196  00001224  20080005	addi	r8,r0,#5
  197  00001228  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  198  0000122c  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  199  00001230          	L18_LF0:
  200  00001230  23bdfff8	addi	r29,r29,#-8
  201  00001234  afa60000	sw	(r29),r6
  202  00001238  0c000228	jal	_lock_acquire
  203  0000123c  54000000	nop; not filled.
  204  00001240  23bd0008	addi	r29,r29,#8
  205  00001244  6421ffff	snei	r1,r1,#-1
  206  00001248  102000e4	beqz	r1,L16_LF0
  207  0000124c  54000000	nop; not filled.
  208  00001250  8c9f0000	lw	r31,(r4)
  209  00001254  23e30001	addi	r3,r31,#1
  210  00001258  00600035	movi2fp	f0,r3
  211  0000125c  01000835	movi2fp	f1,r8
  212  00001260  0401000f	div	f0,f0,f1
  213  00001264  00001034	movfp2i	r2,f0
  214  00001268  50410002	slli	r1,r2,#0x2
  215  0000126c  00220820	add	r1,r1,r2
  216  00001270  00611022	sub	r2,r3,r1
  217  00001274  8c810004	lw	r1,4(r4)
  218  00001278  00410829	sne	r1,r2,r1
  219  0000127c  10200074	beqz	r1,L20_LF0
  220  00001280  54000000	nop; not filled.
  221  00001284  53e10002	slli	r1,r31,#0x2
  222  00001288  00241020	add	r2,r1,r4
  223  0000128c  90a10000	lbu	r1,(r5)
  224  00001290  ac410008	sw	8(r2),r1
  225  00001294  20a50001	addi	r5,r5,#1
  226  00001298  20e70001	addi	r7,r7,#1
  227  0000129c  8c810000	lw	r1,(r4)
  228  000012a0  20230001	addi	r3,r1,#1
  229  000012a4  00600035	movi2fp	f0,r3
  230  000012a8  01000835	movi2fp	f1,r8
  231  000012ac  0401000f	div	f0,f0,f1
  232  000012b0  00001034	movfp2i	r2,f0
  233  000012b4  50410002	slli	r1,r2,#0x2
  234  000012b8  00220820	add	r1,r1,r2
  235  000012bc  00610822	sub	r1,r3,r1
  236  000012c0  ac810000	sw	(r4),r1
  237  000012c4  0c00013c	jal	_getpid
  238  000012c8  54000000	nop; not filled.
  239  000012cc  23bdfff0	addi	r29,r29,#-16
  240  000012d0  3c0b0000	lhi	r11,((LC5_LF0)>>16)&0xffff
  241  000012d4  256b309c	addui	r11,r11,(LC5_LF0)&0xffff
  242  000012d8  afab0000	sw	(r29),r11
  243  000012dc  afa10004	sw	4(r29),r1
  244  000012e0  90a1ffff	lbu	r1,-1(r5)
  245  000012e4  afa10008	sw	8(r29),r1
  246  000012e8  0c00010c	jal	_Printf
  247  000012ec  54000000	nop; not filled.
  248  000012f0  23bd0010	addi	r29,r29,#16
  249  000012f4          	L20_LF0:
  250  000012f4  23bdfff8	addi	r29,r29,#-8
  251  000012f8  afa60000	sw	(r29),r6
  252  000012fc  0c000170	jal	_lock_release
  253  00001300  54000000	nop; not filled.
  254  00001304  23bd0008	addi	r29,r29,#8
  255  00001308  6021ffff	seqi	r1,r1,#-1
  256  0000130c  10200020	beqz	r1,L16_LF0
  257  00001310  54000000	nop; not filled.
  258  00001314  23bdfff8	addi	r29,r29,#-8
  259  00001318  3c0b0000	lhi	r11,((LC6_LF0)>>16)&0xffff
  260  0000131c  256b30b8	addui	r11,r11,(LC6_LF0)&0xffff
  261  00001320  afab0000	sw	(r29),r11
  262  00001324  0c0000d0	jal	_Printf
  263  00001328  54000000	nop; not filled.
  264  0000132c  23bd0008	addi	r29,r29,#8
  265  00001330          	L16_LF0:
  266  00001330  70e1000a	slei	r1,r7,#10
  267  00001334  1420fef8	bnez	r1,L18_LF0
  268  00001338  54000000	nop; not filled.
  269  0000133c  23bdfff8	addi	r29,r29,#-8
  270  00001340  afaa0000	sw	(r29),r10
  271  00001344  0c000104	jal	_sem_signal
  272  00001348  54000000	nop; not filled.
  273  0000134c  23bd0008	addi	r29,r29,#8
  274  00001350  64210001	snei	r1,r1,#1
  275  00001354  10200050	beqz	r1,L23_LF0
  276  00001358  54000000	nop; not filled.
  277  0000135c  23bdfff8	addi	r29,r29,#-8
  278  00001360  3c0b0000	lhi	r11,((LC7_LF0)>>16)&0xffff
  279  00001364  256b30f0	addui	r11,r11,(LC7_LF0)&0xffff
  280  00001368  afab0000	sw	(r29),r11
  281  0000136c  afaa0004	sw	4(r29),r10
  282  00001370  0c000084	jal	_Printf
  283  00001374  54000000	nop; not filled.
  284  00001378  8d290000	lw	r9,(r9)
  285  0000137c  afa90000	sw	(r29),r9
  286  00001380  0c000074	jal	_Printf
  287  00001384  54000000	nop; not filled.
  288  00001388  3c0b0000	lhi	r11,((LC4_LF0)>>16)&0xffff
  289  0000138c  256b308c	addui	r11,r11,(LC4_LF0)&0xffff
  290  00001390  afab0000	sw	(r29),r11
  291  00001394  0c000060	jal	_Printf
  292  00001398  54000000	nop; not filled.
  293  0000139c  0c00010c	jal	_Exit
  294  000013a0  54000000	nop; not filled.
  295  000013a4  23bd0008	addi	r29,r29,#8
  296  000013a8          	L23_LF0:
  297  000013a8  0c000e48	jal	_exit
  298  000013ac  54000000	nop
  299  000013b0          	.endproc _main
  300                      ;;;
  301                      ;;; Stub functions for DLX traps.
  302                      ;;;
  303                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  304                      ;;;
  305                      ;;; The traps such as Open and Close
  306                      ;;; (note the capital letters) are for use by user programs.  The traps
  307                      ;;; with names such as open and close (lower case) are for use by the OS.
  308                      ;;;
  311  000013b0          	.align 2
  313                      ;;; The following are the traps to be used by user-level programs
  314                      ;;;
  316  000013b0          	.align 2
  317  000013b0          	.proc _Open
  318  000013b0          	.global _Open
  319  000013b0          	_Open:
  320                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  321                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  322                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  323  000013b0  44000213	trap	#0x213
  324  000013b4  4be00000	jr	r31
  325  000013b8  54000000	nop
  326  000013bc          	.endproc _Open
  328  000013bc          	.proc _Close
  329  000013bc          	.global _Close
  330  000013bc          	_Close:
  331  000013bc  44000214	trap	#0x214
  332  000013c0  4be00000	jr	r31
  333  000013c4  54000000	nop
  334  000013c8          	.endproc _Close
  336  000013c8          	.proc _Read
  337  000013c8          	.global _Read
  338  000013c8          	_Read:
  339  000013c8  44000210	trap	#0x210
  340  000013cc  4be00000	jr	r31
  341  000013d0  54000000	nop
  342  000013d4          	.endproc _Read
  344  000013d4          	.proc _Write
  345  000013d4          	.global _Write
  346  000013d4          	_Write:
  347  000013d4  44000211	trap	#0x211
  348  000013d8  4be00000	jr	r31
  349  000013dc  54000000	nop
  350  000013e0          	.endproc _Write
  352  000013e0          	.proc _Lseek
  353  000013e0          	.global _Lseek
  354  000013e0          	_Lseek:
  355  000013e0  44000212	trap	#0x212
  356  000013e4  4be00000	jr	r31
  357  000013e8  54000000	nop
  358  000013ec          	.endproc _Lseek
  360  000013ec          	.proc _Putchar
  361  000013ec          	.global _Putchar
  362  000013ec          	_Putchar:
  363  000013ec  44000280	trap	#0x280
  364  000013f0  4be00000	jr	r31
  365  000013f4  54000000	nop
  366  000013f8          	.endproc _Putchar
  368  000013f8          	.proc _Printf
  369  000013f8          	.global _Printf
  370  000013f8          	_Printf:
  371  000013f8  44000201	trap	#0x201
  372  000013fc  4be00000	jr	r31
  373  00001400  54000000	nop
  374  00001404          	.endproc _Printf
  376  00001404          	.proc _getpid
  377  00001404          	.global _getpid
  378  00001404          	_getpid:
  379  00001404  44000431	trap	#0x431
  380  00001408  4be00000	jr	r31
  381  0000140c  54000000	nop
  382  00001410          	.endproc _getpid
  384  00001410          	.proc _process_create
  385  00001410          	.global _process_create
  386  00001410          	_process_create:
  387  00001410  44000432	trap	#0x432
  388  00001414  4be00000	jr	r31
  389  00001418  54000000	nop
  390  0000141c          	.endproc _process_create
  392  0000141c          	.proc _shmget
  393  0000141c          	.global _shmget
  394  0000141c          	_shmget:
  395  0000141c  44000440	trap	#0x440
  396  00001420  4be00000	jr	r31
  397  00001424  54000000	nop
  398  00001428          	.endproc _shmget
  400  00001428          	.proc _shmat
  401  00001428          	.global _shmat
  402  00001428          	_shmat:
  403  00001428  44000441	trap	#0x441
  404  0000142c  4be00000	jr	r31
  405  00001430  54000000	nop
  406  00001434          	.endproc _shmat
  408  00001434          	.proc _sem_create
  409  00001434          	.global _sem_create
  410  00001434          	_sem_create:
  411  00001434  44000450	trap	#0x450
  412  00001438  4be00000	jr	r31
  413  0000143c  54000000	nop
  414  00001440          	.endproc _sem_create
  416  00001440          	.proc _sem_wait
  417  00001440          	.global _sem_wait
  418  00001440          	_sem_wait:
  419  00001440  44000451	trap	#0x451
  420  00001444  4be00000	jr	r31
  421  00001448  54000000	nop
  422  0000144c          	.endproc _sem_wait
  424  0000144c          	.proc _sem_signal
  425  0000144c          	.global _sem_signal
  426  0000144c          	_sem_signal:
  427  0000144c  44000452	trap	#0x452
  428  00001450  4be00000	jr	r31
  429  00001454  54000000	nop
  430  00001458          	.endproc _sem_signal
  432  00001458          	.proc _lock_create
  433  00001458          	.global _lock_create
  434  00001458          	_lock_create:
  435  00001458  44000453	trap	#0x453
  436  0000145c  4be00000	jr	r31
  437  00001460  54000000	nop
  438  00001464          	.endproc _lock_create
  440  00001464          	.proc _lock_acquire
  441  00001464          	.global _lock_acquire
  442  00001464          	_lock_acquire:
  443  00001464  44000454	trap	#0x454
  444  00001468  4be00000	jr	r31
  445  0000146c  54000000	nop
  446  00001470          	.endproc _lock_acquire
  448  00001470          	.proc _lock_release
  449  00001470          	.global _lock_release
  450  00001470          	_lock_release:
  451  00001470  44000455	trap	#0x455
  452  00001474  4be00000	jr	r31
  453  00001478  54000000	nop
  454  0000147c          	.endproc _lock_release
  456  0000147c          	.proc _cond_create
  457  0000147c          	.global _cond_create
  458  0000147c          	_cond_create:
  459  0000147c  44000456	trap	#0x456
  460  00001480  4be00000	jr	r31
  461  00001484  54000000	nop
  462  00001488          	.endproc _cond_create
  464  00001488          	.proc _cond_wait
  465  00001488          	.global _cond_wait
  466  00001488          	_cond_wait:
  467  00001488  44000457	trap	#0x457
  468  0000148c  4be00000	jr	r31
  469  00001490  54000000	nop
  470  00001494          	.endproc _cond_wait
  472  00001494          	.proc _cond_signal
  473  00001494          	.global _cond_signal
  474  00001494          	_cond_signal:
  475  00001494  44000458	trap	#0x458
  476  00001498  4be00000	jr	r31
  477  0000149c  54000000	nop
  478  000014a0          	.endproc _cond_signal
  480  000014a0          	.proc _cond_broadcast
  481  000014a0          	.global _cond_broadcast
  482  000014a0          	_cond_broadcast:
  483  000014a0  44000459	trap	#0x459
  484  000014a4  4be00000	jr	r31
  485  000014a8  54000000	nop
  486  000014ac          	.endproc _cond_broadcast
  488  000014ac          	.proc _Exit
  489  000014ac          	.global _Exit
  490  000014ac          	_Exit:
  491  000014ac  44000500	trap	#0x500
  492  000014b0  4be00000	jr	r31
  493  000014b4  54000000	nop
  494  000014b8          	.endproc _Exit
  495                      ; Compiled by GCC
  497  000014b8          	.align 2
  498  000014b8          	.proc _isspace
  499  000014b8          	.global _isspace
  500  000014b8          	_isspace:
  501                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  502  000014b8  afbefffc	sw	-4(r29),r30; push fp
  503  000014bc  001df020	add	r30,r0,r29; fp = sp
  504  000014c0  afbffff8	sw	-8(r29),r31; push ret addr
  505  000014c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  506  000014c8  afa20000	sw	0(r29),r2
  507  000014cc  afa30004	sw	4(r29),r3
  508  000014d0  afa40008	sw	8(r29),r4
  509  000014d4  83c20003	lb	r2,3(r30)
  510  000014d8  20010000	addi	r1,r0,#0
  511  000014dc  304300ff	andi	r3,r2,#0x00ff
  512  000014e0  60640020	seqi	r4,r3,#32
  513  000014e4  1480002c	bnez	r4,L3_LF2
  514  000014e8  54000000	nop; delay slot nop
  515  000014ec  304300ff	andi	r3,r2,#0x00ff
  516  000014f0  60640009	seqi	r4,r3,#9
  517  000014f4  1480001c	bnez	r4,L3_LF2
  518  000014f8  54000000	nop; delay slot nop
  519  000014fc  304300ff	andi	r3,r2,#0x00ff
  520  00001500  6064000a	seqi	r4,r3,#10
  521  00001504  1480000c	bnez	r4,L3_LF2
  522  00001508  54000000	nop; delay slot nop
  523  0000150c  08000008	j	L2_LF2
  524  00001510  54000000	nop; delay slot nop
  525  00001514          	L3_LF2:
  526  00001514  20010001	addi	r1,r0,#1
  527  00001518          	L2_LF2:
  528  00001518  08000004	j	L1_LF2
  529  0000151c  54000000	nop; delay slot nop
  530  00001520          	L1_LF2:
  531  00001520  8fa20000	lw	r2,0(r29)
  532  00001524  8fa30004	lw	r3,4(r29)
  533  00001528  8fa40008	lw	r4,8(r29)
  534  0000152c  8fdffff8	lw	r31,-8(r30)
  535  00001530  001ee820	add	r29,r0,r30
  536  00001534  8fdefffc	lw	r30,-4(r30)
  537  00001538  4be00000	jr	r31
  538  0000153c  54000000	nop
  539  00001540          	.endproc _isspace
  540  00001540          	.align 2
  541  00001540          	.proc _isxdigit
  542  00001540          	.global _isxdigit
  543  00001540          	_isxdigit:
  544                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  545  00001540  afbefffc	sw	-4(r29),r30; push fp
  546  00001544  001df020	add	r30,r0,r29; fp = sp
  547  00001548  afbffff8	sw	-8(r29),r31; push ret addr
  548  0000154c  2fbd0018	subui	r29,r29,#24; alloc local storage
  549  00001550  afa20000	sw	0(r29),r2
  550  00001554  afa30004	sw	4(r29),r3
  551  00001558  afa40008	sw	8(r29),r4
  552  0000155c  83c20003	lb	r2,3(r30)
  553  00001560  20010000	addi	r1,r0,#0
  554  00001564  304300ff	andi	r3,r2,#0x00ff
  555  00001568  6c64002f	sgtui	r4,r3,#47
  556  0000156c  1080001c	beqz	r4,L7_LF2
  557  00001570  54000000	nop; delay slot nop
  558  00001574  304300ff	andi	r3,r2,#0x00ff
  559  00001578  70640039	sleui	r4,r3,#57
  560  0000157c  1480005c	bnez	r4,L6_LF2
  561  00001580  54000000	nop; delay slot nop
  562  00001584  08000004	j	L7_LF2
  563  00001588  54000000	nop; delay slot nop
  564  0000158c          	L7_LF2:
  565  0000158c  304300ff	andi	r3,r2,#0x00ff
  566  00001590  6c640060	sgtui	r4,r3,#96
  567  00001594  1080001c	beqz	r4,L8_LF2
  568  00001598  54000000	nop; delay slot nop
  569  0000159c  304300ff	andi	r3,r2,#0x00ff
  570  000015a0  70640066	sleui	r4,r3,#102
  571  000015a4  14800034	bnez	r4,L6_LF2
  572  000015a8  54000000	nop; delay slot nop
  573  000015ac  08000004	j	L8_LF2
  574  000015b0  54000000	nop; delay slot nop
  575  000015b4          	L8_LF2:
  576  000015b4  304300ff	andi	r3,r2,#0x00ff
  577  000015b8  6c640040	sgtui	r4,r3,#64
  578  000015bc  10800020	beqz	r4,L5_LF2
  579  000015c0  54000000	nop; delay slot nop
  580  000015c4  304300ff	andi	r3,r2,#0x00ff
  581  000015c8  70640041	sleui	r4,r3,#65
  582  000015cc  1480000c	bnez	r4,L6_LF2
  583  000015d0  54000000	nop; delay slot nop
  584  000015d4  08000008	j	L5_LF2
  585  000015d8  54000000	nop; delay slot nop
  586  000015dc          	L6_LF2:
  587  000015dc  20010001	addi	r1,r0,#1
  588  000015e0          	L5_LF2:
  589  000015e0  08000004	j	L4_LF2
  590  000015e4  54000000	nop; delay slot nop
  591  000015e8          	L4_LF2:
  592  000015e8  8fa20000	lw	r2,0(r29)
  593  000015ec  8fa30004	lw	r3,4(r29)
  594  000015f0  8fa40008	lw	r4,8(r29)
  595  000015f4  8fdffff8	lw	r31,-8(r30)
  596  000015f8  001ee820	add	r29,r0,r30
  597  000015fc  8fdefffc	lw	r30,-4(r30)
  598  00001600  4be00000	jr	r31
  599  00001604  54000000	nop
  600  00001608          	.endproc _isxdigit
  601  00001608          	.align 2
  602  00001608          	.proc _dstrcpy
  603  00001608          	.global _dstrcpy
  604  00001608          	_dstrcpy:
  605                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  606  00001608  afbefffc	sw	-4(r29),r30; push fp
  607  0000160c  001df020	add	r30,r0,r29; fp = sp
  608  00001610  afbffff8	sw	-8(r29),r31; push ret addr
  609  00001614  2fbd0018	subui	r29,r29,#24; alloc local storage
  610  00001618  afa20000	sw	0(r29),r2
  611  0000161c  afa30004	sw	4(r29),r3
  612  00001620  8fc10000	lw	r1,(r30)
  613  00001624  afc1fff4	sw	-12(r30),r1
  614  00001628          	L10_LF2:
  615  00001628  8fc10000	lw	r1,(r30)
  616  0000162c  20220001	addi	r2,r1,#1
  617  00001630  afc20000	sw	(r30),r2
  618  00001634  8fc20004	lw	r2,4(r30)
  619  00001638  20430001	addi	r3,r2,#1
  620  0000163c  afc30004	sw	4(r30),r3
  621  00001640  80420000	lb	r2,(r2)
  622  00001644  a0220000	sb	(r1),r2
  623  00001648  a3c2fff3	sb	-13(r30),r2
  624  0000164c          	L12_LF2:
  625  0000164c  93c1fff3	lbu	r1,-13(r30)
  626  00001650  64220000	snei	r2,r1,#0
  627  00001654  1440000c	bnez	r2,L13_LF2
  628  00001658  54000000	nop; delay slot nop
  629  0000165c  0800000c	j	L11_LF2
  630  00001660  54000000	nop; delay slot nop
  631  00001664          	L13_LF2:
  632  00001664  0bffffc0	j	L10_LF2
  633  00001668  54000000	nop; delay slot nop
  634  0000166c          	L11_LF2:
  635  0000166c  8fc1fff4	lw	r1,-12(r30)
  636  00001670  08000004	j	L9_LF2
  637  00001674  54000000	nop; delay slot nop
  638  00001678          	L9_LF2:
  639  00001678  8fa20000	lw	r2,0(r29)
  640  0000167c  8fa30004	lw	r3,4(r29)
  641  00001680  8fdffff8	lw	r31,-8(r30)
  642  00001684  001ee820	add	r29,r0,r30
  643  00001688  8fdefffc	lw	r30,-4(r30)
  644  0000168c  4be00000	jr	r31
  645  00001690  54000000	nop
  646  00001694          	.endproc _dstrcpy
  647  00001694          	.align 2
  648  00001694          	.proc _dstrncpy
  649  00001694          	.global _dstrncpy
  650  00001694          	_dstrncpy:
  651                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  652  00001694  afbefffc	sw	-4(r29),r30; push fp
  653  00001698  001df020	add	r30,r0,r29; fp = sp
  654  0000169c  afbffff8	sw	-8(r29),r31; push ret addr
  655  000016a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  656  000016a4  afa20000	sw	0(r29),r2
  657  000016a8  afa30004	sw	4(r29),r3
  658  000016ac  8fc10000	lw	r1,(r30)
  659  000016b0  afc1fff4	sw	-12(r30),r1
  660  000016b4          	L15_LF2:
  661  000016b4  8fc10008	lw	r1,8(r30)
  662  000016b8  2022ffff	addi	r2,r1,#-1
  663  000016bc  afc20008	sw	8(r30),r2
  664  000016c0  70210000	slei	r1,r1,#0
  665  000016c4  1020000c	beqz	r1,L18_LF2
  666  000016c8  54000000	nop; delay slot nop
  667  000016cc  08000048	j	L16_LF2
  668  000016d0  54000000	nop; delay slot nop
  669  000016d4          	L18_LF2:
  670  000016d4  8fc10000	lw	r1,(r30)
  671  000016d8  20220001	addi	r2,r1,#1
  672  000016dc  afc20000	sw	(r30),r2
  673  000016e0  8fc20004	lw	r2,4(r30)
  674  000016e4  20430001	addi	r3,r2,#1
  675  000016e8  afc30004	sw	4(r30),r3
  676  000016ec  80420000	lb	r2,(r2)
  677  000016f0  a0220000	sb	(r1),r2
  678  000016f4  a3c2fff3	sb	-13(r30),r2
  679  000016f8          	L17_LF2:
  680  000016f8  93c1fff3	lbu	r1,-13(r30)
  681  000016fc  64220000	snei	r2,r1,#0
  682  00001700  1440000c	bnez	r2,L19_LF2
  683  00001704  54000000	nop; delay slot nop
  684  00001708  0800000c	j	L16_LF2
  685  0000170c  54000000	nop; delay slot nop
  686  00001710          	L19_LF2:
  687  00001710  0bffffa0	j	L15_LF2
  688  00001714  54000000	nop; delay slot nop
  689  00001718          	L16_LF2:
  690  00001718  8fc1fff4	lw	r1,-12(r30)
  691  0000171c  08000004	j	L14_LF2
  692  00001720  54000000	nop; delay slot nop
  693  00001724          	L14_LF2:
  694  00001724  8fa20000	lw	r2,0(r29)
  695  00001728  8fa30004	lw	r3,4(r29)
  696  0000172c  8fdffff8	lw	r31,-8(r30)
  697  00001730  001ee820	add	r29,r0,r30
  698  00001734  8fdefffc	lw	r30,-4(r30)
  699  00001738  4be00000	jr	r31
  700  0000173c  54000000	nop
  701  00001740          	.endproc _dstrncpy
  702  00001740          	.align 2
  703  00001740          	.proc _dstrcat
  704  00001740          	.global _dstrcat
  705  00001740          	_dstrcat:
  706                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  707  00001740  afbefffc	sw	-4(r29),r30; push fp
  708  00001744  001df020	add	r30,r0,r29; fp = sp
  709  00001748  afbffff8	sw	-8(r29),r31; push ret addr
  710  0000174c  2fbd0018	subui	r29,r29,#24; alloc local storage
  711  00001750  afa20000	sw	0(r29),r2
  712  00001754  8fc10000	lw	r1,(r30)
  713  00001758  afc1fff4	sw	-12(r30),r1
  714  0000175c          	L21_LF2:
  715  0000175c  8fc10000	lw	r1,(r30)
  716  00001760  90220000	lbu	r2,(r1)
  717  00001764  64410000	snei	r1,r2,#0
  718  00001768  1420000c	bnez	r1,L23_LF2
  719  0000176c  54000000	nop; delay slot nop
  720  00001770  0800001c	j	L22_LF2
  721  00001774  54000000	nop; delay slot nop
  722  00001778          	L23_LF2:
  723  00001778  8fc20000	lw	r2,(r30)
  724  0000177c  20410001	addi	r1,r2,#1
  725  00001780  00011020	add	r2,r0,r1
  726  00001784  afc20000	sw	(r30),r2
  727  00001788  0bffffd0	j	L21_LF2
  728  0000178c  54000000	nop; delay slot nop
  729  00001790          	L22_LF2:
  730  00001790  23bdfff8	addi	r29,r29,#-8
  731  00001794  001d0820	add	r1,r0,r29
  732  00001798  8fc20000	lw	r2,(r30)
  733  0000179c  ac220000	sw	(r1),r2
  734  000017a0  8fc20004	lw	r2,4(r30)
  735  000017a4  ac220004	sw	4(r1),r2
  736  000017a8  0ffffe5c	jal	_dstrcpy
  737  000017ac  54000000	nop; delay slot nop
  738  000017b0  23bd0008	addi	r29,r29,#8
  739  000017b4  8fc1fff4	lw	r1,-12(r30)
  740  000017b8  08000004	j	L20_LF2
  741  000017bc  54000000	nop; delay slot nop
  742  000017c0          	L20_LF2:
  743  000017c0  8fa20000	lw	r2,0(r29)
  744  000017c4  8fdffff8	lw	r31,-8(r30)
  745  000017c8  001ee820	add	r29,r0,r30
  746  000017cc  8fdefffc	lw	r30,-4(r30)
  747  000017d0  4be00000	jr	r31
  748  000017d4  54000000	nop
  749  000017d8          	.endproc _dstrcat
  750  000017d8          	.align 2
  751  000017d8          	.proc _dstrncmp
  752  000017d8          	.global _dstrncmp
  753  000017d8          	_dstrncmp:
  754                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  755  000017d8  afbefffc	sw	-4(r29),r30; push fp
  756  000017dc  001df020	add	r30,r0,r29; fp = sp
  757  000017e0  afbffff8	sw	-8(r29),r31; push ret addr
  758  000017e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  759  000017e8  afa20000	sw	0(r29),r2
  760  000017ec  afa30004	sw	4(r29),r3
  761  000017f0  54000000	nop
  762  000017f4  20010000	addi	r1,r0,#0
  763  000017f8  afc1fff4	sw	-12(r30),r1
  764  000017fc          	L25_LF2:
  765  000017fc  8fc1fff4	lw	r1,-12(r30)
  766  00001800  8fc20008	lw	r2,8(r30)
  767  00001804  0022082a	slt	r1,r1,r2
  768  00001808  1420000c	bnez	r1,L28_LF2
  769  0000180c  54000000	nop; delay slot nop
  770  00001810  08000088	j	L26_LF2
  771  00001814  54000000	nop; delay slot nop
  772  00001818          	L28_LF2:
  773  00001818  8fc10004	lw	r1,4(r30)
  774  0000181c  90220000	lbu	r2,(r1)
  775  00001820  64410000	snei	r1,r2,#0
  776  00001824  14200018	bnez	r1,L29_LF2
  777  00001828  54000000	nop; delay slot nop
  778  0000182c  20010000	addi	r1,r0,#0
  779  00001830  080000d8	j	L24_LF2
  780  00001834  54000000	nop; delay slot nop
  781  00001838  08000028	j	L30_LF2
  782  0000183c  54000000	nop; delay slot nop
  783  00001840          	L29_LF2:
  784  00001840  8fc10000	lw	r1,(r30)
  785  00001844  8fc20004	lw	r2,4(r30)
  786  00001848  90210000	lbu	r1,(r1)
  787  0000184c  90420000	lbu	r2,(r2)
  788  00001850  00220829	sne	r1,r1,r2
  789  00001854  1020000c	beqz	r1,L30_LF2
  790  00001858  54000000	nop; delay slot nop
  791  0000185c  0800003c	j	L26_LF2
  792  00001860  54000000	nop; delay slot nop
  793  00001864          	L31_LF2:
  794  00001864          	L30_LF2:
  795  00001864  8fc20000	lw	r2,(r30)
  796  00001868  20410001	addi	r1,r2,#1
  797  0000186c  00011020	add	r2,r0,r1
  798  00001870  afc20000	sw	(r30),r2
  799  00001874  8fc20004	lw	r2,4(r30)
  800  00001878  20410001	addi	r1,r2,#1
  801  0000187c  00011020	add	r2,r0,r1
  802  00001880  afc20004	sw	4(r30),r2
  803  00001884          	L27_LF2:
  804  00001884  8fc2fff4	lw	r2,-12(r30)
  805  00001888  20410001	addi	r1,r2,#1
  806  0000188c  00011020	add	r2,r0,r1
  807  00001890  afc2fff4	sw	-12(r30),r2
  808  00001894  0bffff64	j	L25_LF2
  809  00001898  54000000	nop; delay slot nop
  810  0000189c          	L26_LF2:
  811  0000189c  8fc1fff4	lw	r1,-12(r30)
  812  000018a0  8fc20008	lw	r2,8(r30)
  813  000018a4  00220828	seq	r1,r1,r2
  814  000018a8  10200018	beqz	r1,L32_LF2
  815  000018ac  54000000	nop; delay slot nop
  816  000018b0  20010000	addi	r1,r0,#0
  817  000018b4  08000054	j	L24_LF2
  818  000018b8  54000000	nop; delay slot nop
  819  000018bc  0800004c	j	L33_LF2
  820  000018c0  54000000	nop; delay slot nop
  821  000018c4          	L32_LF2:
  822  000018c4  8fc20000	lw	r2,(r30)
  823  000018c8  90410000	lbu	r1,(r2)
  824  000018cc  8fc20004	lw	r2,4(r30)
  825  000018d0  90430000	lbu	r3,(r2)
  826  000018d4  00230822	sub	r1,r1,r3
  827  000018d8  74220000	sgei	r2,r1,#0
  828  000018dc  10400020	beqz	r2,L34_LF2
  829  000018e0  54000000	nop; delay slot nop
  830  000018e4  8fc10000	lw	r1,(r30)
  831  000018e8  8fc20004	lw	r2,4(r30)
  832  000018ec  90210000	lbu	r1,(r1)
  833  000018f0  90420000	lbu	r2,(r2)
  834  000018f4  00220829	sne	r1,r1,r2
  835  000018f8  08000008	j	L35_LF2
  836  000018fc  54000000	nop; delay slot nop
  837  00001900          	L34_LF2:
  838  00001900  2001ffff	addi	r1,r0,#-1
  839  00001904          	L35_LF2:
  840  00001904  08000004	j	L24_LF2
  841  00001908  54000000	nop; delay slot nop
  842  0000190c          	L33_LF2:
  843  0000190c          	L24_LF2:
  844  0000190c  8fa20000	lw	r2,0(r29)
  845  00001910  8fa30004	lw	r3,4(r29)
  846  00001914  8fdffff8	lw	r31,-8(r30)
  847  00001918  001ee820	add	r29,r0,r30
  848  0000191c  8fdefffc	lw	r30,-4(r30)
  849  00001920  4be00000	jr	r31
  850  00001924  54000000	nop
  851  00001928          	.endproc _dstrncmp
  852  00001928          	.align 2
  853  00001928          	.proc _dstrlen
  854  00001928          	.global _dstrlen
  855  00001928          	_dstrlen:
  856                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  857  00001928  afbefffc	sw	-4(r29),r30; push fp
  858  0000192c  001df020	add	r30,r0,r29; fp = sp
  859  00001930  afbffff8	sw	-8(r29),r31; push ret addr
  860  00001934  2fbd0018	subui	r29,r29,#24; alloc local storage
  861  00001938  afa20000	sw	0(r29),r2
  862  0000193c  20010000	addi	r1,r0,#0
  863  00001940  afc1fff4	sw	-12(r30),r1
  864  00001944          	L37_LF2:
  865  00001944  8fc10000	lw	r1,(r30)
  866  00001948  20220001	addi	r2,r1,#1
  867  0000194c  afc20000	sw	(r30),r2
  868  00001950  90210000	lbu	r1,(r1)
  869  00001954  64220000	snei	r2,r1,#0
  870  00001958  1440000c	bnez	r2,L39_LF2
  871  0000195c  54000000	nop; delay slot nop
  872  00001960  0800001c	j	L38_LF2
  873  00001964  54000000	nop; delay slot nop
  874  00001968          	L39_LF2:
  875  00001968  8fc2fff4	lw	r2,-12(r30)
  876  0000196c  20410001	addi	r1,r2,#1
  877  00001970  00011020	add	r2,r0,r1
  878  00001974  afc2fff4	sw	-12(r30),r2
  879  00001978  0bffffc8	j	L37_LF2
  880  0000197c  54000000	nop; delay slot nop
  881  00001980          	L38_LF2:
  882  00001980  8fc1fff4	lw	r1,-12(r30)
  883  00001984  08000004	j	L36_LF2
  884  00001988  54000000	nop; delay slot nop
  885  0000198c          	L36_LF2:
  886  0000198c  8fa20000	lw	r2,0(r29)
  887  00001990  8fdffff8	lw	r31,-8(r30)
  888  00001994  001ee820	add	r29,r0,r30
  889  00001998  8fdefffc	lw	r30,-4(r30)
  890  0000199c  4be00000	jr	r31
  891  000019a0  54000000	nop
  892  000019a4          	.endproc _dstrlen
  893  000019a4          	.align 2
  894  000019a4          	.proc _dstrstr
  895  000019a4          	.global _dstrstr
  896  000019a4          	_dstrstr:
  897                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  898  000019a4  afbefffc	sw	-4(r29),r30; push fp
  899  000019a8  001df020	add	r30,r0,r29; fp = sp
  900  000019ac  afbffff8	sw	-8(r29),r31; push ret addr
  901  000019b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  902  000019b4  afa20000	sw	0(r29),r2
  903  000019b8  23bdfff8	addi	r29,r29,#-8
  904  000019bc  001d0820	add	r1,r0,r29
  905  000019c0  8fc20004	lw	r2,4(r30)
  906  000019c4  ac220000	sw	(r1),r2
  907  000019c8  0fffff5c	jal	_dstrlen
  908  000019cc  54000000	nop; delay slot nop
  909  000019d0  23bd0008	addi	r29,r29,#8
  910  000019d4  afc1fff4	sw	-12(r30),r1
  911  000019d8          	L41_LF2:
  912  000019d8  8fc10000	lw	r1,(r30)
  913  000019dc  90220000	lbu	r2,(r1)
  914  000019e0  64410000	snei	r1,r2,#0
  915  000019e4  1420000c	bnez	r1,L43_LF2
  916  000019e8  54000000	nop; delay slot nop
  917  000019ec  08000060	j	L42_LF2
  918  000019f0  54000000	nop; delay slot nop
  919  000019f4          	L43_LF2:
  920  000019f4  23bdfff0	addi	r29,r29,#-16
  921  000019f8  001d0820	add	r1,r0,r29
  922  000019fc  8fc20000	lw	r2,(r30)
  923  00001a00  ac220000	sw	(r1),r2
  924  00001a04  8fc20004	lw	r2,4(r30)
  925  00001a08  ac220004	sw	4(r1),r2
  926  00001a0c  8fc2fff4	lw	r2,-12(r30)
  927  00001a10  ac220008	sw	8(r1),r2
  928  00001a14  0ffffdc0	jal	_dstrncmp
  929  00001a18  54000000	nop; delay slot nop
  930  00001a1c  23bd0010	addi	r29,r29,#16
  931  00001a20  64220000	snei	r2,r1,#0
  932  00001a24  14400010	bnez	r2,L44_LF2
  933  00001a28  54000000	nop; delay slot nop
  934  00001a2c  8fc10000	lw	r1,(r30)
  935  00001a30  08000028	j	L40_LF2
  936  00001a34  54000000	nop; delay slot nop
  937  00001a38          	L44_LF2:
  938  00001a38  8fc20000	lw	r2,(r30)
  939  00001a3c  20410001	addi	r1,r2,#1
  940  00001a40  00011020	add	r2,r0,r1
  941  00001a44  afc20000	sw	(r30),r2
  942  00001a48  0bffff8c	j	L41_LF2
  943  00001a4c  54000000	nop; delay slot nop
  944  00001a50          	L42_LF2:
  945  00001a50  20010000	addi	r1,r0,#0
  946  00001a54  08000004	j	L40_LF2
  947  00001a58  54000000	nop; delay slot nop
  948  00001a5c          	L40_LF2:
  949  00001a5c  8fa20000	lw	r2,0(r29)
  950  00001a60  8fdffff8	lw	r31,-8(r30)
  951  00001a64  001ee820	add	r29,r0,r30
  952  00001a68  8fdefffc	lw	r30,-4(r30)
  953  00001a6c  4be00000	jr	r31
  954  00001a70  54000000	nop
  955  00001a74          	.endproc _dstrstr
  956  00001a74          	.align 2
  957  00001a74          	.proc _dmindex
  958  00001a74          	.global _dmindex
  959  00001a74          	_dmindex:
  960                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  961  00001a74  afbefffc	sw	-4(r29),r30; push fp
  962  00001a78  001df020	add	r30,r0,r29; fp = sp
  963  00001a7c  afbffff8	sw	-8(r29),r31; push ret addr
  964  00001a80  2fbd0018	subui	r29,r29,#24; alloc local storage
  965  00001a84  afa20000	sw	0(r29),r2
  966  00001a88  54000000	nop
  967  00001a8c          	L46_LF2:
  968  00001a8c  8fc10000	lw	r1,(r30)
  969  00001a90  90220000	lbu	r2,(r1)
  970  00001a94  64410000	snei	r1,r2,#0
  971  00001a98  1420000c	bnez	r1,L48_LF2
  972  00001a9c  54000000	nop; delay slot nop
  973  00001aa0  08000070	j	L47_LF2
  974  00001aa4  54000000	nop; delay slot nop
  975  00001aa8          	L48_LF2:
  976  00001aa8  8fc10004	lw	r1,4(r30)
  977  00001aac  afc1fff4	sw	-12(r30),r1
  978  00001ab0          	L49_LF2:
  979  00001ab0  8fc1fff4	lw	r1,-12(r30)
  980  00001ab4  90220000	lbu	r2,(r1)
  981  00001ab8  64410000	snei	r1,r2,#0
  982  00001abc  1420000c	bnez	r1,L52_LF2
  983  00001ac0  54000000	nop; delay slot nop
  984  00001ac4  08000044	j	L50_LF2
  985  00001ac8  54000000	nop; delay slot nop
  986  00001acc          	L52_LF2:
  987  00001acc  8fc10000	lw	r1,(r30)
  988  00001ad0  8fc2fff4	lw	r2,-12(r30)
  989  00001ad4  90210000	lbu	r1,(r1)
  990  00001ad8  90420000	lbu	r2,(r2)
  991  00001adc  00220828	seq	r1,r1,r2
  992  00001ae0  10200010	beqz	r1,L51_LF2
  993  00001ae4  54000000	nop; delay slot nop
  994  00001ae8  8fc10000	lw	r1,(r30)
  995  00001aec  08000030	j	L45_LF2
  996  00001af0  54000000	nop; delay slot nop
  997  00001af4          	L53_LF2:
  998  00001af4          	L51_LF2:
  999  00001af4  8fc2fff4	lw	r2,-12(r30)
 1000  00001af8  20410001	addi	r1,r2,#1
 1001  00001afc  00011020	add	r2,r0,r1
 1002  00001b00  afc2fff4	sw	-12(r30),r2
 1003  00001b04  0bffffa8	j	L49_LF2
 1004  00001b08  54000000	nop; delay slot nop
 1005  00001b0c          	L50_LF2:
 1006  00001b0c  0bffff7c	j	L46_LF2
 1007  00001b10  54000000	nop; delay slot nop
 1008  00001b14          	L47_LF2:
 1009  00001b14  20010000	addi	r1,r0,#0
 1010  00001b18  08000004	j	L45_LF2
 1011  00001b1c  54000000	nop; delay slot nop
 1012  00001b20          	L45_LF2:
 1013  00001b20  8fa20000	lw	r2,0(r29)
 1014  00001b24  8fdffff8	lw	r31,-8(r30)
 1015  00001b28  001ee820	add	r29,r0,r30
 1016  00001b2c  8fdefffc	lw	r30,-4(r30)
 1017  00001b30  4be00000	jr	r31
 1018  00001b34  54000000	nop
 1019  00001b38          	.endproc _dmindex
 1020  00001b38          	.align 2
 1021  00001b38          	.proc _dindex
 1022  00001b38          	.global _dindex
 1023  00001b38          	_dindex:
 1024                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1025  00001b38  afbefffc	sw	-4(r29),r30; push fp
 1026  00001b3c  001df020	add	r30,r0,r29; fp = sp
 1027  00001b40  afbffff8	sw	-8(r29),r31; push ret addr
 1028  00001b44  2fbd0010	subui	r29,r29,#16; alloc local storage
 1029  00001b48  afa20000	sw	0(r29),r2
 1030  00001b4c  54000000	nop
 1031  00001b50          	L55_LF2:
 1032  00001b50  8fc10000	lw	r1,(r30)
 1033  00001b54  90220000	lbu	r2,(r1)
 1034  00001b58  64410000	snei	r1,r2,#0
 1035  00001b5c  1420000c	bnez	r1,L57_LF2
 1036  00001b60  54000000	nop; delay slot nop
 1037  00001b64  08000040	j	L56_LF2
 1038  00001b68  54000000	nop; delay slot nop
 1039  00001b6c          	L57_LF2:
 1040  00001b6c  8fc10000	lw	r1,(r30)
 1041  00001b70  90220000	lbu	r2,(r1)
 1042  00001b74  8fc10004	lw	r1,4(r30)
 1043  00001b78  00411028	seq	r2,r2,r1
 1044  00001b7c  10400010	beqz	r2,L58_LF2
 1045  00001b80  54000000	nop; delay slot nop
 1046  00001b84  8fc10000	lw	r1,(r30)
 1047  00001b88  08000028	j	L54_LF2
 1048  00001b8c  54000000	nop; delay slot nop
 1049  00001b90          	L58_LF2:
 1050  00001b90  8fc20000	lw	r2,(r30)
 1051  00001b94  20410001	addi	r1,r2,#1
 1052  00001b98  00011020	add	r2,r0,r1
 1053  00001b9c  afc20000	sw	(r30),r2
 1054  00001ba0  0bffffac	j	L55_LF2
 1055  00001ba4  54000000	nop; delay slot nop
 1056  00001ba8          	L56_LF2:
 1057  00001ba8  20010000	addi	r1,r0,#0
 1058  00001bac  08000004	j	L54_LF2
 1059  00001bb0  54000000	nop; delay slot nop
 1060  00001bb4          	L54_LF2:
 1061  00001bb4  8fa20000	lw	r2,0(r29)
 1062  00001bb8  8fdffff8	lw	r31,-8(r30)
 1063  00001bbc  001ee820	add	r29,r0,r30
 1064  00001bc0  8fdefffc	lw	r30,-4(r30)
 1065  00001bc4  4be00000	jr	r31
 1066  00001bc8  54000000	nop
 1067  00001bcc          	.endproc _dindex
 1068  00001bcc          	.align 2
 1069  00001bcc          	.proc _ditoa
 1070  00001bcc          	.global _ditoa
 1071  00001bcc          	_ditoa:
 1072                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1073  00001bcc  afbefffc	sw	-4(r29),r30; push fp
 1074  00001bd0  001df020	add	r30,r0,r29; fp = sp
 1075  00001bd4  afbffff8	sw	-8(r29),r31; push ret addr
 1076  00001bd8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1077  00001bdc  afa20000	sw	0(r29),r2
 1078  00001be0  afa30004	sw	4(r29),r3
 1079  00001be4  8fc10000	lw	r1,(r30)
 1080  00001be8  68220000	slti	r2,r1,#0
 1081  00001bec  1040002c	beqz	r2,L60_LF2
 1082  00001bf0  54000000	nop; delay slot nop
 1083  00001bf4  8fc10004	lw	r1,4(r30)
 1084  00001bf8  20220001	addi	r2,r1,#1
 1085  00001bfc  afc20004	sw	4(r30),r2
 1086  00001c00  2002002d	addi	r2,r0,(#0x2d)&0xff
 1087  00001c04  a0220000	sb	(r1),r2
 1088  00001c08  8fc10000	lw	r1,(r30)
 1089  00001c0c  00011022	sub	r2,r0,r1
 1090  00001c10  afc20000	sw	(r30),r2
 1091  00001c14  08000118	j	L61_LF2
 1092  00001c18  54000000	nop; delay slot nop
 1093  00001c1c          	L60_LF2:
 1094  00001c1c  8fc10000	lw	r1,(r30)
 1095  00001c20  64220000	snei	r2,r1,#0
 1096  00001c24  14400020	bnez	r2,L62_LF2
 1097  00001c28  54000000	nop; delay slot nop
 1098  00001c2c  8fc10004	lw	r1,4(r30)
 1099  00001c30  20220001	addi	r2,r1,#1
 1100  00001c34  afc20004	sw	4(r30),r2
 1101  00001c38  20020030	addi	r2,r0,(#0x30)&0xff
 1102  00001c3c  a0220000	sb	(r1),r2
 1103  00001c40  080000ec	j	L61_LF2
 1104  00001c44  54000000	nop; delay slot nop
 1105  00001c48          	L62_LF2:
 1106  00001c48  20010001	addi	r1,r0,#1
 1107  00001c4c  afc1fff4	sw	-12(r30),r1
 1108  00001c50          	L64_LF2:
 1109  00001c50  8fc1fff4	lw	r1,-12(r30)
 1110  00001c54  8fc20000	lw	r2,(r30)
 1111  00001c58  0022082c	sle	r1,r1,r2
 1112  00001c5c  1420000c	bnez	r1,L66_LF2
 1113  00001c60  54000000	nop; delay slot nop
 1114  00001c64  08000024	j	L65_LF2
 1115  00001c68  54000000	nop; delay slot nop
 1116  00001c6c          	L67_LF2:
 1117  00001c6c          	L66_LF2:
 1118  00001c6c  8fc1fff4	lw	r1,-12(r30)
 1119  00001c70  00011820	add	r3,r0,r1
 1120  00001c74  50620002	slli	r2,r3,#0x2
 1121  00001c78  00411020	add	r2,r2,r1
 1122  00001c7c  50410001	slli	r1,r2,#0x1
 1123  00001c80  afc1fff4	sw	-12(r30),r1
 1124  00001c84  0bffffc8	j	L64_LF2
 1125  00001c88  54000000	nop; delay slot nop
 1126  00001c8c          	L65_LF2:
 1127  00001c8c  54000000	nop
 1128  00001c90          	L68_LF2:
 1129  00001c90  8fc1fff4	lw	r1,-12(r30)
 1130  00001c94  2002000a	addi	r2,r0,#10
 1131  00001c98  00200035	movi2fp	f0,r1
 1132  00001c9c  00400835	movi2fp	f1,r2
 1133  00001ca0  0401000f	div	f0,f0,f1
 1134  00001ca4  00000834	movfp2i	r1,f0
 1135  00001ca8  afc1fff4	sw	-12(r30),r1
 1136  00001cac  8fc10004	lw	r1,4(r30)
 1137  00001cb0  20220001	addi	r2,r1,#1
 1138  00001cb4  afc20004	sw	4(r30),r2
 1139  00001cb8  8fc20000	lw	r2,(r30)
 1140  00001cbc  8fc3fff4	lw	r3,-12(r30)
 1141  00001cc0  00400035	movi2fp	f0,r2
 1142  00001cc4  00600835	movi2fp	f1,r3
 1143  00001cc8  0401000f	div	f0,f0,f1
 1144  00001ccc  00001034	movfp2i	r2,f0
 1145  00001cd0  00021820	add	r3,r0,r2
 1146  00001cd4  20620030	addi	r2,r3,#48
 1147  00001cd8  a0220000	sb	(r1),r2
 1148  00001cdc  8fc10000	lw	r1,(r30)
 1149  00001ce0  8fc3fff4	lw	r3,-12(r30)
 1150  00001ce4  00200035	movi2fp	f0,r1
 1151  00001ce8  00600835	movi2fp	f1,r3
 1152  00001cec  0401000f	div	f0,f0,f1
 1153  00001cf0  00001034	movfp2i	r2,f0
 1154  00001cf4  8fc3fff4	lw	r3,-12(r30)
 1155  00001cf8  00400035	movi2fp	f0,r2
 1156  00001cfc  00600835	movi2fp	f1,r3
 1157  00001d00  0401000e	mult	f0,f0,f1
 1158  00001d04  00001034	movfp2i	r2,f0
 1159  00001d08  00220822	sub	r1,r1,r2
 1160  00001d0c  afc10000	sw	(r30),r1
 1161  00001d10          	L70_LF2:
 1162  00001d10  8fc1fff4	lw	r1,-12(r30)
 1163  00001d14  6c220001	sgti	r2,r1,#1
 1164  00001d18  1440000c	bnez	r2,L71_LF2
 1165  00001d1c  54000000	nop; delay slot nop
 1166  00001d20  0800000c	j	L61_LF2
 1167  00001d24  54000000	nop; delay slot nop
 1168  00001d28          	L71_LF2:
 1169  00001d28  0bffff64	j	L68_LF2
 1170  00001d2c  54000000	nop; delay slot nop
 1171  00001d30          	L69_LF2:
 1172  00001d30          	L63_LF2:
 1173  00001d30          	L61_LF2:
 1174  00001d30  8fc10004	lw	r1,4(r30)
 1175  00001d34  20020000	addi	r2,r0,(#0x0)&0xff
 1176  00001d38  a0220000	sb	(r1),r2
 1177  00001d3c          	L59_LF2:
 1178  00001d3c  8fa20000	lw	r2,0(r29)
 1179  00001d40  8fa30004	lw	r3,4(r29)
 1180  00001d44  8fdffff8	lw	r31,-8(r30)
 1181  00001d48  001ee820	add	r29,r0,r30
 1182  00001d4c  8fdefffc	lw	r30,-4(r30)
 1183  00001d50  4be00000	jr	r31
 1184  00001d54  54000000	nop
 1185  00001d58          	.endproc _ditoa
 1186  00001d58          	.align 2
 1187  00001d58          	.proc _dstrtol
 1188  00001d58          	.global _dstrtol
 1189  00001d58          	_dstrtol:
 1190                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1191  00001d58  afbefffc	sw	-4(r29),r30; push fp
 1192  00001d5c  001df020	add	r30,r0,r29; fp = sp
 1193  00001d60  afbffff8	sw	-8(r29),r31; push ret addr
 1194  00001d64  2fbd0020	subui	r29,r29,#32; alloc local storage
 1195  00001d68  afa20000	sw	0(r29),r2
 1196  00001d6c  20010000	addi	r1,r0,#0
 1197  00001d70  afc1fff4	sw	-12(r30),r1
 1198  00001d74          	L73_LF2:
 1199  00001d74  8fc10000	lw	r1,(r30)
 1200  00001d78  90220000	lbu	r2,(r1)
 1201  00001d7c  60410020	seqi	r1,r2,#32
 1202  00001d80  14200034	bnez	r1,L75_LF2
 1203  00001d84  54000000	nop; delay slot nop
 1204  00001d88  8fc10000	lw	r1,(r30)
 1205  00001d8c  90220000	lbu	r2,(r1)
 1206  00001d90  60410009	seqi	r1,r2,#9
 1207  00001d94  14200020	bnez	r1,L75_LF2
 1208  00001d98  54000000	nop; delay slot nop
 1209  00001d9c  8fc10000	lw	r1,(r30)
 1210  00001da0  90220000	lbu	r2,(r1)
 1211  00001da4  6041000a	seqi	r1,r2,#10
 1212  00001da8  1420000c	bnez	r1,L75_LF2
 1213  00001dac  54000000	nop; delay slot nop
 1214  00001db0  0800001c	j	L74_LF2
 1215  00001db4  54000000	nop; delay slot nop
 1216  00001db8          	L75_LF2:
 1217  00001db8  8fc20000	lw	r2,(r30)
 1218  00001dbc  20410001	addi	r1,r2,#1
 1219  00001dc0  00011020	add	r2,r0,r1
 1220  00001dc4  afc20000	sw	(r30),r2
 1221  00001dc8  0bffffa8	j	L73_LF2
 1222  00001dcc  54000000	nop; delay slot nop
 1223  00001dd0          	L74_LF2:
 1224  00001dd0  8fc10004	lw	r1,4(r30)
 1225  00001dd4  64220000	snei	r2,r1,#0
 1226  00001dd8  10400010	beqz	r2,L76_LF2
 1227  00001ddc  54000000	nop; delay slot nop
 1228  00001de0  8fc10004	lw	r1,4(r30)
 1229  00001de4  8fc20000	lw	r2,(r30)
 1230  00001de8  ac220000	sw	(r1),r2
 1231  00001dec          	L76_LF2:
 1232  00001dec  8fc10000	lw	r1,(r30)
 1233  00001df0  90220000	lbu	r2,(r1)
 1234  00001df4  64410000	snei	r1,r2,#0
 1235  00001df8  14200010	bnez	r1,L77_LF2
 1236  00001dfc  54000000	nop; delay slot nop
 1237  00001e00  8fc1fff4	lw	r1,-12(r30)
 1238  00001e04  08000294	j	L72_LF2
 1239  00001e08  54000000	nop; delay slot nop
 1240  00001e0c          	L77_LF2:
 1241  00001e0c  8fc10000	lw	r1,(r30)
 1242  00001e10  90220000	lbu	r2,(r1)
 1243  00001e14  6041002d	seqi	r1,r2,#45
 1244  00001e18  10200024	beqz	r1,L78_LF2
 1245  00001e1c  54000000	nop; delay slot nop
 1246  00001e20  2001ffff	addi	r1,r0,#-1
 1247  00001e24  afc1ffec	sw	-20(r30),r1
 1248  00001e28  8fc20000	lw	r2,(r30)
 1249  00001e2c  20410001	addi	r1,r2,#1
 1250  00001e30  00011020	add	r2,r0,r1
 1251  00001e34  afc20000	sw	(r30),r2
 1252  00001e38  0800000c	j	L79_LF2
 1253  00001e3c  54000000	nop; delay slot nop
 1254  00001e40          	L78_LF2:
 1255  00001e40  20010001	addi	r1,r0,#1
 1256  00001e44  afc1ffec	sw	-20(r30),r1
 1257  00001e48          	L79_LF2:
 1258  00001e48  8fc10008	lw	r1,8(r30)
 1259  00001e4c  64220000	snei	r2,r1,#0
 1260  00001e50  14400090	bnez	r2,L80_LF2
 1261  00001e54  54000000	nop; delay slot nop
 1262  00001e58  8fc10000	lw	r1,(r30)
 1263  00001e5c  90220000	lbu	r2,(r1)
 1264  00001e60  60410030	seqi	r1,r2,#48
 1265  00001e64  10200074	beqz	r1,L81_LF2
 1266  00001e68  54000000	nop; delay slot nop
 1267  00001e6c  8fc20000	lw	r2,(r30)
 1268  00001e70  20410001	addi	r1,r2,#1
 1269  00001e74  00011020	add	r2,r0,r1
 1270  00001e78  afc20000	sw	(r30),r2
 1271  00001e7c  8fc10000	lw	r1,(r30)
 1272  00001e80  90220000	lbu	r2,(r1)
 1273  00001e84  60410078	seqi	r1,r2,#120
 1274  00001e88  14200020	bnez	r1,L83_LF2
 1275  00001e8c  54000000	nop; delay slot nop
 1276  00001e90  8fc10000	lw	r1,(r30)
 1277  00001e94  90220000	lbu	r2,(r1)
 1278  00001e98  60410058	seqi	r1,r2,#88
 1279  00001e9c  1420000c	bnez	r1,L83_LF2
 1280  00001ea0  54000000	nop; delay slot nop
 1281  00001ea4  08000024	j	L82_LF2
 1282  00001ea8  54000000	nop; delay slot nop
 1283  00001eac          	L83_LF2:
 1284  00001eac  20010010	addi	r1,r0,#16
 1285  00001eb0  afc10008	sw	8(r30),r1
 1286  00001eb4  8fc20000	lw	r2,(r30)
 1287  00001eb8  20410001	addi	r1,r2,#1
 1288  00001ebc  00011020	add	r2,r0,r1
 1289  00001ec0  afc20000	sw	(r30),r2
 1290  00001ec4  0800000c	j	L84_LF2
 1291  00001ec8  54000000	nop; delay slot nop
 1292  00001ecc          	L82_LF2:
 1293  00001ecc  20010008	addi	r1,r0,#8
 1294  00001ed0  afc10008	sw	8(r30),r1
 1295  00001ed4          	L84_LF2:
 1296  00001ed4  0800000c	j	L80_LF2
 1297  00001ed8  54000000	nop; delay slot nop
 1298  00001edc          	L81_LF2:
 1299  00001edc  2001000a	addi	r1,r0,#10
 1300  00001ee0  afc10008	sw	8(r30),r1
 1301  00001ee4          	L85_LF2:
 1302  00001ee4          	L80_LF2:
 1303  00001ee4  8fc10008	lw	r1,8(r30)
 1304  00001ee8  70220000	slei	r2,r1,#0
 1305  00001eec  1440001c	bnez	r2,L87_LF2
 1306  00001ef0  54000000	nop; delay slot nop
 1307  00001ef4  8fc10008	lw	r1,8(r30)
 1308  00001ef8  6c220010	sgti	r2,r1,#16
 1309  00001efc  1440000c	bnez	r2,L87_LF2
 1310  00001f00  54000000	nop; delay slot nop
 1311  00001f04  08000010	j	L86_LF2
 1312  00001f08  54000000	nop; delay slot nop
 1313  00001f0c          	L87_LF2:
 1314  00001f0c  8fc1fff4	lw	r1,-12(r30)
 1315  00001f10  08000188	j	L72_LF2
 1316  00001f14  54000000	nop; delay slot nop
 1317  00001f18          	L86_LF2:
 1318  00001f18  54000000	nop
 1319  00001f1c          	L88_LF2:
 1320  00001f1c  8fc10000	lw	r1,(r30)
 1321  00001f20  90220000	lbu	r2,(r1)
 1322  00001f24  6c41002f	sgtui	r1,r2,#47
 1323  00001f28  10200030	beqz	r1,L91_LF2
 1324  00001f2c  54000000	nop; delay slot nop
 1325  00001f30  8fc10000	lw	r1,(r30)
 1326  00001f34  90220000	lbu	r2,(r1)
 1327  00001f38  70410039	sleui	r1,r2,#57
 1328  00001f3c  1020001c	beqz	r1,L91_LF2
 1329  00001f40  54000000	nop; delay slot nop
 1330  00001f44  8fc10000	lw	r1,(r30)
 1331  00001f48  90220000	lbu	r2,(r1)
 1332  00001f4c  2041ffd0	addi	r1,r2,#-48
 1333  00001f50  afc1fff0	sw	-16(r30),r1
 1334  00001f54  0800008c	j	L92_LF2
 1335  00001f58  54000000	nop; delay slot nop
 1336  00001f5c          	L91_LF2:
 1337  00001f5c  8fc10000	lw	r1,(r30)
 1338  00001f60  90220000	lbu	r2,(r1)
 1339  00001f64  6c410060	sgtui	r1,r2,#96
 1340  00001f68  10200030	beqz	r1,L93_LF2
 1341  00001f6c  54000000	nop; delay slot nop
 1342  00001f70  8fc10000	lw	r1,(r30)
 1343  00001f74  90220000	lbu	r2,(r1)
 1344  00001f78  7041007a	sleui	r1,r2,#122
 1345  00001f7c  1020001c	beqz	r1,L93_LF2
 1346  00001f80  54000000	nop; delay slot nop
 1347  00001f84  8fc10000	lw	r1,(r30)
 1348  00001f88  90220000	lbu	r2,(r1)
 1349  00001f8c  2041ffa9	addi	r1,r2,#-87
 1350  00001f90  afc1fff0	sw	-16(r30),r1
 1351  00001f94  0800004c	j	L92_LF2
 1352  00001f98  54000000	nop; delay slot nop
 1353  00001f9c          	L93_LF2:
 1354  00001f9c  8fc10000	lw	r1,(r30)
 1355  00001fa0  90220000	lbu	r2,(r1)
 1356  00001fa4  6c410040	sgtui	r1,r2,#64
 1357  00001fa8  10200030	beqz	r1,L95_LF2
 1358  00001fac  54000000	nop; delay slot nop
 1359  00001fb0  8fc10000	lw	r1,(r30)
 1360  00001fb4  90220000	lbu	r2,(r1)
 1361  00001fb8  7041005a	sleui	r1,r2,#90
 1362  00001fbc  1020001c	beqz	r1,L95_LF2
 1363  00001fc0  54000000	nop; delay slot nop
 1364  00001fc4  8fc10000	lw	r1,(r30)
 1365  00001fc8  90220000	lbu	r2,(r1)
 1366  00001fcc  2041ffc9	addi	r1,r2,#-55
 1367  00001fd0  afc1fff0	sw	-16(r30),r1
 1368  00001fd4  0800000c	j	L92_LF2
 1369  00001fd8  54000000	nop; delay slot nop
 1370  00001fdc          	L95_LF2:
 1371  00001fdc  200103e8	addi	r1,r0,#1000
 1372  00001fe0  afc1fff0	sw	-16(r30),r1
 1373  00001fe4          	L96_LF2:
 1374  00001fe4          	L94_LF2:
 1375  00001fe4          	L92_LF2:
 1376  00001fe4  8fc1fff0	lw	r1,-16(r30)
 1377  00001fe8  8fc20008	lw	r2,8(r30)
 1378  00001fec  0022082a	slt	r1,r1,r2
 1379  00001ff0  10200040	beqz	r1,L90_LF2
 1380  00001ff4  54000000	nop; delay slot nop
 1381  00001ff8  8fc1fff4	lw	r1,-12(r30)
 1382  00001ffc  8fc20008	lw	r2,8(r30)
 1383  00002000  00200035	movi2fp	f0,r1
 1384  00002004  00400835	movi2fp	f1,r2
 1385  00002008  0401000e	mult	f0,f0,f1
 1386  0000200c  00000834	movfp2i	r1,f0
 1387  00002010  afc1fff4	sw	-12(r30),r1
 1388  00002014  8fc1fff4	lw	r1,-12(r30)
 1389  00002018  8fc2fff0	lw	r2,-16(r30)
 1390  0000201c  00220820	add	r1,r1,r2
 1391  00002020  afc1fff4	sw	-12(r30),r1
 1392  00002024  8fc20000	lw	r2,(r30)
 1393  00002028  20410001	addi	r1,r2,#1
 1394  0000202c  00011020	add	r2,r0,r1
 1395  00002030  afc20000	sw	(r30),r2
 1396  00002034          	L97_LF2:
 1397  00002034          	L90_LF2:
 1398  00002034  8fc1fff0	lw	r1,-16(r30)
 1399  00002038  8fc20008	lw	r2,8(r30)
 1400  0000203c  0022082a	slt	r1,r1,r2
 1401  00002040  1420000c	bnez	r1,L98_LF2
 1402  00002044  54000000	nop; delay slot nop
 1403  00002048  0800000c	j	L89_LF2
 1404  0000204c  54000000	nop; delay slot nop
 1405  00002050          	L98_LF2:
 1406  00002050  0bfffec8	j	L88_LF2
 1407  00002054  54000000	nop; delay slot nop
 1408  00002058          	L89_LF2:
 1409  00002058  8fc10004	lw	r1,4(r30)
 1410  0000205c  64220000	snei	r2,r1,#0
 1411  00002060  10400010	beqz	r2,L99_LF2
 1412  00002064  54000000	nop; delay slot nop
 1413  00002068  8fc10004	lw	r1,4(r30)
 1414  0000206c  8fc20000	lw	r2,(r30)
 1415  00002070  ac220000	sw	(r1),r2
 1416  00002074          	L99_LF2:
 1417  00002074  8fc1fff4	lw	r1,-12(r30)
 1418  00002078  8fc2ffec	lw	r2,-20(r30)
 1419  0000207c  00200035	movi2fp	f0,r1
 1420  00002080  00400835	movi2fp	f1,r2
 1421  00002084  0401000e	mult	f0,f0,f1
 1422  00002088  00000834	movfp2i	r1,f0
 1423  0000208c  afc1fff4	sw	-12(r30),r1
 1424  00002090  8fc1fff4	lw	r1,-12(r30)
 1425  00002094  08000004	j	L72_LF2
 1426  00002098  54000000	nop; delay slot nop
 1427  0000209c          	L72_LF2:
 1428  0000209c  8fa20000	lw	r2,0(r29)
 1429  000020a0  8fdffff8	lw	r31,-8(r30)
 1430  000020a4  001ee820	add	r29,r0,r30
 1431  000020a8  8fdefffc	lw	r30,-4(r30)
 1432  000020ac  4be00000	jr	r31
 1433  000020b0  54000000	nop
 1434  000020b4          	.endproc _dstrtol
 1435  000020b4          	.align 2
 1436  000020b4          	.proc _bcopy
 1437  000020b4          	.global _bcopy
 1438  000020b4          	_bcopy:
 1439                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1440  000020b4  afbefffc	sw	-4(r29),r30; push fp
 1441  000020b8  001df020	add	r30,r0,r29; fp = sp
 1442  000020bc  afbffff8	sw	-8(r29),r31; push ret addr
 1443  000020c0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1444  000020c4  afa20000	sw	0(r29),r2
 1445  000020c8  afa30004	sw	4(r29),r3
 1446  000020cc  54000000	nop
 1447  000020d0          	L101_LF2:
 1448  000020d0  8fc10008	lw	r1,8(r30)
 1449  000020d4  2022ffff	addi	r2,r1,#-1
 1450  000020d8  afc20008	sw	8(r30),r2
 1451  000020dc  6c210000	sgti	r1,r1,#0
 1452  000020e0  1420000c	bnez	r1,L103_LF2
 1453  000020e4  54000000	nop; delay slot nop
 1454  000020e8  0800002c	j	L102_LF2
 1455  000020ec  54000000	nop; delay slot nop
 1456  000020f0          	L103_LF2:
 1457  000020f0  8fc10004	lw	r1,4(r30)
 1458  000020f4  20220001	addi	r2,r1,#1
 1459  000020f8  afc20004	sw	4(r30),r2
 1460  000020fc  8fc20000	lw	r2,(r30)
 1461  00002100  20430001	addi	r3,r2,#1
 1462  00002104  afc30000	sw	(r30),r3
 1463  00002108  80420000	lb	r2,(r2)
 1464  0000210c  a0220000	sb	(r1),r2
 1465  00002110  0bffffbc	j	L101_LF2
 1466  00002114  54000000	nop; delay slot nop
 1467  00002118          	L102_LF2:
 1468  00002118          	L100_LF2:
 1469  00002118  8fa20000	lw	r2,0(r29)
 1470  0000211c  8fa30004	lw	r3,4(r29)
 1471  00002120  8fdffff8	lw	r31,-8(r30)
 1472  00002124  001ee820	add	r29,r0,r30
 1473  00002128  8fdefffc	lw	r30,-4(r30)
 1474  0000212c  4be00000	jr	r31
 1475  00002130  54000000	nop
 1476  00002134          	.endproc _bcopy
 1477  00002134          	.align 2
 1478  00002134          	.proc _bzero
 1479  00002134          	.global _bzero
 1480  00002134          	_bzero:
 1481                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1482  00002134  afbefffc	sw	-4(r29),r30; push fp
 1483  00002138  001df020	add	r30,r0,r29; fp = sp
 1484  0000213c  afbffff8	sw	-8(r29),r31; push ret addr
 1485  00002140  2fbd0010	subui	r29,r29,#16; alloc local storage
 1486  00002144  afa20000	sw	0(r29),r2
 1487  00002148  54000000	nop
 1488  0000214c          	L105_LF2:
 1489  0000214c  8fc10004	lw	r1,4(r30)
 1490  00002150  2022ffff	addi	r2,r1,#-1
 1491  00002154  afc20004	sw	4(r30),r2
 1492  00002158  6c210000	sgti	r1,r1,#0
 1493  0000215c  1420000c	bnez	r1,L107_LF2
 1494  00002160  54000000	nop; delay slot nop
 1495  00002164  08000020	j	L106_LF2
 1496  00002168  54000000	nop; delay slot nop
 1497  0000216c          	L107_LF2:
 1498  0000216c  8fc10000	lw	r1,(r30)
 1499  00002170  20220001	addi	r2,r1,#1
 1500  00002174  afc20000	sw	(r30),r2
 1501  00002178  20020000	addi	r2,r0,(#0x0)&0xff
 1502  0000217c  a0220000	sb	(r1),r2
 1503  00002180  0bffffc8	j	L105_LF2
 1504  00002184  54000000	nop; delay slot nop
 1505  00002188          	L106_LF2:
 1506  00002188          	L104_LF2:
 1507  00002188  8fa20000	lw	r2,0(r29)
 1508  0000218c  8fdffff8	lw	r31,-8(r30)
 1509  00002190  001ee820	add	r29,r0,r30
 1510  00002194  8fdefffc	lw	r30,-4(r30)
 1511  00002198  4be00000	jr	r31
 1512  0000219c  54000000	nop
 1513  000021a0          	.endproc _bzero
 1514  000021a0          	.align 2
 1515  000021a0          	.proc _min
 1516  000021a0          	.global _min
 1517  000021a0          	_min:
 1518                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1519  000021a0  afbefffc	sw	-4(r29),r30; push fp
 1520  000021a4  001df020	add	r30,r0,r29; fp = sp
 1521  000021a8  afbffff8	sw	-8(r29),r31; push ret addr
 1522  000021ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1523  000021b0  afa20000	sw	0(r29),r2
 1524  000021b4  afa30004	sw	4(r29),r3
 1525  000021b8  8fc10000	lw	r1,(r30)
 1526  000021bc  8fc20004	lw	r2,4(r30)
 1527  000021c0  0022182c	sle	r3,r1,r2
 1528  000021c4  14600008	bnez	r3,L109_LF2
 1529  000021c8  54000000	nop; delay slot nop
 1530  000021cc  8fc10004	lw	r1,4(r30)
 1531  000021d0          	L109_LF2:
 1532  000021d0  08000004	j	L108_LF2
 1533  000021d4  54000000	nop; delay slot nop
 1534  000021d8          	L108_LF2:
 1535  000021d8  8fa20000	lw	r2,0(r29)
 1536  000021dc  8fa30004	lw	r3,4(r29)
 1537  000021e0  8fdffff8	lw	r31,-8(r30)
 1538  000021e4  001ee820	add	r29,r0,r30
 1539  000021e8  8fdefffc	lw	r30,-4(r30)
 1540  000021ec  4be00000	jr	r31
 1541  000021f0  54000000	nop
 1542  000021f4          	.endproc _min
 1543                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1544                      ;;;
 1545                      ;;; Most of the traps are called in files from libtraps.
 1548  000021f4          	.align 2
 1549  000021f4          	.proc _exit
 1550  000021f4          	.global _exit
 1551  000021f4          	_exit:
 1552  000021f4  44000300	trap	#0x300
 1553  000021f8  4be00000	jr	r31
 1554  000021fc  54000000	nop
 1555  00002200          	.endproc _exit
 1557                      ; for the benefit of gcc.
 1558  00002200          	.proc ___main
 1559  00002200          	.global ___main
 1560  00002200          	___main:
 1561  00002200  4be00000	jr	r31
 1562  00002204  54000000	nop
 1563  00002208          	.endproc ___main
 1564  00002208          	.text
 1565  00002208          	.global _etext
 1566  00002208          	_etext:
 1567  00002208          	.align 3
 1568  00002208          	.data
 1569  00003119          	.global _edata
 1570  00003119          	_edata:
