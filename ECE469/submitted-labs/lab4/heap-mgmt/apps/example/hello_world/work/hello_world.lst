 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 193
    4                      ; Text size: 4372
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  0a735f70	.ascii "\ns_procs_completed: %d\n\000"
   85  00003038  726f6373	
   85  0000303c  5f636f6d	
   85  00003040  706c6574	
   85  00003044  65643a20	
   85  00003048  25640a00	
   86  0000304c          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  68656c6c	.ascii "hello_world (%d): Hello world!\n\000"
   88  00003050  6f5f776f	
   88  00003054  726c6420	
   88  00003058  28256429	
   88  0000305c  3a204865	
   88  00003060  6c6c6f20	
   88  00003064  776f726c	
   88  00003068  64210a00	
   89  0000306c          	.align 2
   90  0000306c          	LC3_LF0:
   91  0000306c  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  00003070  6f5f776f	
   91  00003074  726c6420	
   91  00003078  28256429	
   91  0000307c  3a204261	
   91  00003080  64207365	
   91  00003084  6d617068	
   91  00003088  6f726520	
   91  0000308c  735f7072	
   91  00003090  6f63735f	
   91  00003094  636f6d70	
   91  00003098  6c657465	
   91  0000309c  64202825	
   91  000030a0  6429210a	
   91  000030a4  00      	
   92  000030a5          	.align 2
   93  000030a8          	LC4_LF0:
   94  000030a8  68656c6c	.ascii "hello_world (%d): Done!\n\000"
   94  000030ac  6f5f776f	
   94  000030b0  726c6420	
   94  000030b4  28256429	
   94  000030b8  3a20446f	
   94  000030bc  6e65210a	
   94  000030c0  00      	
   95  000030c1          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc30004	lw	r3,4(r30)
  107  000010ec  0c00101c	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  64410002	snei	r1,r2,#2
  110  000010f8  10200028	beqz	r1,L17_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff8	addi	r29,r29,#-8
  113  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  114  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  115  0000110c  afa40000	sw	(r29),r4
  116  00001110  0c000138	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  0c000238	jal	_Exit
  119  0000111c  54000000	nop; not filled.
  120  00001120  23bd0008	addi	r29,r29,#8
  121  00001124          	L17_LF0:
  122  00001124  23bdfff0	addi	r29,r29,#-16
  123  00001128  8c630004	lw	r3,4(r3)
  124  0000112c  afa30000	sw	(r29),r3
  125  00001130  20040000	addi	r4,r0,#0
  126  00001134  afa40004	sw	4(r29),r4
  127  00001138  2004000a	addi	r4,r0,#10
  128  0000113c  afa40008	sw	8(r29),r4
  129  00001140  0c000acc	jal	_dstrtol
  130  00001144  54000000	nop; not filled.
  131  00001148  00011020	add	r2,r0,r1
  132  0000114c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  133  00001150  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  134  00001154  afa40000	sw	(r29),r4
  135  00001158  afa20004	sw	4(r29),r2
  136  0000115c  0c0000ec	jal	_Printf
  137  00001160  54000000	nop; not filled.
  138  00001164  0c0000f0	jal	_getpid
  139  00001168  54000000	nop; not filled.
  140  0000116c  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  141  00001170  2484304c	addui	r4,r4,(LC2_LF0)&0xffff
  142  00001174  afa40000	sw	(r29),r4
  143  00001178  afa10004	sw	4(r29),r1
  144  0000117c  0c0000cc	jal	_Printf
  145  00001180  54000000	nop; not filled.
  146  00001184  afa20000	sw	(r29),r2
  147  00001188  0c000114	jal	_sem_signal
  148  0000118c  54000000	nop; not filled.
  149  00001190  23bd0010	addi	r29,r29,#16
  150  00001194  64210001	snei	r1,r1,#1
  151  00001198  10200038	beqz	r1,L18_LF0
  152  0000119c  54000000	nop; not filled.
  153  000011a0  0c0000b4	jal	_getpid
  154  000011a4  54000000	nop; not filled.
  155  000011a8  23bdfff0	addi	r29,r29,#-16
  156  000011ac  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  157  000011b0  2484306c	addui	r4,r4,(LC3_LF0)&0xffff
  158  000011b4  afa40000	sw	(r29),r4
  159  000011b8  afa10004	sw	4(r29),r1
  160  000011bc  afa20008	sw	8(r29),r2
  161  000011c0  0c000088	jal	_Printf
  162  000011c4  54000000	nop; not filled.
  163  000011c8  0c000188	jal	_Exit
  164  000011cc  54000000	nop; not filled.
  165  000011d0  23bd0010	addi	r29,r29,#16
  166  000011d4          	L18_LF0:
  167  000011d4  0c000080	jal	_getpid
  168  000011d8  54000000	nop; not filled.
  169  000011dc  23bdfff8	addi	r29,r29,#-8
  170  000011e0  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  171  000011e4  248430a8	addui	r4,r4,(LC4_LF0)&0xffff
  172  000011e8  afa40000	sw	(r29),r4
  173  000011ec  afa10004	sw	4(r29),r1
  174  000011f0  0c000058	jal	_Printf
  175  000011f4  54000000	nop; not filled.
  176  000011f8  23bd0008	addi	r29,r29,#8
  177  000011fc  0c000f00	jal	_exit
  178  00001200  54000000	nop
  179  00001204          	.endproc _main
  180                      ;;;
  181                      ;;; Stub functions for DLX traps.
  182                      ;;;
  183                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  184                      ;;;
  185                      ;;; The traps such as Open and Close
  186                      ;;; (note the capital letters) are for use by user programs.  The traps
  187                      ;;; with names such as open and close (lower case) are for use by the OS.
  188                      ;;;
  191  00001204          	.align 2
  193                      ;;; The following are the traps to be used by user-level programs
  194                      ;;;
  196  00001204          	.align 2
  197  00001204          	.proc _Open
  198  00001204          	.global _Open
  199  00001204          	_Open:
  200                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  201                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  202                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  203  00001204  44000213	trap	#0x213
  204  00001208  4be00000	jr	r31
  205  0000120c  54000000	nop
  206  00001210          	.endproc _Open
  208  00001210          	.proc _Close
  209  00001210          	.global _Close
  210  00001210          	_Close:
  211  00001210  44000214	trap	#0x214
  212  00001214  4be00000	jr	r31
  213  00001218  54000000	nop
  214  0000121c          	.endproc _Close
  216  0000121c          	.proc _Read
  217  0000121c          	.global _Read
  218  0000121c          	_Read:
  219  0000121c  44000210	trap	#0x210
  220  00001220  4be00000	jr	r31
  221  00001224  54000000	nop
  222  00001228          	.endproc _Read
  224  00001228          	.proc _Write
  225  00001228          	.global _Write
  226  00001228          	_Write:
  227  00001228  44000211	trap	#0x211
  228  0000122c  4be00000	jr	r31
  229  00001230  54000000	nop
  230  00001234          	.endproc _Write
  232  00001234          	.proc _Lseek
  233  00001234          	.global _Lseek
  234  00001234          	_Lseek:
  235  00001234  44000212	trap	#0x212
  236  00001238  4be00000	jr	r31
  237  0000123c  54000000	nop
  238  00001240          	.endproc _Lseek
  240  00001240          	.proc _Putchar
  241  00001240          	.global _Putchar
  242  00001240          	_Putchar:
  243  00001240  44000280	trap	#0x280
  244  00001244  4be00000	jr	r31
  245  00001248  54000000	nop
  246  0000124c          	.endproc _Putchar
  248  0000124c          	.proc _Printf
  249  0000124c          	.global _Printf
  250  0000124c          	_Printf:
  251  0000124c  44000201	trap	#0x201
  252  00001250  4be00000	jr	r31
  253  00001254  54000000	nop
  254  00001258          	.endproc _Printf
  256  00001258          	.proc _getpid
  257  00001258          	.global _getpid
  258  00001258          	_getpid:
  259  00001258  44000431	trap	#0x431
  260  0000125c  4be00000	jr	r31
  261  00001260  54000000	nop
  262  00001264          	.endproc _getpid
  264  00001264          	.proc _process_create
  265  00001264          	.global _process_create
  266  00001264          	_process_create:
  267  00001264  44000432	trap	#0x432
  268  00001268  4be00000	jr	r31
  269  0000126c  54000000	nop
  270  00001270          	.endproc _process_create
  272  00001270          	.proc _shmget
  273  00001270          	.global _shmget
  274  00001270          	_shmget:
  275  00001270  44000440	trap	#0x440
  276  00001274  4be00000	jr	r31
  277  00001278  54000000	nop
  278  0000127c          	.endproc _shmget
  280  0000127c          	.proc _shmat
  281  0000127c          	.global _shmat
  282  0000127c          	_shmat:
  283  0000127c  44000441	trap	#0x441
  284  00001280  4be00000	jr	r31
  285  00001284  54000000	nop
  286  00001288          	.endproc _shmat
  288  00001288          	.proc _sem_create
  289  00001288          	.global _sem_create
  290  00001288          	_sem_create:
  291  00001288  44000450	trap	#0x450
  292  0000128c  4be00000	jr	r31
  293  00001290  54000000	nop
  294  00001294          	.endproc _sem_create
  296  00001294          	.proc _sem_wait
  297  00001294          	.global _sem_wait
  298  00001294          	_sem_wait:
  299  00001294  44000451	trap	#0x451
  300  00001298  4be00000	jr	r31
  301  0000129c  54000000	nop
  302  000012a0          	.endproc _sem_wait
  304  000012a0          	.proc _sem_signal
  305  000012a0          	.global _sem_signal
  306  000012a0          	_sem_signal:
  307  000012a0  44000452	trap	#0x452
  308  000012a4  4be00000	jr	r31
  309  000012a8  54000000	nop
  310  000012ac          	.endproc _sem_signal
  312  000012ac          	.proc _lock_create
  313  000012ac          	.global _lock_create
  314  000012ac          	_lock_create:
  315  000012ac  44000453	trap	#0x453
  316  000012b0  4be00000	jr	r31
  317  000012b4  54000000	nop
  318  000012b8          	.endproc _lock_create
  320  000012b8          	.proc _lock_acquire
  321  000012b8          	.global _lock_acquire
  322  000012b8          	_lock_acquire:
  323  000012b8  44000454	trap	#0x454
  324  000012bc  4be00000	jr	r31
  325  000012c0  54000000	nop
  326  000012c4          	.endproc _lock_acquire
  328  000012c4          	.proc _lock_release
  329  000012c4          	.global _lock_release
  330  000012c4          	_lock_release:
  331  000012c4  44000455	trap	#0x455
  332  000012c8  4be00000	jr	r31
  333  000012cc  54000000	nop
  334  000012d0          	.endproc _lock_release
  336  000012d0          	.proc _cond_create
  337  000012d0          	.global _cond_create
  338  000012d0          	_cond_create:
  339  000012d0  44000456	trap	#0x456
  340  000012d4  4be00000	jr	r31
  341  000012d8  54000000	nop
  342  000012dc          	.endproc _cond_create
  344  000012dc          	.proc _cond_wait
  345  000012dc          	.global _cond_wait
  346  000012dc          	_cond_wait:
  347  000012dc  44000457	trap	#0x457
  348  000012e0  4be00000	jr	r31
  349  000012e4  54000000	nop
  350  000012e8          	.endproc _cond_wait
  352  000012e8          	.proc _cond_signal
  353  000012e8          	.global _cond_signal
  354  000012e8          	_cond_signal:
  355  000012e8  44000458	trap	#0x458
  356  000012ec  4be00000	jr	r31
  357  000012f0  54000000	nop
  358  000012f4          	.endproc _cond_signal
  360  000012f4          	.proc _cond_broadcast
  361  000012f4          	.global _cond_broadcast
  362  000012f4          	_cond_broadcast:
  363  000012f4  44000459	trap	#0x459
  364  000012f8  4be00000	jr	r31
  365  000012fc  54000000	nop
  366  00001300          	.endproc _cond_broadcast
  368  00001300          	.proc _mbox_create
  369  00001300          	.global _mbox_create
  370  00001300          	_mbox_create:
  371  00001300  44000460	trap	#0x460
  372  00001304  4be00000	jr	r31
  373  00001308  54000000	nop
  374  0000130c          	.endproc _mbox_create
  376  0000130c          	.proc _mbox_open
  377  0000130c          	.global _mbox_open
  378  0000130c          	_mbox_open:
  379  0000130c  44000461	trap	#0x461
  380  00001310  4be00000	jr	r31
  381  00001314  54000000	nop
  382  00001318          	.endproc _mbox_open
  384  00001318          	.proc _mbox_close
  385  00001318          	.global _mbox_close
  386  00001318          	_mbox_close:
  387  00001318  44000462	trap	#0x462
  388  0000131c  4be00000	jr	r31
  389  00001320  54000000	nop
  390  00001324          	.endproc _mbox_close
  392  00001324          	.proc _mbox_send
  393  00001324          	.global _mbox_send
  394  00001324          	_mbox_send:
  395  00001324  44000463	trap	#0x463
  396  00001328  4be00000	jr	r31
  397  0000132c  54000000	nop
  398  00001330          	.endproc _mbox_send
  400  00001330          	.proc _mbox_recv
  401  00001330          	.global _mbox_recv
  402  00001330          	_mbox_recv:
  403  00001330  44000464	trap	#0x464
  404  00001334  4be00000	jr	r31
  405  00001338  54000000	nop
  406  0000133c          	.endproc _mbox_recv
  408  0000133c          	.proc _sleep
  409  0000133c          	.global _sleep
  410  0000133c          	_sleep:
  411  0000133c  44000465	trap	#0x465
  412  00001340  4be00000	jr	r31
  413  00001344  54000000	nop
  414  00001348          	.endproc _sleep
  416  00001348          	.proc _yield
  417  00001348          	.global _yield
  418  00001348          	_yield:
  419  00001348  44000466	trap	#0x466
  420  0000134c  4be00000	jr	r31
  421  00001350  54000000	nop
  422  00001354          	.endproc _yield
  425  00001354          	.proc _Exit
  426  00001354          	.global _Exit
  427  00001354          	_Exit:
  428  00001354  44000500	trap	#0x500
  429  00001358  4be00000	jr	r31
  430  0000135c  54000000	nop
  431  00001360          	.endproc _Exit
  434  00001360          	.proc _malloc
  435  00001360          	.global _malloc
  436  00001360          	_malloc:
  437  00001360  44000467	trap	#0x467
  438  00001364  4be00000	jr	r31
  439  00001368          	.endproc _malloc
  442  00001368          	.proc _mfree
  443  00001368          	.global _mfree
  444  00001368          	_mfree:
  445  00001368  44000468	trap	#0x468
  446  0000136c  4be00000	jr	r31
  447  00001370          	.endproc _mfree
  448                      ; Compiled by GCC
  450  00001370          	.align 2
  451  00001370          	.proc _isspace
  452  00001370          	.global _isspace
  453  00001370          	_isspace:
  454                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  455  00001370  afbefffc	sw	-4(r29),r30; push fp
  456  00001374  001df020	add	r30,r0,r29; fp = sp
  457  00001378  afbffff8	sw	-8(r29),r31; push ret addr
  458  0000137c  2fbd0018	subui	r29,r29,#24; alloc local storage
  459  00001380  afa20000	sw	0(r29),r2
  460  00001384  afa30004	sw	4(r29),r3
  461  00001388  afa40008	sw	8(r29),r4
  462  0000138c  83c20003	lb	r2,3(r30)
  463  00001390  20010000	addi	r1,r0,#0
  464  00001394  304300ff	andi	r3,r2,#0x00ff
  465  00001398  60640020	seqi	r4,r3,#32
  466  0000139c  1480002c	bnez	r4,L3_LF2
  467  000013a0  54000000	nop; delay slot nop
  468  000013a4  304300ff	andi	r3,r2,#0x00ff
  469  000013a8  60640009	seqi	r4,r3,#9
  470  000013ac  1480001c	bnez	r4,L3_LF2
  471  000013b0  54000000	nop; delay slot nop
  472  000013b4  304300ff	andi	r3,r2,#0x00ff
  473  000013b8  6064000a	seqi	r4,r3,#10
  474  000013bc  1480000c	bnez	r4,L3_LF2
  475  000013c0  54000000	nop; delay slot nop
  476  000013c4  08000008	j	L2_LF2
  477  000013c8  54000000	nop; delay slot nop
  478  000013cc          	L3_LF2:
  479  000013cc  20010001	addi	r1,r0,#1
  480  000013d0          	L2_LF2:
  481  000013d0  08000004	j	L1_LF2
  482  000013d4  54000000	nop; delay slot nop
  483  000013d8          	L1_LF2:
  484  000013d8  8fa20000	lw	r2,0(r29)
  485  000013dc  8fa30004	lw	r3,4(r29)
  486  000013e0  8fa40008	lw	r4,8(r29)
  487  000013e4  8fdffff8	lw	r31,-8(r30)
  488  000013e8  001ee820	add	r29,r0,r30
  489  000013ec  8fdefffc	lw	r30,-4(r30)
  490  000013f0  4be00000	jr	r31
  491  000013f4  54000000	nop
  492  000013f8          	.endproc _isspace
  493  000013f8          	.align 2
  494  000013f8          	.proc _isxdigit
  495  000013f8          	.global _isxdigit
  496  000013f8          	_isxdigit:
  497                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  498  000013f8  afbefffc	sw	-4(r29),r30; push fp
  499  000013fc  001df020	add	r30,r0,r29; fp = sp
  500  00001400  afbffff8	sw	-8(r29),r31; push ret addr
  501  00001404  2fbd0018	subui	r29,r29,#24; alloc local storage
  502  00001408  afa20000	sw	0(r29),r2
  503  0000140c  afa30004	sw	4(r29),r3
  504  00001410  afa40008	sw	8(r29),r4
  505  00001414  83c20003	lb	r2,3(r30)
  506  00001418  20010000	addi	r1,r0,#0
  507  0000141c  304300ff	andi	r3,r2,#0x00ff
  508  00001420  6c64002f	sgtui	r4,r3,#47
  509  00001424  1080001c	beqz	r4,L7_LF2
  510  00001428  54000000	nop; delay slot nop
  511  0000142c  304300ff	andi	r3,r2,#0x00ff
  512  00001430  70640039	sleui	r4,r3,#57
  513  00001434  1480005c	bnez	r4,L6_LF2
  514  00001438  54000000	nop; delay slot nop
  515  0000143c  08000004	j	L7_LF2
  516  00001440  54000000	nop; delay slot nop
  517  00001444          	L7_LF2:
  518  00001444  304300ff	andi	r3,r2,#0x00ff
  519  00001448  6c640060	sgtui	r4,r3,#96
  520  0000144c  1080001c	beqz	r4,L8_LF2
  521  00001450  54000000	nop; delay slot nop
  522  00001454  304300ff	andi	r3,r2,#0x00ff
  523  00001458  70640066	sleui	r4,r3,#102
  524  0000145c  14800034	bnez	r4,L6_LF2
  525  00001460  54000000	nop; delay slot nop
  526  00001464  08000004	j	L8_LF2
  527  00001468  54000000	nop; delay slot nop
  528  0000146c          	L8_LF2:
  529  0000146c  304300ff	andi	r3,r2,#0x00ff
  530  00001470  6c640040	sgtui	r4,r3,#64
  531  00001474  10800020	beqz	r4,L5_LF2
  532  00001478  54000000	nop; delay slot nop
  533  0000147c  304300ff	andi	r3,r2,#0x00ff
  534  00001480  70640041	sleui	r4,r3,#65
  535  00001484  1480000c	bnez	r4,L6_LF2
  536  00001488  54000000	nop; delay slot nop
  537  0000148c  08000008	j	L5_LF2
  538  00001490  54000000	nop; delay slot nop
  539  00001494          	L6_LF2:
  540  00001494  20010001	addi	r1,r0,#1
  541  00001498          	L5_LF2:
  542  00001498  08000004	j	L4_LF2
  543  0000149c  54000000	nop; delay slot nop
  544  000014a0          	L4_LF2:
  545  000014a0  8fa20000	lw	r2,0(r29)
  546  000014a4  8fa30004	lw	r3,4(r29)
  547  000014a8  8fa40008	lw	r4,8(r29)
  548  000014ac  8fdffff8	lw	r31,-8(r30)
  549  000014b0  001ee820	add	r29,r0,r30
  550  000014b4  8fdefffc	lw	r30,-4(r30)
  551  000014b8  4be00000	jr	r31
  552  000014bc  54000000	nop
  553  000014c0          	.endproc _isxdigit
  554  000014c0          	.align 2
  555  000014c0          	.proc _dstrcpy
  556  000014c0          	.global _dstrcpy
  557  000014c0          	_dstrcpy:
  558                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  559  000014c0  afbefffc	sw	-4(r29),r30; push fp
  560  000014c4  001df020	add	r30,r0,r29; fp = sp
  561  000014c8  afbffff8	sw	-8(r29),r31; push ret addr
  562  000014cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  563  000014d0  afa20000	sw	0(r29),r2
  564  000014d4  afa30004	sw	4(r29),r3
  565  000014d8  8fc10000	lw	r1,(r30)
  566  000014dc  afc1fff4	sw	-12(r30),r1
  567  000014e0          	L10_LF2:
  568  000014e0  8fc10000	lw	r1,(r30)
  569  000014e4  20220001	addi	r2,r1,#1
  570  000014e8  afc20000	sw	(r30),r2
  571  000014ec  8fc20004	lw	r2,4(r30)
  572  000014f0  20430001	addi	r3,r2,#1
  573  000014f4  afc30004	sw	4(r30),r3
  574  000014f8  80420000	lb	r2,(r2)
  575  000014fc  a0220000	sb	(r1),r2
  576  00001500  a3c2fff3	sb	-13(r30),r2
  577  00001504          	L12_LF2:
  578  00001504  93c1fff3	lbu	r1,-13(r30)
  579  00001508  64220000	snei	r2,r1,#0
  580  0000150c  1440000c	bnez	r2,L13_LF2
  581  00001510  54000000	nop; delay slot nop
  582  00001514  0800000c	j	L11_LF2
  583  00001518  54000000	nop; delay slot nop
  584  0000151c          	L13_LF2:
  585  0000151c  0bffffc0	j	L10_LF2
  586  00001520  54000000	nop; delay slot nop
  587  00001524          	L11_LF2:
  588  00001524  8fc1fff4	lw	r1,-12(r30)
  589  00001528  08000004	j	L9_LF2
  590  0000152c  54000000	nop; delay slot nop
  591  00001530          	L9_LF2:
  592  00001530  8fa20000	lw	r2,0(r29)
  593  00001534  8fa30004	lw	r3,4(r29)
  594  00001538  8fdffff8	lw	r31,-8(r30)
  595  0000153c  001ee820	add	r29,r0,r30
  596  00001540  8fdefffc	lw	r30,-4(r30)
  597  00001544  4be00000	jr	r31
  598  00001548  54000000	nop
  599  0000154c          	.endproc _dstrcpy
  600  0000154c          	.align 2
  601  0000154c          	.proc _dstrncpy
  602  0000154c          	.global _dstrncpy
  603  0000154c          	_dstrncpy:
  604                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  605  0000154c  afbefffc	sw	-4(r29),r30; push fp
  606  00001550  001df020	add	r30,r0,r29; fp = sp
  607  00001554  afbffff8	sw	-8(r29),r31; push ret addr
  608  00001558  2fbd0018	subui	r29,r29,#24; alloc local storage
  609  0000155c  afa20000	sw	0(r29),r2
  610  00001560  afa30004	sw	4(r29),r3
  611  00001564  8fc10000	lw	r1,(r30)
  612  00001568  afc1fff4	sw	-12(r30),r1
  613  0000156c          	L15_LF2:
  614  0000156c  8fc10008	lw	r1,8(r30)
  615  00001570  2022ffff	addi	r2,r1,#-1
  616  00001574  afc20008	sw	8(r30),r2
  617  00001578  70210000	slei	r1,r1,#0
  618  0000157c  1020000c	beqz	r1,L18_LF2
  619  00001580  54000000	nop; delay slot nop
  620  00001584  08000048	j	L16_LF2
  621  00001588  54000000	nop; delay slot nop
  622  0000158c          	L18_LF2:
  623  0000158c  8fc10000	lw	r1,(r30)
  624  00001590  20220001	addi	r2,r1,#1
  625  00001594  afc20000	sw	(r30),r2
  626  00001598  8fc20004	lw	r2,4(r30)
  627  0000159c  20430001	addi	r3,r2,#1
  628  000015a0  afc30004	sw	4(r30),r3
  629  000015a4  80420000	lb	r2,(r2)
  630  000015a8  a0220000	sb	(r1),r2
  631  000015ac  a3c2fff3	sb	-13(r30),r2
  632  000015b0          	L17_LF2:
  633  000015b0  93c1fff3	lbu	r1,-13(r30)
  634  000015b4  64220000	snei	r2,r1,#0
  635  000015b8  1440000c	bnez	r2,L19_LF2
  636  000015bc  54000000	nop; delay slot nop
  637  000015c0  0800000c	j	L16_LF2
  638  000015c4  54000000	nop; delay slot nop
  639  000015c8          	L19_LF2:
  640  000015c8  0bffffa0	j	L15_LF2
  641  000015cc  54000000	nop; delay slot nop
  642  000015d0          	L16_LF2:
  643  000015d0  8fc1fff4	lw	r1,-12(r30)
  644  000015d4  08000004	j	L14_LF2
  645  000015d8  54000000	nop; delay slot nop
  646  000015dc          	L14_LF2:
  647  000015dc  8fa20000	lw	r2,0(r29)
  648  000015e0  8fa30004	lw	r3,4(r29)
  649  000015e4  8fdffff8	lw	r31,-8(r30)
  650  000015e8  001ee820	add	r29,r0,r30
  651  000015ec  8fdefffc	lw	r30,-4(r30)
  652  000015f0  4be00000	jr	r31
  653  000015f4  54000000	nop
  654  000015f8          	.endproc _dstrncpy
  655  000015f8          	.align 2
  656  000015f8          	.proc _dstrcat
  657  000015f8          	.global _dstrcat
  658  000015f8          	_dstrcat:
  659                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  660  000015f8  afbefffc	sw	-4(r29),r30; push fp
  661  000015fc  001df020	add	r30,r0,r29; fp = sp
  662  00001600  afbffff8	sw	-8(r29),r31; push ret addr
  663  00001604  2fbd0018	subui	r29,r29,#24; alloc local storage
  664  00001608  afa20000	sw	0(r29),r2
  665  0000160c  8fc10000	lw	r1,(r30)
  666  00001610  afc1fff4	sw	-12(r30),r1
  667  00001614          	L21_LF2:
  668  00001614  8fc10000	lw	r1,(r30)
  669  00001618  90220000	lbu	r2,(r1)
  670  0000161c  64410000	snei	r1,r2,#0
  671  00001620  1420000c	bnez	r1,L23_LF2
  672  00001624  54000000	nop; delay slot nop
  673  00001628  0800001c	j	L22_LF2
  674  0000162c  54000000	nop; delay slot nop
  675  00001630          	L23_LF2:
  676  00001630  8fc20000	lw	r2,(r30)
  677  00001634  20410001	addi	r1,r2,#1
  678  00001638  00011020	add	r2,r0,r1
  679  0000163c  afc20000	sw	(r30),r2
  680  00001640  0bffffd0	j	L21_LF2
  681  00001644  54000000	nop; delay slot nop
  682  00001648          	L22_LF2:
  683  00001648  23bdfff8	addi	r29,r29,#-8
  684  0000164c  001d0820	add	r1,r0,r29
  685  00001650  8fc20000	lw	r2,(r30)
  686  00001654  ac220000	sw	(r1),r2
  687  00001658  8fc20004	lw	r2,4(r30)
  688  0000165c  ac220004	sw	4(r1),r2
  689  00001660  0ffffe5c	jal	_dstrcpy
  690  00001664  54000000	nop; delay slot nop
  691  00001668  23bd0008	addi	r29,r29,#8
  692  0000166c  8fc1fff4	lw	r1,-12(r30)
  693  00001670  08000004	j	L20_LF2
  694  00001674  54000000	nop; delay slot nop
  695  00001678          	L20_LF2:
  696  00001678  8fa20000	lw	r2,0(r29)
  697  0000167c  8fdffff8	lw	r31,-8(r30)
  698  00001680  001ee820	add	r29,r0,r30
  699  00001684  8fdefffc	lw	r30,-4(r30)
  700  00001688  4be00000	jr	r31
  701  0000168c  54000000	nop
  702  00001690          	.endproc _dstrcat
  703  00001690          	.align 2
  704  00001690          	.proc _dstrncmp
  705  00001690          	.global _dstrncmp
  706  00001690          	_dstrncmp:
  707                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  708  00001690  afbefffc	sw	-4(r29),r30; push fp
  709  00001694  001df020	add	r30,r0,r29; fp = sp
  710  00001698  afbffff8	sw	-8(r29),r31; push ret addr
  711  0000169c  2fbd0018	subui	r29,r29,#24; alloc local storage
  712  000016a0  afa20000	sw	0(r29),r2
  713  000016a4  afa30004	sw	4(r29),r3
  714  000016a8  54000000	nop
  715  000016ac  20010000	addi	r1,r0,#0
  716  000016b0  afc1fff4	sw	-12(r30),r1
  717  000016b4          	L25_LF2:
  718  000016b4  8fc1fff4	lw	r1,-12(r30)
  719  000016b8  8fc20008	lw	r2,8(r30)
  720  000016bc  0022082a	slt	r1,r1,r2
  721  000016c0  1420000c	bnez	r1,L28_LF2
  722  000016c4  54000000	nop; delay slot nop
  723  000016c8  08000088	j	L26_LF2
  724  000016cc  54000000	nop; delay slot nop
  725  000016d0          	L28_LF2:
  726  000016d0  8fc10004	lw	r1,4(r30)
  727  000016d4  90220000	lbu	r2,(r1)
  728  000016d8  64410000	snei	r1,r2,#0
  729  000016dc  14200018	bnez	r1,L29_LF2
  730  000016e0  54000000	nop; delay slot nop
  731  000016e4  20010000	addi	r1,r0,#0
  732  000016e8  080000d8	j	L24_LF2
  733  000016ec  54000000	nop; delay slot nop
  734  000016f0  08000028	j	L30_LF2
  735  000016f4  54000000	nop; delay slot nop
  736  000016f8          	L29_LF2:
  737  000016f8  8fc10000	lw	r1,(r30)
  738  000016fc  8fc20004	lw	r2,4(r30)
  739  00001700  90210000	lbu	r1,(r1)
  740  00001704  90420000	lbu	r2,(r2)
  741  00001708  00220829	sne	r1,r1,r2
  742  0000170c  1020000c	beqz	r1,L30_LF2
  743  00001710  54000000	nop; delay slot nop
  744  00001714  0800003c	j	L26_LF2
  745  00001718  54000000	nop; delay slot nop
  746  0000171c          	L31_LF2:
  747  0000171c          	L30_LF2:
  748  0000171c  8fc20000	lw	r2,(r30)
  749  00001720  20410001	addi	r1,r2,#1
  750  00001724  00011020	add	r2,r0,r1
  751  00001728  afc20000	sw	(r30),r2
  752  0000172c  8fc20004	lw	r2,4(r30)
  753  00001730  20410001	addi	r1,r2,#1
  754  00001734  00011020	add	r2,r0,r1
  755  00001738  afc20004	sw	4(r30),r2
  756  0000173c          	L27_LF2:
  757  0000173c  8fc2fff4	lw	r2,-12(r30)
  758  00001740  20410001	addi	r1,r2,#1
  759  00001744  00011020	add	r2,r0,r1
  760  00001748  afc2fff4	sw	-12(r30),r2
  761  0000174c  0bffff64	j	L25_LF2
  762  00001750  54000000	nop; delay slot nop
  763  00001754          	L26_LF2:
  764  00001754  8fc1fff4	lw	r1,-12(r30)
  765  00001758  8fc20008	lw	r2,8(r30)
  766  0000175c  00220828	seq	r1,r1,r2
  767  00001760  10200018	beqz	r1,L32_LF2
  768  00001764  54000000	nop; delay slot nop
  769  00001768  20010000	addi	r1,r0,#0
  770  0000176c  08000054	j	L24_LF2
  771  00001770  54000000	nop; delay slot nop
  772  00001774  0800004c	j	L33_LF2
  773  00001778  54000000	nop; delay slot nop
  774  0000177c          	L32_LF2:
  775  0000177c  8fc20000	lw	r2,(r30)
  776  00001780  90410000	lbu	r1,(r2)
  777  00001784  8fc20004	lw	r2,4(r30)
  778  00001788  90430000	lbu	r3,(r2)
  779  0000178c  00230822	sub	r1,r1,r3
  780  00001790  74220000	sgei	r2,r1,#0
  781  00001794  10400020	beqz	r2,L34_LF2
  782  00001798  54000000	nop; delay slot nop
  783  0000179c  8fc10000	lw	r1,(r30)
  784  000017a0  8fc20004	lw	r2,4(r30)
  785  000017a4  90210000	lbu	r1,(r1)
  786  000017a8  90420000	lbu	r2,(r2)
  787  000017ac  00220829	sne	r1,r1,r2
  788  000017b0  08000008	j	L35_LF2
  789  000017b4  54000000	nop; delay slot nop
  790  000017b8          	L34_LF2:
  791  000017b8  2001ffff	addi	r1,r0,#-1
  792  000017bc          	L35_LF2:
  793  000017bc  08000004	j	L24_LF2
  794  000017c0  54000000	nop; delay slot nop
  795  000017c4          	L33_LF2:
  796  000017c4          	L24_LF2:
  797  000017c4  8fa20000	lw	r2,0(r29)
  798  000017c8  8fa30004	lw	r3,4(r29)
  799  000017cc  8fdffff8	lw	r31,-8(r30)
  800  000017d0  001ee820	add	r29,r0,r30
  801  000017d4  8fdefffc	lw	r30,-4(r30)
  802  000017d8  4be00000	jr	r31
  803  000017dc  54000000	nop
  804  000017e0          	.endproc _dstrncmp
  805  000017e0          	.align 2
  806  000017e0          	.proc _dstrlen
  807  000017e0          	.global _dstrlen
  808  000017e0          	_dstrlen:
  809                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  810  000017e0  afbefffc	sw	-4(r29),r30; push fp
  811  000017e4  001df020	add	r30,r0,r29; fp = sp
  812  000017e8  afbffff8	sw	-8(r29),r31; push ret addr
  813  000017ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  814  000017f0  afa20000	sw	0(r29),r2
  815  000017f4  20010000	addi	r1,r0,#0
  816  000017f8  afc1fff4	sw	-12(r30),r1
  817  000017fc          	L37_LF2:
  818  000017fc  8fc10000	lw	r1,(r30)
  819  00001800  20220001	addi	r2,r1,#1
  820  00001804  afc20000	sw	(r30),r2
  821  00001808  90210000	lbu	r1,(r1)
  822  0000180c  64220000	snei	r2,r1,#0
  823  00001810  1440000c	bnez	r2,L39_LF2
  824  00001814  54000000	nop; delay slot nop
  825  00001818  0800001c	j	L38_LF2
  826  0000181c  54000000	nop; delay slot nop
  827  00001820          	L39_LF2:
  828  00001820  8fc2fff4	lw	r2,-12(r30)
  829  00001824  20410001	addi	r1,r2,#1
  830  00001828  00011020	add	r2,r0,r1
  831  0000182c  afc2fff4	sw	-12(r30),r2
  832  00001830  0bffffc8	j	L37_LF2
  833  00001834  54000000	nop; delay slot nop
  834  00001838          	L38_LF2:
  835  00001838  8fc1fff4	lw	r1,-12(r30)
  836  0000183c  08000004	j	L36_LF2
  837  00001840  54000000	nop; delay slot nop
  838  00001844          	L36_LF2:
  839  00001844  8fa20000	lw	r2,0(r29)
  840  00001848  8fdffff8	lw	r31,-8(r30)
  841  0000184c  001ee820	add	r29,r0,r30
  842  00001850  8fdefffc	lw	r30,-4(r30)
  843  00001854  4be00000	jr	r31
  844  00001858  54000000	nop
  845  0000185c          	.endproc _dstrlen
  846  0000185c          	.align 2
  847  0000185c          	.proc _dstrstr
  848  0000185c          	.global _dstrstr
  849  0000185c          	_dstrstr:
  850                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  851  0000185c  afbefffc	sw	-4(r29),r30; push fp
  852  00001860  001df020	add	r30,r0,r29; fp = sp
  853  00001864  afbffff8	sw	-8(r29),r31; push ret addr
  854  00001868  2fbd0018	subui	r29,r29,#24; alloc local storage
  855  0000186c  afa20000	sw	0(r29),r2
  856  00001870  23bdfff8	addi	r29,r29,#-8
  857  00001874  001d0820	add	r1,r0,r29
  858  00001878  8fc20004	lw	r2,4(r30)
  859  0000187c  ac220000	sw	(r1),r2
  860  00001880  0fffff5c	jal	_dstrlen
  861  00001884  54000000	nop; delay slot nop
  862  00001888  23bd0008	addi	r29,r29,#8
  863  0000188c  afc1fff4	sw	-12(r30),r1
  864  00001890          	L41_LF2:
  865  00001890  8fc10000	lw	r1,(r30)
  866  00001894  90220000	lbu	r2,(r1)
  867  00001898  64410000	snei	r1,r2,#0
  868  0000189c  1420000c	bnez	r1,L43_LF2
  869  000018a0  54000000	nop; delay slot nop
  870  000018a4  08000060	j	L42_LF2
  871  000018a8  54000000	nop; delay slot nop
  872  000018ac          	L43_LF2:
  873  000018ac  23bdfff0	addi	r29,r29,#-16
  874  000018b0  001d0820	add	r1,r0,r29
  875  000018b4  8fc20000	lw	r2,(r30)
  876  000018b8  ac220000	sw	(r1),r2
  877  000018bc  8fc20004	lw	r2,4(r30)
  878  000018c0  ac220004	sw	4(r1),r2
  879  000018c4  8fc2fff4	lw	r2,-12(r30)
  880  000018c8  ac220008	sw	8(r1),r2
  881  000018cc  0ffffdc0	jal	_dstrncmp
  882  000018d0  54000000	nop; delay slot nop
  883  000018d4  23bd0010	addi	r29,r29,#16
  884  000018d8  64220000	snei	r2,r1,#0
  885  000018dc  14400010	bnez	r2,L44_LF2
  886  000018e0  54000000	nop; delay slot nop
  887  000018e4  8fc10000	lw	r1,(r30)
  888  000018e8  08000028	j	L40_LF2
  889  000018ec  54000000	nop; delay slot nop
  890  000018f0          	L44_LF2:
  891  000018f0  8fc20000	lw	r2,(r30)
  892  000018f4  20410001	addi	r1,r2,#1
  893  000018f8  00011020	add	r2,r0,r1
  894  000018fc  afc20000	sw	(r30),r2
  895  00001900  0bffff8c	j	L41_LF2
  896  00001904  54000000	nop; delay slot nop
  897  00001908          	L42_LF2:
  898  00001908  20010000	addi	r1,r0,#0
  899  0000190c  08000004	j	L40_LF2
  900  00001910  54000000	nop; delay slot nop
  901  00001914          	L40_LF2:
  902  00001914  8fa20000	lw	r2,0(r29)
  903  00001918  8fdffff8	lw	r31,-8(r30)
  904  0000191c  001ee820	add	r29,r0,r30
  905  00001920  8fdefffc	lw	r30,-4(r30)
  906  00001924  4be00000	jr	r31
  907  00001928  54000000	nop
  908  0000192c          	.endproc _dstrstr
  909  0000192c          	.align 2
  910  0000192c          	.proc _dmindex
  911  0000192c          	.global _dmindex
  912  0000192c          	_dmindex:
  913                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  914  0000192c  afbefffc	sw	-4(r29),r30; push fp
  915  00001930  001df020	add	r30,r0,r29; fp = sp
  916  00001934  afbffff8	sw	-8(r29),r31; push ret addr
  917  00001938  2fbd0018	subui	r29,r29,#24; alloc local storage
  918  0000193c  afa20000	sw	0(r29),r2
  919  00001940  54000000	nop
  920  00001944          	L46_LF2:
  921  00001944  8fc10000	lw	r1,(r30)
  922  00001948  90220000	lbu	r2,(r1)
  923  0000194c  64410000	snei	r1,r2,#0
  924  00001950  1420000c	bnez	r1,L48_LF2
  925  00001954  54000000	nop; delay slot nop
  926  00001958  08000070	j	L47_LF2
  927  0000195c  54000000	nop; delay slot nop
  928  00001960          	L48_LF2:
  929  00001960  8fc10004	lw	r1,4(r30)
  930  00001964  afc1fff4	sw	-12(r30),r1
  931  00001968          	L49_LF2:
  932  00001968  8fc1fff4	lw	r1,-12(r30)
  933  0000196c  90220000	lbu	r2,(r1)
  934  00001970  64410000	snei	r1,r2,#0
  935  00001974  1420000c	bnez	r1,L52_LF2
  936  00001978  54000000	nop; delay slot nop
  937  0000197c  08000044	j	L50_LF2
  938  00001980  54000000	nop; delay slot nop
  939  00001984          	L52_LF2:
  940  00001984  8fc10000	lw	r1,(r30)
  941  00001988  8fc2fff4	lw	r2,-12(r30)
  942  0000198c  90210000	lbu	r1,(r1)
  943  00001990  90420000	lbu	r2,(r2)
  944  00001994  00220828	seq	r1,r1,r2
  945  00001998  10200010	beqz	r1,L51_LF2
  946  0000199c  54000000	nop; delay slot nop
  947  000019a0  8fc10000	lw	r1,(r30)
  948  000019a4  08000030	j	L45_LF2
  949  000019a8  54000000	nop; delay slot nop
  950  000019ac          	L53_LF2:
  951  000019ac          	L51_LF2:
  952  000019ac  8fc2fff4	lw	r2,-12(r30)
  953  000019b0  20410001	addi	r1,r2,#1
  954  000019b4  00011020	add	r2,r0,r1
  955  000019b8  afc2fff4	sw	-12(r30),r2
  956  000019bc  0bffffa8	j	L49_LF2
  957  000019c0  54000000	nop; delay slot nop
  958  000019c4          	L50_LF2:
  959  000019c4  0bffff7c	j	L46_LF2
  960  000019c8  54000000	nop; delay slot nop
  961  000019cc          	L47_LF2:
  962  000019cc  20010000	addi	r1,r0,#0
  963  000019d0  08000004	j	L45_LF2
  964  000019d4  54000000	nop; delay slot nop
  965  000019d8          	L45_LF2:
  966  000019d8  8fa20000	lw	r2,0(r29)
  967  000019dc  8fdffff8	lw	r31,-8(r30)
  968  000019e0  001ee820	add	r29,r0,r30
  969  000019e4  8fdefffc	lw	r30,-4(r30)
  970  000019e8  4be00000	jr	r31
  971  000019ec  54000000	nop
  972  000019f0          	.endproc _dmindex
  973  000019f0          	.align 2
  974  000019f0          	.proc _dindex
  975  000019f0          	.global _dindex
  976  000019f0          	_dindex:
  977                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  978  000019f0  afbefffc	sw	-4(r29),r30; push fp
  979  000019f4  001df020	add	r30,r0,r29; fp = sp
  980  000019f8  afbffff8	sw	-8(r29),r31; push ret addr
  981  000019fc  2fbd0010	subui	r29,r29,#16; alloc local storage
  982  00001a00  afa20000	sw	0(r29),r2
  983  00001a04  54000000	nop
  984  00001a08          	L55_LF2:
  985  00001a08  8fc10000	lw	r1,(r30)
  986  00001a0c  90220000	lbu	r2,(r1)
  987  00001a10  64410000	snei	r1,r2,#0
  988  00001a14  1420000c	bnez	r1,L57_LF2
  989  00001a18  54000000	nop; delay slot nop
  990  00001a1c  08000040	j	L56_LF2
  991  00001a20  54000000	nop; delay slot nop
  992  00001a24          	L57_LF2:
  993  00001a24  8fc10000	lw	r1,(r30)
  994  00001a28  90220000	lbu	r2,(r1)
  995  00001a2c  8fc10004	lw	r1,4(r30)
  996  00001a30  00411028	seq	r2,r2,r1
  997  00001a34  10400010	beqz	r2,L58_LF2
  998  00001a38  54000000	nop; delay slot nop
  999  00001a3c  8fc10000	lw	r1,(r30)
 1000  00001a40  08000028	j	L54_LF2
 1001  00001a44  54000000	nop; delay slot nop
 1002  00001a48          	L58_LF2:
 1003  00001a48  8fc20000	lw	r2,(r30)
 1004  00001a4c  20410001	addi	r1,r2,#1
 1005  00001a50  00011020	add	r2,r0,r1
 1006  00001a54  afc20000	sw	(r30),r2
 1007  00001a58  0bffffac	j	L55_LF2
 1008  00001a5c  54000000	nop; delay slot nop
 1009  00001a60          	L56_LF2:
 1010  00001a60  20010000	addi	r1,r0,#0
 1011  00001a64  08000004	j	L54_LF2
 1012  00001a68  54000000	nop; delay slot nop
 1013  00001a6c          	L54_LF2:
 1014  00001a6c  8fa20000	lw	r2,0(r29)
 1015  00001a70  8fdffff8	lw	r31,-8(r30)
 1016  00001a74  001ee820	add	r29,r0,r30
 1017  00001a78  8fdefffc	lw	r30,-4(r30)
 1018  00001a7c  4be00000	jr	r31
 1019  00001a80  54000000	nop
 1020  00001a84          	.endproc _dindex
 1021  00001a84          	.align 2
 1022  00001a84          	.proc _ditoa
 1023  00001a84          	.global _ditoa
 1024  00001a84          	_ditoa:
 1025                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1026  00001a84  afbefffc	sw	-4(r29),r30; push fp
 1027  00001a88  001df020	add	r30,r0,r29; fp = sp
 1028  00001a8c  afbffff8	sw	-8(r29),r31; push ret addr
 1029  00001a90  2fbd0018	subui	r29,r29,#24; alloc local storage
 1030  00001a94  afa20000	sw	0(r29),r2
 1031  00001a98  afa30004	sw	4(r29),r3
 1032  00001a9c  8fc10000	lw	r1,(r30)
 1033  00001aa0  68220000	slti	r2,r1,#0
 1034  00001aa4  1040002c	beqz	r2,L60_LF2
 1035  00001aa8  54000000	nop; delay slot nop
 1036  00001aac  8fc10004	lw	r1,4(r30)
 1037  00001ab0  20220001	addi	r2,r1,#1
 1038  00001ab4  afc20004	sw	4(r30),r2
 1039  00001ab8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1040  00001abc  a0220000	sb	(r1),r2
 1041  00001ac0  8fc10000	lw	r1,(r30)
 1042  00001ac4  00011022	sub	r2,r0,r1
 1043  00001ac8  afc20000	sw	(r30),r2
 1044  00001acc  08000118	j	L61_LF2
 1045  00001ad0  54000000	nop; delay slot nop
 1046  00001ad4          	L60_LF2:
 1047  00001ad4  8fc10000	lw	r1,(r30)
 1048  00001ad8  64220000	snei	r2,r1,#0
 1049  00001adc  14400020	bnez	r2,L62_LF2
 1050  00001ae0  54000000	nop; delay slot nop
 1051  00001ae4  8fc10004	lw	r1,4(r30)
 1052  00001ae8  20220001	addi	r2,r1,#1
 1053  00001aec  afc20004	sw	4(r30),r2
 1054  00001af0  20020030	addi	r2,r0,(#0x30)&0xff
 1055  00001af4  a0220000	sb	(r1),r2
 1056  00001af8  080000ec	j	L61_LF2
 1057  00001afc  54000000	nop; delay slot nop
 1058  00001b00          	L62_LF2:
 1059  00001b00  20010001	addi	r1,r0,#1
 1060  00001b04  afc1fff4	sw	-12(r30),r1
 1061  00001b08          	L64_LF2:
 1062  00001b08  8fc1fff4	lw	r1,-12(r30)
 1063  00001b0c  8fc20000	lw	r2,(r30)
 1064  00001b10  0022082c	sle	r1,r1,r2
 1065  00001b14  1420000c	bnez	r1,L66_LF2
 1066  00001b18  54000000	nop; delay slot nop
 1067  00001b1c  08000024	j	L65_LF2
 1068  00001b20  54000000	nop; delay slot nop
 1069  00001b24          	L67_LF2:
 1070  00001b24          	L66_LF2:
 1071  00001b24  8fc1fff4	lw	r1,-12(r30)
 1072  00001b28  00011820	add	r3,r0,r1
 1073  00001b2c  50620002	slli	r2,r3,#0x2
 1074  00001b30  00411020	add	r2,r2,r1
 1075  00001b34  50410001	slli	r1,r2,#0x1
 1076  00001b38  afc1fff4	sw	-12(r30),r1
 1077  00001b3c  0bffffc8	j	L64_LF2
 1078  00001b40  54000000	nop; delay slot nop
 1079  00001b44          	L65_LF2:
 1080  00001b44  54000000	nop
 1081  00001b48          	L68_LF2:
 1082  00001b48  8fc1fff4	lw	r1,-12(r30)
 1083  00001b4c  2002000a	addi	r2,r0,#10
 1084  00001b50  00200035	movi2fp	f0,r1
 1085  00001b54  00400835	movi2fp	f1,r2
 1086  00001b58  0401000f	div	f0,f0,f1
 1087  00001b5c  00000834	movfp2i	r1,f0
 1088  00001b60  afc1fff4	sw	-12(r30),r1
 1089  00001b64  8fc10004	lw	r1,4(r30)
 1090  00001b68  20220001	addi	r2,r1,#1
 1091  00001b6c  afc20004	sw	4(r30),r2
 1092  00001b70  8fc20000	lw	r2,(r30)
 1093  00001b74  8fc3fff4	lw	r3,-12(r30)
 1094  00001b78  00400035	movi2fp	f0,r2
 1095  00001b7c  00600835	movi2fp	f1,r3
 1096  00001b80  0401000f	div	f0,f0,f1
 1097  00001b84  00001034	movfp2i	r2,f0
 1098  00001b88  00021820	add	r3,r0,r2
 1099  00001b8c  20620030	addi	r2,r3,#48
 1100  00001b90  a0220000	sb	(r1),r2
 1101  00001b94  8fc10000	lw	r1,(r30)
 1102  00001b98  8fc3fff4	lw	r3,-12(r30)
 1103  00001b9c  00200035	movi2fp	f0,r1
 1104  00001ba0  00600835	movi2fp	f1,r3
 1105  00001ba4  0401000f	div	f0,f0,f1
 1106  00001ba8  00001034	movfp2i	r2,f0
 1107  00001bac  8fc3fff4	lw	r3,-12(r30)
 1108  00001bb0  00400035	movi2fp	f0,r2
 1109  00001bb4  00600835	movi2fp	f1,r3
 1110  00001bb8  0401000e	mult	f0,f0,f1
 1111  00001bbc  00001034	movfp2i	r2,f0
 1112  00001bc0  00220822	sub	r1,r1,r2
 1113  00001bc4  afc10000	sw	(r30),r1
 1114  00001bc8          	L70_LF2:
 1115  00001bc8  8fc1fff4	lw	r1,-12(r30)
 1116  00001bcc  6c220001	sgti	r2,r1,#1
 1117  00001bd0  1440000c	bnez	r2,L71_LF2
 1118  00001bd4  54000000	nop; delay slot nop
 1119  00001bd8  0800000c	j	L61_LF2
 1120  00001bdc  54000000	nop; delay slot nop
 1121  00001be0          	L71_LF2:
 1122  00001be0  0bffff64	j	L68_LF2
 1123  00001be4  54000000	nop; delay slot nop
 1124  00001be8          	L69_LF2:
 1125  00001be8          	L63_LF2:
 1126  00001be8          	L61_LF2:
 1127  00001be8  8fc10004	lw	r1,4(r30)
 1128  00001bec  20020000	addi	r2,r0,(#0x0)&0xff
 1129  00001bf0  a0220000	sb	(r1),r2
 1130  00001bf4          	L59_LF2:
 1131  00001bf4  8fa20000	lw	r2,0(r29)
 1132  00001bf8  8fa30004	lw	r3,4(r29)
 1133  00001bfc  8fdffff8	lw	r31,-8(r30)
 1134  00001c00  001ee820	add	r29,r0,r30
 1135  00001c04  8fdefffc	lw	r30,-4(r30)
 1136  00001c08  4be00000	jr	r31
 1137  00001c0c  54000000	nop
 1138  00001c10          	.endproc _ditoa
 1139  00001c10          	.align 2
 1140  00001c10          	.proc _dstrtol
 1141  00001c10          	.global _dstrtol
 1142  00001c10          	_dstrtol:
 1143                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1144  00001c10  afbefffc	sw	-4(r29),r30; push fp
 1145  00001c14  001df020	add	r30,r0,r29; fp = sp
 1146  00001c18  afbffff8	sw	-8(r29),r31; push ret addr
 1147  00001c1c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1148  00001c20  afa20000	sw	0(r29),r2
 1149  00001c24  20010000	addi	r1,r0,#0
 1150  00001c28  afc1fff4	sw	-12(r30),r1
 1151  00001c2c          	L73_LF2:
 1152  00001c2c  8fc10000	lw	r1,(r30)
 1153  00001c30  90220000	lbu	r2,(r1)
 1154  00001c34  60410020	seqi	r1,r2,#32
 1155  00001c38  14200034	bnez	r1,L75_LF2
 1156  00001c3c  54000000	nop; delay slot nop
 1157  00001c40  8fc10000	lw	r1,(r30)
 1158  00001c44  90220000	lbu	r2,(r1)
 1159  00001c48  60410009	seqi	r1,r2,#9
 1160  00001c4c  14200020	bnez	r1,L75_LF2
 1161  00001c50  54000000	nop; delay slot nop
 1162  00001c54  8fc10000	lw	r1,(r30)
 1163  00001c58  90220000	lbu	r2,(r1)
 1164  00001c5c  6041000a	seqi	r1,r2,#10
 1165  00001c60  1420000c	bnez	r1,L75_LF2
 1166  00001c64  54000000	nop; delay slot nop
 1167  00001c68  0800001c	j	L74_LF2
 1168  00001c6c  54000000	nop; delay slot nop
 1169  00001c70          	L75_LF2:
 1170  00001c70  8fc20000	lw	r2,(r30)
 1171  00001c74  20410001	addi	r1,r2,#1
 1172  00001c78  00011020	add	r2,r0,r1
 1173  00001c7c  afc20000	sw	(r30),r2
 1174  00001c80  0bffffa8	j	L73_LF2
 1175  00001c84  54000000	nop; delay slot nop
 1176  00001c88          	L74_LF2:
 1177  00001c88  8fc10004	lw	r1,4(r30)
 1178  00001c8c  64220000	snei	r2,r1,#0
 1179  00001c90  10400010	beqz	r2,L76_LF2
 1180  00001c94  54000000	nop; delay slot nop
 1181  00001c98  8fc10004	lw	r1,4(r30)
 1182  00001c9c  8fc20000	lw	r2,(r30)
 1183  00001ca0  ac220000	sw	(r1),r2
 1184  00001ca4          	L76_LF2:
 1185  00001ca4  8fc10000	lw	r1,(r30)
 1186  00001ca8  90220000	lbu	r2,(r1)
 1187  00001cac  64410000	snei	r1,r2,#0
 1188  00001cb0  14200010	bnez	r1,L77_LF2
 1189  00001cb4  54000000	nop; delay slot nop
 1190  00001cb8  8fc1fff4	lw	r1,-12(r30)
 1191  00001cbc  08000294	j	L72_LF2
 1192  00001cc0  54000000	nop; delay slot nop
 1193  00001cc4          	L77_LF2:
 1194  00001cc4  8fc10000	lw	r1,(r30)
 1195  00001cc8  90220000	lbu	r2,(r1)
 1196  00001ccc  6041002d	seqi	r1,r2,#45
 1197  00001cd0  10200024	beqz	r1,L78_LF2
 1198  00001cd4  54000000	nop; delay slot nop
 1199  00001cd8  2001ffff	addi	r1,r0,#-1
 1200  00001cdc  afc1ffec	sw	-20(r30),r1
 1201  00001ce0  8fc20000	lw	r2,(r30)
 1202  00001ce4  20410001	addi	r1,r2,#1
 1203  00001ce8  00011020	add	r2,r0,r1
 1204  00001cec  afc20000	sw	(r30),r2
 1205  00001cf0  0800000c	j	L79_LF2
 1206  00001cf4  54000000	nop; delay slot nop
 1207  00001cf8          	L78_LF2:
 1208  00001cf8  20010001	addi	r1,r0,#1
 1209  00001cfc  afc1ffec	sw	-20(r30),r1
 1210  00001d00          	L79_LF2:
 1211  00001d00  8fc10008	lw	r1,8(r30)
 1212  00001d04  64220000	snei	r2,r1,#0
 1213  00001d08  14400090	bnez	r2,L80_LF2
 1214  00001d0c  54000000	nop; delay slot nop
 1215  00001d10  8fc10000	lw	r1,(r30)
 1216  00001d14  90220000	lbu	r2,(r1)
 1217  00001d18  60410030	seqi	r1,r2,#48
 1218  00001d1c  10200074	beqz	r1,L81_LF2
 1219  00001d20  54000000	nop; delay slot nop
 1220  00001d24  8fc20000	lw	r2,(r30)
 1221  00001d28  20410001	addi	r1,r2,#1
 1222  00001d2c  00011020	add	r2,r0,r1
 1223  00001d30  afc20000	sw	(r30),r2
 1224  00001d34  8fc10000	lw	r1,(r30)
 1225  00001d38  90220000	lbu	r2,(r1)
 1226  00001d3c  60410078	seqi	r1,r2,#120
 1227  00001d40  14200020	bnez	r1,L83_LF2
 1228  00001d44  54000000	nop; delay slot nop
 1229  00001d48  8fc10000	lw	r1,(r30)
 1230  00001d4c  90220000	lbu	r2,(r1)
 1231  00001d50  60410058	seqi	r1,r2,#88
 1232  00001d54  1420000c	bnez	r1,L83_LF2
 1233  00001d58  54000000	nop; delay slot nop
 1234  00001d5c  08000024	j	L82_LF2
 1235  00001d60  54000000	nop; delay slot nop
 1236  00001d64          	L83_LF2:
 1237  00001d64  20010010	addi	r1,r0,#16
 1238  00001d68  afc10008	sw	8(r30),r1
 1239  00001d6c  8fc20000	lw	r2,(r30)
 1240  00001d70  20410001	addi	r1,r2,#1
 1241  00001d74  00011020	add	r2,r0,r1
 1242  00001d78  afc20000	sw	(r30),r2
 1243  00001d7c  0800000c	j	L84_LF2
 1244  00001d80  54000000	nop; delay slot nop
 1245  00001d84          	L82_LF2:
 1246  00001d84  20010008	addi	r1,r0,#8
 1247  00001d88  afc10008	sw	8(r30),r1
 1248  00001d8c          	L84_LF2:
 1249  00001d8c  0800000c	j	L80_LF2
 1250  00001d90  54000000	nop; delay slot nop
 1251  00001d94          	L81_LF2:
 1252  00001d94  2001000a	addi	r1,r0,#10
 1253  00001d98  afc10008	sw	8(r30),r1
 1254  00001d9c          	L85_LF2:
 1255  00001d9c          	L80_LF2:
 1256  00001d9c  8fc10008	lw	r1,8(r30)
 1257  00001da0  70220000	slei	r2,r1,#0
 1258  00001da4  1440001c	bnez	r2,L87_LF2
 1259  00001da8  54000000	nop; delay slot nop
 1260  00001dac  8fc10008	lw	r1,8(r30)
 1261  00001db0  6c220010	sgti	r2,r1,#16
 1262  00001db4  1440000c	bnez	r2,L87_LF2
 1263  00001db8  54000000	nop; delay slot nop
 1264  00001dbc  08000010	j	L86_LF2
 1265  00001dc0  54000000	nop; delay slot nop
 1266  00001dc4          	L87_LF2:
 1267  00001dc4  8fc1fff4	lw	r1,-12(r30)
 1268  00001dc8  08000188	j	L72_LF2
 1269  00001dcc  54000000	nop; delay slot nop
 1270  00001dd0          	L86_LF2:
 1271  00001dd0  54000000	nop
 1272  00001dd4          	L88_LF2:
 1273  00001dd4  8fc10000	lw	r1,(r30)
 1274  00001dd8  90220000	lbu	r2,(r1)
 1275  00001ddc  6c41002f	sgtui	r1,r2,#47
 1276  00001de0  10200030	beqz	r1,L91_LF2
 1277  00001de4  54000000	nop; delay slot nop
 1278  00001de8  8fc10000	lw	r1,(r30)
 1279  00001dec  90220000	lbu	r2,(r1)
 1280  00001df0  70410039	sleui	r1,r2,#57
 1281  00001df4  1020001c	beqz	r1,L91_LF2
 1282  00001df8  54000000	nop; delay slot nop
 1283  00001dfc  8fc10000	lw	r1,(r30)
 1284  00001e00  90220000	lbu	r2,(r1)
 1285  00001e04  2041ffd0	addi	r1,r2,#-48
 1286  00001e08  afc1fff0	sw	-16(r30),r1
 1287  00001e0c  0800008c	j	L92_LF2
 1288  00001e10  54000000	nop; delay slot nop
 1289  00001e14          	L91_LF2:
 1290  00001e14  8fc10000	lw	r1,(r30)
 1291  00001e18  90220000	lbu	r2,(r1)
 1292  00001e1c  6c410060	sgtui	r1,r2,#96
 1293  00001e20  10200030	beqz	r1,L93_LF2
 1294  00001e24  54000000	nop; delay slot nop
 1295  00001e28  8fc10000	lw	r1,(r30)
 1296  00001e2c  90220000	lbu	r2,(r1)
 1297  00001e30  7041007a	sleui	r1,r2,#122
 1298  00001e34  1020001c	beqz	r1,L93_LF2
 1299  00001e38  54000000	nop; delay slot nop
 1300  00001e3c  8fc10000	lw	r1,(r30)
 1301  00001e40  90220000	lbu	r2,(r1)
 1302  00001e44  2041ffa9	addi	r1,r2,#-87
 1303  00001e48  afc1fff0	sw	-16(r30),r1
 1304  00001e4c  0800004c	j	L92_LF2
 1305  00001e50  54000000	nop; delay slot nop
 1306  00001e54          	L93_LF2:
 1307  00001e54  8fc10000	lw	r1,(r30)
 1308  00001e58  90220000	lbu	r2,(r1)
 1309  00001e5c  6c410040	sgtui	r1,r2,#64
 1310  00001e60  10200030	beqz	r1,L95_LF2
 1311  00001e64  54000000	nop; delay slot nop
 1312  00001e68  8fc10000	lw	r1,(r30)
 1313  00001e6c  90220000	lbu	r2,(r1)
 1314  00001e70  7041005a	sleui	r1,r2,#90
 1315  00001e74  1020001c	beqz	r1,L95_LF2
 1316  00001e78  54000000	nop; delay slot nop
 1317  00001e7c  8fc10000	lw	r1,(r30)
 1318  00001e80  90220000	lbu	r2,(r1)
 1319  00001e84  2041ffc9	addi	r1,r2,#-55
 1320  00001e88  afc1fff0	sw	-16(r30),r1
 1321  00001e8c  0800000c	j	L92_LF2
 1322  00001e90  54000000	nop; delay slot nop
 1323  00001e94          	L95_LF2:
 1324  00001e94  200103e8	addi	r1,r0,#1000
 1325  00001e98  afc1fff0	sw	-16(r30),r1
 1326  00001e9c          	L96_LF2:
 1327  00001e9c          	L94_LF2:
 1328  00001e9c          	L92_LF2:
 1329  00001e9c  8fc1fff0	lw	r1,-16(r30)
 1330  00001ea0  8fc20008	lw	r2,8(r30)
 1331  00001ea4  0022082a	slt	r1,r1,r2
 1332  00001ea8  10200040	beqz	r1,L90_LF2
 1333  00001eac  54000000	nop; delay slot nop
 1334  00001eb0  8fc1fff4	lw	r1,-12(r30)
 1335  00001eb4  8fc20008	lw	r2,8(r30)
 1336  00001eb8  00200035	movi2fp	f0,r1
 1337  00001ebc  00400835	movi2fp	f1,r2
 1338  00001ec0  0401000e	mult	f0,f0,f1
 1339  00001ec4  00000834	movfp2i	r1,f0
 1340  00001ec8  afc1fff4	sw	-12(r30),r1
 1341  00001ecc  8fc1fff4	lw	r1,-12(r30)
 1342  00001ed0  8fc2fff0	lw	r2,-16(r30)
 1343  00001ed4  00220820	add	r1,r1,r2
 1344  00001ed8  afc1fff4	sw	-12(r30),r1
 1345  00001edc  8fc20000	lw	r2,(r30)
 1346  00001ee0  20410001	addi	r1,r2,#1
 1347  00001ee4  00011020	add	r2,r0,r1
 1348  00001ee8  afc20000	sw	(r30),r2
 1349  00001eec          	L97_LF2:
 1350  00001eec          	L90_LF2:
 1351  00001eec  8fc1fff0	lw	r1,-16(r30)
 1352  00001ef0  8fc20008	lw	r2,8(r30)
 1353  00001ef4  0022082a	slt	r1,r1,r2
 1354  00001ef8  1420000c	bnez	r1,L98_LF2
 1355  00001efc  54000000	nop; delay slot nop
 1356  00001f00  0800000c	j	L89_LF2
 1357  00001f04  54000000	nop; delay slot nop
 1358  00001f08          	L98_LF2:
 1359  00001f08  0bfffec8	j	L88_LF2
 1360  00001f0c  54000000	nop; delay slot nop
 1361  00001f10          	L89_LF2:
 1362  00001f10  8fc10004	lw	r1,4(r30)
 1363  00001f14  64220000	snei	r2,r1,#0
 1364  00001f18  10400010	beqz	r2,L99_LF2
 1365  00001f1c  54000000	nop; delay slot nop
 1366  00001f20  8fc10004	lw	r1,4(r30)
 1367  00001f24  8fc20000	lw	r2,(r30)
 1368  00001f28  ac220000	sw	(r1),r2
 1369  00001f2c          	L99_LF2:
 1370  00001f2c  8fc1fff4	lw	r1,-12(r30)
 1371  00001f30  8fc2ffec	lw	r2,-20(r30)
 1372  00001f34  00200035	movi2fp	f0,r1
 1373  00001f38  00400835	movi2fp	f1,r2
 1374  00001f3c  0401000e	mult	f0,f0,f1
 1375  00001f40  00000834	movfp2i	r1,f0
 1376  00001f44  afc1fff4	sw	-12(r30),r1
 1377  00001f48  8fc1fff4	lw	r1,-12(r30)
 1378  00001f4c  08000004	j	L72_LF2
 1379  00001f50  54000000	nop; delay slot nop
 1380  00001f54          	L72_LF2:
 1381  00001f54  8fa20000	lw	r2,0(r29)
 1382  00001f58  8fdffff8	lw	r31,-8(r30)
 1383  00001f5c  001ee820	add	r29,r0,r30
 1384  00001f60  8fdefffc	lw	r30,-4(r30)
 1385  00001f64  4be00000	jr	r31
 1386  00001f68  54000000	nop
 1387  00001f6c          	.endproc _dstrtol
 1388  00001f6c          	.align 2
 1389  00001f6c          	.proc _bcopy
 1390  00001f6c          	.global _bcopy
 1391  00001f6c          	_bcopy:
 1392                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1393  00001f6c  afbefffc	sw	-4(r29),r30; push fp
 1394  00001f70  001df020	add	r30,r0,r29; fp = sp
 1395  00001f74  afbffff8	sw	-8(r29),r31; push ret addr
 1396  00001f78  2fbd0010	subui	r29,r29,#16; alloc local storage
 1397  00001f7c  afa20000	sw	0(r29),r2
 1398  00001f80  afa30004	sw	4(r29),r3
 1399  00001f84  54000000	nop
 1400  00001f88          	L101_LF2:
 1401  00001f88  8fc10008	lw	r1,8(r30)
 1402  00001f8c  2022ffff	addi	r2,r1,#-1
 1403  00001f90  afc20008	sw	8(r30),r2
 1404  00001f94  6c210000	sgti	r1,r1,#0
 1405  00001f98  1420000c	bnez	r1,L103_LF2
 1406  00001f9c  54000000	nop; delay slot nop
 1407  00001fa0  0800002c	j	L102_LF2
 1408  00001fa4  54000000	nop; delay slot nop
 1409  00001fa8          	L103_LF2:
 1410  00001fa8  8fc10004	lw	r1,4(r30)
 1411  00001fac  20220001	addi	r2,r1,#1
 1412  00001fb0  afc20004	sw	4(r30),r2
 1413  00001fb4  8fc20000	lw	r2,(r30)
 1414  00001fb8  20430001	addi	r3,r2,#1
 1415  00001fbc  afc30000	sw	(r30),r3
 1416  00001fc0  80420000	lb	r2,(r2)
 1417  00001fc4  a0220000	sb	(r1),r2
 1418  00001fc8  0bffffbc	j	L101_LF2
 1419  00001fcc  54000000	nop; delay slot nop
 1420  00001fd0          	L102_LF2:
 1421  00001fd0          	L100_LF2:
 1422  00001fd0  8fa20000	lw	r2,0(r29)
 1423  00001fd4  8fa30004	lw	r3,4(r29)
 1424  00001fd8  8fdffff8	lw	r31,-8(r30)
 1425  00001fdc  001ee820	add	r29,r0,r30
 1426  00001fe0  8fdefffc	lw	r30,-4(r30)
 1427  00001fe4  4be00000	jr	r31
 1428  00001fe8  54000000	nop
 1429  00001fec          	.endproc _bcopy
 1430  00001fec          	.align 2
 1431  00001fec          	.proc _bzero
 1432  00001fec          	.global _bzero
 1433  00001fec          	_bzero:
 1434                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1435  00001fec  afbefffc	sw	-4(r29),r30; push fp
 1436  00001ff0  001df020	add	r30,r0,r29; fp = sp
 1437  00001ff4  afbffff8	sw	-8(r29),r31; push ret addr
 1438  00001ff8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1439  00001ffc  afa20000	sw	0(r29),r2
 1440  00002000  54000000	nop
 1441  00002004          	L105_LF2:
 1442  00002004  8fc10004	lw	r1,4(r30)
 1443  00002008  2022ffff	addi	r2,r1,#-1
 1444  0000200c  afc20004	sw	4(r30),r2
 1445  00002010  6c210000	sgti	r1,r1,#0
 1446  00002014  1420000c	bnez	r1,L107_LF2
 1447  00002018  54000000	nop; delay slot nop
 1448  0000201c  08000020	j	L106_LF2
 1449  00002020  54000000	nop; delay slot nop
 1450  00002024          	L107_LF2:
 1451  00002024  8fc10000	lw	r1,(r30)
 1452  00002028  20220001	addi	r2,r1,#1
 1453  0000202c  afc20000	sw	(r30),r2
 1454  00002030  20020000	addi	r2,r0,(#0x0)&0xff
 1455  00002034  a0220000	sb	(r1),r2
 1456  00002038  0bffffc8	j	L105_LF2
 1457  0000203c  54000000	nop; delay slot nop
 1458  00002040          	L106_LF2:
 1459  00002040          	L104_LF2:
 1460  00002040  8fa20000	lw	r2,0(r29)
 1461  00002044  8fdffff8	lw	r31,-8(r30)
 1462  00002048  001ee820	add	r29,r0,r30
 1463  0000204c  8fdefffc	lw	r30,-4(r30)
 1464  00002050  4be00000	jr	r31
 1465  00002054  54000000	nop
 1466  00002058          	.endproc _bzero
 1467  00002058          	.align 2
 1468  00002058          	.proc _min
 1469  00002058          	.global _min
 1470  00002058          	_min:
 1471                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1472  00002058  afbefffc	sw	-4(r29),r30; push fp
 1473  0000205c  001df020	add	r30,r0,r29; fp = sp
 1474  00002060  afbffff8	sw	-8(r29),r31; push ret addr
 1475  00002064  2fbd0010	subui	r29,r29,#16; alloc local storage
 1476  00002068  afa20000	sw	0(r29),r2
 1477  0000206c  afa30004	sw	4(r29),r3
 1478  00002070  8fc10000	lw	r1,(r30)
 1479  00002074  8fc20004	lw	r2,4(r30)
 1480  00002078  0022182c	sle	r3,r1,r2
 1481  0000207c  14600008	bnez	r3,L109_LF2
 1482  00002080  54000000	nop; delay slot nop
 1483  00002084  8fc10004	lw	r1,4(r30)
 1484  00002088          	L109_LF2:
 1485  00002088  08000004	j	L108_LF2
 1486  0000208c  54000000	nop; delay slot nop
 1487  00002090          	L108_LF2:
 1488  00002090  8fa20000	lw	r2,0(r29)
 1489  00002094  8fa30004	lw	r3,4(r29)
 1490  00002098  8fdffff8	lw	r31,-8(r30)
 1491  0000209c  001ee820	add	r29,r0,r30
 1492  000020a0  8fdefffc	lw	r30,-4(r30)
 1493  000020a4  4be00000	jr	r31
 1494  000020a8  54000000	nop
 1495  000020ac          	.endproc _min
 1496  000020ac          	.align 2
 1497  000020ac          	.proc _max
 1498  000020ac          	.global _max
 1499  000020ac          	_max:
 1500                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1501  000020ac  afbefffc	sw	-4(r29),r30; push fp
 1502  000020b0  001df020	add	r30,r0,r29; fp = sp
 1503  000020b4  afbffff8	sw	-8(r29),r31; push ret addr
 1504  000020b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1505  000020bc  afa20000	sw	0(r29),r2
 1506  000020c0  afa30004	sw	4(r29),r3
 1507  000020c4  8fc10000	lw	r1,(r30)
 1508  000020c8  8fc20004	lw	r2,4(r30)
 1509  000020cc  0022182d	sge	r3,r1,r2
 1510  000020d0  14600008	bnez	r3,L111_LF2
 1511  000020d4  54000000	nop; delay slot nop
 1512  000020d8  8fc10004	lw	r1,4(r30)
 1513  000020dc          	L111_LF2:
 1514  000020dc  08000004	j	L110_LF2
 1515  000020e0  54000000	nop; delay slot nop
 1516  000020e4          	L110_LF2:
 1517  000020e4  8fa20000	lw	r2,0(r29)
 1518  000020e8  8fa30004	lw	r3,4(r29)
 1519  000020ec  8fdffff8	lw	r31,-8(r30)
 1520  000020f0  001ee820	add	r29,r0,r30
 1521  000020f4  8fdefffc	lw	r30,-4(r30)
 1522  000020f8  4be00000	jr	r31
 1523  000020fc  54000000	nop
 1524  00002100          	.endproc _max
 1525                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1526                      ;;;
 1527                      ;;; Most of the traps are called in files from libtraps.
 1530  00002100          	.align 2
 1531  00002100          	.proc _exit
 1532  00002100          	.global _exit
 1533  00002100          	_exit:
 1534  00002100  44000300	trap	#0x300
 1535  00002104  4be00000	jr	r31
 1536  00002108  54000000	nop
 1537  0000210c          	.endproc _exit
 1539                      ; for the benefit of gcc.
 1540  0000210c          	.proc ___main
 1541  0000210c          	.global ___main
 1542  0000210c          	___main:
 1543  0000210c  4be00000	jr	r31
 1544  00002110  54000000	nop
 1545  00002114          	.endproc ___main
 1546  00002114          	.text
 1547  00002114          	.global _etext
 1548  00002114          	_etext:
 1549  00002114          	.align 3
 1550  00002118          	.data
 1551  000030c1          	.global _edata
 1552  000030c1          	_edata:
