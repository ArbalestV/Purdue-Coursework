 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 337
    4                      ; Text size: 4368
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  0a546865	.ascii "\nThe Test Program 2 - accessing address outside max virtual address.."
   85  00003038  20546573	
   85  0000303c  74205072	
   85  00003040  6f677261	
   85  00003044  6d203220	
   85  00003048  2d206163	
   85  0000304c  63657373	
   85  00003050  696e6720	
   85  00003054  61646472	
   85  00003058  65737320	
   85  0000305c  6f757473	
   85  00003060  69646520	
   85  00003064  6d617820	
   85  00003068  76697274	
   85  0000306c  75616c20	
   85  00003070  61646472	
   85  00003074  6573732e	
   85  00003078  2e      	
   86  00003079  00      	.ascii "\000"
   87  0000307a          	.align 2
   88  0000307c          	LC2_LF0:
   89  0000307c  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   89  00003080  6f5f776f	
   89  00003084  726c6420	
   89  00003088  28256429	
   89  0000308c  3a204261	
   89  00003090  64207365	
   89  00003094  6d617068	
   89  00003098  6f726520	
   89  0000309c  735f7072	
   89  000030a0  6f63735f	
   89  000030a4  636f6d70	
   89  000030a8  6c657465	
   89  000030ac  64202825	
   89  000030b0  6429210a	
   89  000030b4  00      	
   90  000030b5          	.align 2
   91  000030b8          	LC3_LF0:
   92  000030b8  0a416363	.ascii "\nAccessing out of bounds Memory Location in decimal representation : "
   92  000030bc  65737369	
   92  000030c0  6e67206f	
   92  000030c4  7574206f	
   92  000030c8  6620626f	
   92  000030cc  756e6473	
   92  000030d0  204d656d	
   92  000030d4  6f727920	
   92  000030d8  4c6f6361	
   92  000030dc  74696f6e	
   92  000030e0  20696e20	
   92  000030e4  64656369	
   92  000030e8  6d616c20	
   92  000030ec  72657072	
   92  000030f0  6573656e	
   92  000030f4  74617469	
   92  000030f8  6f6e203a	
   92  000030fc  20      	
   93  000030fd  2564200a	.ascii "%d \n\000"
   93  00003101  00      	
   94  00003102          	.align 2
   95  00003104          	LC4_LF0:
   96  00003104  0a456e64	.ascii "\nEnd of The Test Program 2 - accessing address outside max virtual ad"
   96  00003108  206f6620	
   96  0000310c  54686520	
   96  00003110  54657374	
   96  00003114  2050726f	
   96  00003118  6772616d	
   96  0000311c  2032202d	
   96  00003120  20616363	
   96  00003124  65737369	
   96  00003128  6e672061	
   96  0000312c  64647265	
   96  00003130  7373206f	
   96  00003134  75747369	
   96  00003138  6465206d	
   96  0000313c  61782076	
   96  00003140  69727475	
   96  00003144  616c2061	
   96  00003148  64      	
   97  00003149  64726573	.ascii "dress..\000"
   97  0000314d  732e2e00	
   98  00003151          	.text
   99  000010d4          	.align 2
  100  000010d4          	.proc _main
  101  000010d4          	.global _main
  102  000010d4          	_main:
  103                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  104  000010d4  afbefffc	sw	-4(r29),r30; push fp
  105  000010d8  001df020	add	r30,r0,r29; fp = sp
  106  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  107  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  108  000010e4  8fc20000	lw	r2,(r30)
  109  000010e8  8fc30004	lw	r3,4(r30)
  110  000010ec  0c001018	jal	___main
  111  000010f0  54000000	nop; not filled.
  112  000010f4  64410002	snei	r1,r2,#2
  113  000010f8  10200028	beqz	r1,L17_LF0
  114  000010fc  54000000	nop; not filled.
  115  00001100  23bdfff8	addi	r29,r29,#-8
  116  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  117  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  118  0000110c  afa40000	sw	(r29),r4
  119  00001110  0c000134	jal	_Printf
  120  00001114  54000000	nop; not filled.
  121  00001118  0c000234	jal	_Exit
  122  0000111c  54000000	nop; not filled.
  123  00001120  23bd0008	addi	r29,r29,#8
  124  00001124          	L17_LF0:
  125  00001124  23bdfff0	addi	r29,r29,#-16
  126  00001128  8c630004	lw	r3,4(r3)
  127  0000112c  afa30000	sw	(r29),r3
  128  00001130  20040000	addi	r4,r0,#0
  129  00001134  afa40004	sw	4(r29),r4
  130  00001138  2004000a	addi	r4,r0,#10
  131  0000113c  afa40008	sw	8(r29),r4
  132  00001140  0c000ac8	jal	_dstrtol
  133  00001144  54000000	nop; not filled.
  134  00001148  00011020	add	r2,r0,r1
  135  0000114c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  136  00001150  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  137  00001154  afa40000	sw	(r29),r4
  138  00001158  0c0000ec	jal	_Printf
  139  0000115c  54000000	nop; not filled.
  140  00001160  afa20000	sw	(r29),r2
  141  00001164  0c000134	jal	_sem_signal
  142  00001168  54000000	nop; not filled.
  143  0000116c  23bd0010	addi	r29,r29,#16
  144  00001170  64210001	snei	r1,r1,#1
  145  00001174  10200038	beqz	r1,L18_LF0
  146  00001178  54000000	nop; not filled.
  147  0000117c  0c0000d4	jal	_getpid
  148  00001180  54000000	nop; not filled.
  149  00001184  23bdfff0	addi	r29,r29,#-16
  150  00001188  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  151  0000118c  2484307c	addui	r4,r4,(LC2_LF0)&0xffff
  152  00001190  afa40000	sw	(r29),r4
  153  00001194  afa10004	sw	4(r29),r1
  154  00001198  afa20008	sw	8(r29),r2
  155  0000119c  0c0000a8	jal	_Printf
  156  000011a0  54000000	nop; not filled.
  157  000011a4  0c0001a8	jal	_Exit
  158  000011a8  54000000	nop; not filled.
  159  000011ac  23bd0010	addi	r29,r29,#16
  160  000011b0          	L18_LF0:
  161  000011b0  3c020040	lhi	r2,#64
  162  000011b4  24420f9f	addui	r2,r2,#3999
  163  000011b8  23bdfff8	addi	r29,r29,#-8
  164  000011bc  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  165  000011c0  248430b8	addui	r4,r4,(LC3_LF0)&0xffff
  166  000011c4  afa40000	sw	(r29),r4
  167  000011c8  afa20004	sw	4(r29),r2
  168  000011cc  0c000078	jal	_Printf
  169  000011d0  54000000	nop; not filled.
  170  000011d4  3c04abcd	lhi	r4,#-21555
  171  000011d8  24841100	addui	r4,r4,#4352
  172  000011dc  ac440000	sw	(r2),r4
  173  000011e0  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  174  000011e4  24843104	addui	r4,r4,(LC4_LF0)&0xffff
  175  000011e8  afa40000	sw	(r29),r4
  176  000011ec  0c000058	jal	_Printf
  177  000011f0  54000000	nop; not filled.
  178  000011f4  23bd0008	addi	r29,r29,#8
  179  000011f8  0c000f00	jal	_exit
  180  000011fc  54000000	nop
  181  00001200          	.endproc _main
  182                      ;;;
  183                      ;;; Stub functions for DLX traps.
  184                      ;;;
  185                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  186                      ;;;
  187                      ;;; The traps such as Open and Close
  188                      ;;; (note the capital letters) are for use by user programs.  The traps
  189                      ;;; with names such as open and close (lower case) are for use by the OS.
  190                      ;;;
  193  00001200          	.align 2
  195                      ;;; The following are the traps to be used by user-level programs
  196                      ;;;
  198  00001200          	.align 2
  199  00001200          	.proc _Open
  200  00001200          	.global _Open
  201  00001200          	_Open:
  202                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  203                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  204                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  205  00001200  44000213	trap	#0x213
  206  00001204  4be00000	jr	r31
  207  00001208  54000000	nop
  208  0000120c          	.endproc _Open
  210  0000120c          	.proc _Close
  211  0000120c          	.global _Close
  212  0000120c          	_Close:
  213  0000120c  44000214	trap	#0x214
  214  00001210  4be00000	jr	r31
  215  00001214  54000000	nop
  216  00001218          	.endproc _Close
  218  00001218          	.proc _Read
  219  00001218          	.global _Read
  220  00001218          	_Read:
  221  00001218  44000210	trap	#0x210
  222  0000121c  4be00000	jr	r31
  223  00001220  54000000	nop
  224  00001224          	.endproc _Read
  226  00001224          	.proc _Write
  227  00001224          	.global _Write
  228  00001224          	_Write:
  229  00001224  44000211	trap	#0x211
  230  00001228  4be00000	jr	r31
  231  0000122c  54000000	nop
  232  00001230          	.endproc _Write
  234  00001230          	.proc _Lseek
  235  00001230          	.global _Lseek
  236  00001230          	_Lseek:
  237  00001230  44000212	trap	#0x212
  238  00001234  4be00000	jr	r31
  239  00001238  54000000	nop
  240  0000123c          	.endproc _Lseek
  242  0000123c          	.proc _Putchar
  243  0000123c          	.global _Putchar
  244  0000123c          	_Putchar:
  245  0000123c  44000280	trap	#0x280
  246  00001240  4be00000	jr	r31
  247  00001244  54000000	nop
  248  00001248          	.endproc _Putchar
  250  00001248          	.proc _Printf
  251  00001248          	.global _Printf
  252  00001248          	_Printf:
  253  00001248  44000201	trap	#0x201
  254  0000124c  4be00000	jr	r31
  255  00001250  54000000	nop
  256  00001254          	.endproc _Printf
  258  00001254          	.proc _getpid
  259  00001254          	.global _getpid
  260  00001254          	_getpid:
  261  00001254  44000431	trap	#0x431
  262  00001258  4be00000	jr	r31
  263  0000125c  54000000	nop
  264  00001260          	.endproc _getpid
  266  00001260          	.proc _process_create
  267  00001260          	.global _process_create
  268  00001260          	_process_create:
  269  00001260  44000432	trap	#0x432
  270  00001264  4be00000	jr	r31
  271  00001268  54000000	nop
  272  0000126c          	.endproc _process_create
  274  0000126c          	.proc _shmget
  275  0000126c          	.global _shmget
  276  0000126c          	_shmget:
  277  0000126c  44000440	trap	#0x440
  278  00001270  4be00000	jr	r31
  279  00001274  54000000	nop
  280  00001278          	.endproc _shmget
  282  00001278          	.proc _shmat
  283  00001278          	.global _shmat
  284  00001278          	_shmat:
  285  00001278  44000441	trap	#0x441
  286  0000127c  4be00000	jr	r31
  287  00001280  54000000	nop
  288  00001284          	.endproc _shmat
  290  00001284          	.proc _sem_create
  291  00001284          	.global _sem_create
  292  00001284          	_sem_create:
  293  00001284  44000450	trap	#0x450
  294  00001288  4be00000	jr	r31
  295  0000128c  54000000	nop
  296  00001290          	.endproc _sem_create
  298  00001290          	.proc _sem_wait
  299  00001290          	.global _sem_wait
  300  00001290          	_sem_wait:
  301  00001290  44000451	trap	#0x451
  302  00001294  4be00000	jr	r31
  303  00001298  54000000	nop
  304  0000129c          	.endproc _sem_wait
  306  0000129c          	.proc _sem_signal
  307  0000129c          	.global _sem_signal
  308  0000129c          	_sem_signal:
  309  0000129c  44000452	trap	#0x452
  310  000012a0  4be00000	jr	r31
  311  000012a4  54000000	nop
  312  000012a8          	.endproc _sem_signal
  314  000012a8          	.proc _lock_create
  315  000012a8          	.global _lock_create
  316  000012a8          	_lock_create:
  317  000012a8  44000453	trap	#0x453
  318  000012ac  4be00000	jr	r31
  319  000012b0  54000000	nop
  320  000012b4          	.endproc _lock_create
  322  000012b4          	.proc _lock_acquire
  323  000012b4          	.global _lock_acquire
  324  000012b4          	_lock_acquire:
  325  000012b4  44000454	trap	#0x454
  326  000012b8  4be00000	jr	r31
  327  000012bc  54000000	nop
  328  000012c0          	.endproc _lock_acquire
  330  000012c0          	.proc _lock_release
  331  000012c0          	.global _lock_release
  332  000012c0          	_lock_release:
  333  000012c0  44000455	trap	#0x455
  334  000012c4  4be00000	jr	r31
  335  000012c8  54000000	nop
  336  000012cc          	.endproc _lock_release
  338  000012cc          	.proc _cond_create
  339  000012cc          	.global _cond_create
  340  000012cc          	_cond_create:
  341  000012cc  44000456	trap	#0x456
  342  000012d0  4be00000	jr	r31
  343  000012d4  54000000	nop
  344  000012d8          	.endproc _cond_create
  346  000012d8          	.proc _cond_wait
  347  000012d8          	.global _cond_wait
  348  000012d8          	_cond_wait:
  349  000012d8  44000457	trap	#0x457
  350  000012dc  4be00000	jr	r31
  351  000012e0  54000000	nop
  352  000012e4          	.endproc _cond_wait
  354  000012e4          	.proc _cond_signal
  355  000012e4          	.global _cond_signal
  356  000012e4          	_cond_signal:
  357  000012e4  44000458	trap	#0x458
  358  000012e8  4be00000	jr	r31
  359  000012ec  54000000	nop
  360  000012f0          	.endproc _cond_signal
  362  000012f0          	.proc _cond_broadcast
  363  000012f0          	.global _cond_broadcast
  364  000012f0          	_cond_broadcast:
  365  000012f0  44000459	trap	#0x459
  366  000012f4  4be00000	jr	r31
  367  000012f8  54000000	nop
  368  000012fc          	.endproc _cond_broadcast
  370  000012fc          	.proc _mbox_create
  371  000012fc          	.global _mbox_create
  372  000012fc          	_mbox_create:
  373  000012fc  44000460	trap	#0x460
  374  00001300  4be00000	jr	r31
  375  00001304  54000000	nop
  376  00001308          	.endproc _mbox_create
  378  00001308          	.proc _mbox_open
  379  00001308          	.global _mbox_open
  380  00001308          	_mbox_open:
  381  00001308  44000461	trap	#0x461
  382  0000130c  4be00000	jr	r31
  383  00001310  54000000	nop
  384  00001314          	.endproc _mbox_open
  386  00001314          	.proc _mbox_close
  387  00001314          	.global _mbox_close
  388  00001314          	_mbox_close:
  389  00001314  44000462	trap	#0x462
  390  00001318  4be00000	jr	r31
  391  0000131c  54000000	nop
  392  00001320          	.endproc _mbox_close
  394  00001320          	.proc _mbox_send
  395  00001320          	.global _mbox_send
  396  00001320          	_mbox_send:
  397  00001320  44000463	trap	#0x463
  398  00001324  4be00000	jr	r31
  399  00001328  54000000	nop
  400  0000132c          	.endproc _mbox_send
  402  0000132c          	.proc _mbox_recv
  403  0000132c          	.global _mbox_recv
  404  0000132c          	_mbox_recv:
  405  0000132c  44000464	trap	#0x464
  406  00001330  4be00000	jr	r31
  407  00001334  54000000	nop
  408  00001338          	.endproc _mbox_recv
  410  00001338          	.proc _sleep
  411  00001338          	.global _sleep
  412  00001338          	_sleep:
  413  00001338  44000465	trap	#0x465
  414  0000133c  4be00000	jr	r31
  415  00001340  54000000	nop
  416  00001344          	.endproc _sleep
  418  00001344          	.proc _yield
  419  00001344          	.global _yield
  420  00001344          	_yield:
  421  00001344  44000466	trap	#0x466
  422  00001348  4be00000	jr	r31
  423  0000134c  54000000	nop
  424  00001350          	.endproc _yield
  427  00001350          	.proc _Exit
  428  00001350          	.global _Exit
  429  00001350          	_Exit:
  430  00001350  44000500	trap	#0x500
  431  00001354  4be00000	jr	r31
  432  00001358  54000000	nop
  433  0000135c          	.endproc _Exit
  436  0000135c          	.proc _malloc
  437  0000135c          	.global _malloc
  438  0000135c          	_malloc:
  439  0000135c  44000467	trap	#0x467
  440  00001360  4be00000	jr	r31
  441  00001364          	.endproc _malloc
  444  00001364          	.proc _mfree
  445  00001364          	.global _mfree
  446  00001364          	_mfree:
  447  00001364  44000468	trap	#0x468
  448  00001368  4be00000	jr	r31
  449  0000136c          	.endproc _mfree
  450                      ; Compiled by GCC
  452  0000136c          	.align 2
  453  0000136c          	.proc _isspace
  454  0000136c          	.global _isspace
  455  0000136c          	_isspace:
  456                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  457  0000136c  afbefffc	sw	-4(r29),r30; push fp
  458  00001370  001df020	add	r30,r0,r29; fp = sp
  459  00001374  afbffff8	sw	-8(r29),r31; push ret addr
  460  00001378  2fbd0018	subui	r29,r29,#24; alloc local storage
  461  0000137c  afa20000	sw	0(r29),r2
  462  00001380  afa30004	sw	4(r29),r3
  463  00001384  afa40008	sw	8(r29),r4
  464  00001388  83c20003	lb	r2,3(r30)
  465  0000138c  20010000	addi	r1,r0,#0
  466  00001390  304300ff	andi	r3,r2,#0x00ff
  467  00001394  60640020	seqi	r4,r3,#32
  468  00001398  1480002c	bnez	r4,L3_LF2
  469  0000139c  54000000	nop; delay slot nop
  470  000013a0  304300ff	andi	r3,r2,#0x00ff
  471  000013a4  60640009	seqi	r4,r3,#9
  472  000013a8  1480001c	bnez	r4,L3_LF2
  473  000013ac  54000000	nop; delay slot nop
  474  000013b0  304300ff	andi	r3,r2,#0x00ff
  475  000013b4  6064000a	seqi	r4,r3,#10
  476  000013b8  1480000c	bnez	r4,L3_LF2
  477  000013bc  54000000	nop; delay slot nop
  478  000013c0  08000008	j	L2_LF2
  479  000013c4  54000000	nop; delay slot nop
  480  000013c8          	L3_LF2:
  481  000013c8  20010001	addi	r1,r0,#1
  482  000013cc          	L2_LF2:
  483  000013cc  08000004	j	L1_LF2
  484  000013d0  54000000	nop; delay slot nop
  485  000013d4          	L1_LF2:
  486  000013d4  8fa20000	lw	r2,0(r29)
  487  000013d8  8fa30004	lw	r3,4(r29)
  488  000013dc  8fa40008	lw	r4,8(r29)
  489  000013e0  8fdffff8	lw	r31,-8(r30)
  490  000013e4  001ee820	add	r29,r0,r30
  491  000013e8  8fdefffc	lw	r30,-4(r30)
  492  000013ec  4be00000	jr	r31
  493  000013f0  54000000	nop
  494  000013f4          	.endproc _isspace
  495  000013f4          	.align 2
  496  000013f4          	.proc _isxdigit
  497  000013f4          	.global _isxdigit
  498  000013f4          	_isxdigit:
  499                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  500  000013f4  afbefffc	sw	-4(r29),r30; push fp
  501  000013f8  001df020	add	r30,r0,r29; fp = sp
  502  000013fc  afbffff8	sw	-8(r29),r31; push ret addr
  503  00001400  2fbd0018	subui	r29,r29,#24; alloc local storage
  504  00001404  afa20000	sw	0(r29),r2
  505  00001408  afa30004	sw	4(r29),r3
  506  0000140c  afa40008	sw	8(r29),r4
  507  00001410  83c20003	lb	r2,3(r30)
  508  00001414  20010000	addi	r1,r0,#0
  509  00001418  304300ff	andi	r3,r2,#0x00ff
  510  0000141c  6c64002f	sgtui	r4,r3,#47
  511  00001420  1080001c	beqz	r4,L7_LF2
  512  00001424  54000000	nop; delay slot nop
  513  00001428  304300ff	andi	r3,r2,#0x00ff
  514  0000142c  70640039	sleui	r4,r3,#57
  515  00001430  1480005c	bnez	r4,L6_LF2
  516  00001434  54000000	nop; delay slot nop
  517  00001438  08000004	j	L7_LF2
  518  0000143c  54000000	nop; delay slot nop
  519  00001440          	L7_LF2:
  520  00001440  304300ff	andi	r3,r2,#0x00ff
  521  00001444  6c640060	sgtui	r4,r3,#96
  522  00001448  1080001c	beqz	r4,L8_LF2
  523  0000144c  54000000	nop; delay slot nop
  524  00001450  304300ff	andi	r3,r2,#0x00ff
  525  00001454  70640066	sleui	r4,r3,#102
  526  00001458  14800034	bnez	r4,L6_LF2
  527  0000145c  54000000	nop; delay slot nop
  528  00001460  08000004	j	L8_LF2
  529  00001464  54000000	nop; delay slot nop
  530  00001468          	L8_LF2:
  531  00001468  304300ff	andi	r3,r2,#0x00ff
  532  0000146c  6c640040	sgtui	r4,r3,#64
  533  00001470  10800020	beqz	r4,L5_LF2
  534  00001474  54000000	nop; delay slot nop
  535  00001478  304300ff	andi	r3,r2,#0x00ff
  536  0000147c  70640041	sleui	r4,r3,#65
  537  00001480  1480000c	bnez	r4,L6_LF2
  538  00001484  54000000	nop; delay slot nop
  539  00001488  08000008	j	L5_LF2
  540  0000148c  54000000	nop; delay slot nop
  541  00001490          	L6_LF2:
  542  00001490  20010001	addi	r1,r0,#1
  543  00001494          	L5_LF2:
  544  00001494  08000004	j	L4_LF2
  545  00001498  54000000	nop; delay slot nop
  546  0000149c          	L4_LF2:
  547  0000149c  8fa20000	lw	r2,0(r29)
  548  000014a0  8fa30004	lw	r3,4(r29)
  549  000014a4  8fa40008	lw	r4,8(r29)
  550  000014a8  8fdffff8	lw	r31,-8(r30)
  551  000014ac  001ee820	add	r29,r0,r30
  552  000014b0  8fdefffc	lw	r30,-4(r30)
  553  000014b4  4be00000	jr	r31
  554  000014b8  54000000	nop
  555  000014bc          	.endproc _isxdigit
  556  000014bc          	.align 2
  557  000014bc          	.proc _dstrcpy
  558  000014bc          	.global _dstrcpy
  559  000014bc          	_dstrcpy:
  560                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  561  000014bc  afbefffc	sw	-4(r29),r30; push fp
  562  000014c0  001df020	add	r30,r0,r29; fp = sp
  563  000014c4  afbffff8	sw	-8(r29),r31; push ret addr
  564  000014c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  565  000014cc  afa20000	sw	0(r29),r2
  566  000014d0  afa30004	sw	4(r29),r3
  567  000014d4  8fc10000	lw	r1,(r30)
  568  000014d8  afc1fff4	sw	-12(r30),r1
  569  000014dc          	L10_LF2:
  570  000014dc  8fc10000	lw	r1,(r30)
  571  000014e0  20220001	addi	r2,r1,#1
  572  000014e4  afc20000	sw	(r30),r2
  573  000014e8  8fc20004	lw	r2,4(r30)
  574  000014ec  20430001	addi	r3,r2,#1
  575  000014f0  afc30004	sw	4(r30),r3
  576  000014f4  80420000	lb	r2,(r2)
  577  000014f8  a0220000	sb	(r1),r2
  578  000014fc  a3c2fff3	sb	-13(r30),r2
  579  00001500          	L12_LF2:
  580  00001500  93c1fff3	lbu	r1,-13(r30)
  581  00001504  64220000	snei	r2,r1,#0
  582  00001508  1440000c	bnez	r2,L13_LF2
  583  0000150c  54000000	nop; delay slot nop
  584  00001510  0800000c	j	L11_LF2
  585  00001514  54000000	nop; delay slot nop
  586  00001518          	L13_LF2:
  587  00001518  0bffffc0	j	L10_LF2
  588  0000151c  54000000	nop; delay slot nop
  589  00001520          	L11_LF2:
  590  00001520  8fc1fff4	lw	r1,-12(r30)
  591  00001524  08000004	j	L9_LF2
  592  00001528  54000000	nop; delay slot nop
  593  0000152c          	L9_LF2:
  594  0000152c  8fa20000	lw	r2,0(r29)
  595  00001530  8fa30004	lw	r3,4(r29)
  596  00001534  8fdffff8	lw	r31,-8(r30)
  597  00001538  001ee820	add	r29,r0,r30
  598  0000153c  8fdefffc	lw	r30,-4(r30)
  599  00001540  4be00000	jr	r31
  600  00001544  54000000	nop
  601  00001548          	.endproc _dstrcpy
  602  00001548          	.align 2
  603  00001548          	.proc _dstrncpy
  604  00001548          	.global _dstrncpy
  605  00001548          	_dstrncpy:
  606                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  607  00001548  afbefffc	sw	-4(r29),r30; push fp
  608  0000154c  001df020	add	r30,r0,r29; fp = sp
  609  00001550  afbffff8	sw	-8(r29),r31; push ret addr
  610  00001554  2fbd0018	subui	r29,r29,#24; alloc local storage
  611  00001558  afa20000	sw	0(r29),r2
  612  0000155c  afa30004	sw	4(r29),r3
  613  00001560  8fc10000	lw	r1,(r30)
  614  00001564  afc1fff4	sw	-12(r30),r1
  615  00001568          	L15_LF2:
  616  00001568  8fc10008	lw	r1,8(r30)
  617  0000156c  2022ffff	addi	r2,r1,#-1
  618  00001570  afc20008	sw	8(r30),r2
  619  00001574  70210000	slei	r1,r1,#0
  620  00001578  1020000c	beqz	r1,L18_LF2
  621  0000157c  54000000	nop; delay slot nop
  622  00001580  08000048	j	L16_LF2
  623  00001584  54000000	nop; delay slot nop
  624  00001588          	L18_LF2:
  625  00001588  8fc10000	lw	r1,(r30)
  626  0000158c  20220001	addi	r2,r1,#1
  627  00001590  afc20000	sw	(r30),r2
  628  00001594  8fc20004	lw	r2,4(r30)
  629  00001598  20430001	addi	r3,r2,#1
  630  0000159c  afc30004	sw	4(r30),r3
  631  000015a0  80420000	lb	r2,(r2)
  632  000015a4  a0220000	sb	(r1),r2
  633  000015a8  a3c2fff3	sb	-13(r30),r2
  634  000015ac          	L17_LF2:
  635  000015ac  93c1fff3	lbu	r1,-13(r30)
  636  000015b0  64220000	snei	r2,r1,#0
  637  000015b4  1440000c	bnez	r2,L19_LF2
  638  000015b8  54000000	nop; delay slot nop
  639  000015bc  0800000c	j	L16_LF2
  640  000015c0  54000000	nop; delay slot nop
  641  000015c4          	L19_LF2:
  642  000015c4  0bffffa0	j	L15_LF2
  643  000015c8  54000000	nop; delay slot nop
  644  000015cc          	L16_LF2:
  645  000015cc  8fc1fff4	lw	r1,-12(r30)
  646  000015d0  08000004	j	L14_LF2
  647  000015d4  54000000	nop; delay slot nop
  648  000015d8          	L14_LF2:
  649  000015d8  8fa20000	lw	r2,0(r29)
  650  000015dc  8fa30004	lw	r3,4(r29)
  651  000015e0  8fdffff8	lw	r31,-8(r30)
  652  000015e4  001ee820	add	r29,r0,r30
  653  000015e8  8fdefffc	lw	r30,-4(r30)
  654  000015ec  4be00000	jr	r31
  655  000015f0  54000000	nop
  656  000015f4          	.endproc _dstrncpy
  657  000015f4          	.align 2
  658  000015f4          	.proc _dstrcat
  659  000015f4          	.global _dstrcat
  660  000015f4          	_dstrcat:
  661                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  662  000015f4  afbefffc	sw	-4(r29),r30; push fp
  663  000015f8  001df020	add	r30,r0,r29; fp = sp
  664  000015fc  afbffff8	sw	-8(r29),r31; push ret addr
  665  00001600  2fbd0018	subui	r29,r29,#24; alloc local storage
  666  00001604  afa20000	sw	0(r29),r2
  667  00001608  8fc10000	lw	r1,(r30)
  668  0000160c  afc1fff4	sw	-12(r30),r1
  669  00001610          	L21_LF2:
  670  00001610  8fc10000	lw	r1,(r30)
  671  00001614  90220000	lbu	r2,(r1)
  672  00001618  64410000	snei	r1,r2,#0
  673  0000161c  1420000c	bnez	r1,L23_LF2
  674  00001620  54000000	nop; delay slot nop
  675  00001624  0800001c	j	L22_LF2
  676  00001628  54000000	nop; delay slot nop
  677  0000162c          	L23_LF2:
  678  0000162c  8fc20000	lw	r2,(r30)
  679  00001630  20410001	addi	r1,r2,#1
  680  00001634  00011020	add	r2,r0,r1
  681  00001638  afc20000	sw	(r30),r2
  682  0000163c  0bffffd0	j	L21_LF2
  683  00001640  54000000	nop; delay slot nop
  684  00001644          	L22_LF2:
  685  00001644  23bdfff8	addi	r29,r29,#-8
  686  00001648  001d0820	add	r1,r0,r29
  687  0000164c  8fc20000	lw	r2,(r30)
  688  00001650  ac220000	sw	(r1),r2
  689  00001654  8fc20004	lw	r2,4(r30)
  690  00001658  ac220004	sw	4(r1),r2
  691  0000165c  0ffffe5c	jal	_dstrcpy
  692  00001660  54000000	nop; delay slot nop
  693  00001664  23bd0008	addi	r29,r29,#8
  694  00001668  8fc1fff4	lw	r1,-12(r30)
  695  0000166c  08000004	j	L20_LF2
  696  00001670  54000000	nop; delay slot nop
  697  00001674          	L20_LF2:
  698  00001674  8fa20000	lw	r2,0(r29)
  699  00001678  8fdffff8	lw	r31,-8(r30)
  700  0000167c  001ee820	add	r29,r0,r30
  701  00001680  8fdefffc	lw	r30,-4(r30)
  702  00001684  4be00000	jr	r31
  703  00001688  54000000	nop
  704  0000168c          	.endproc _dstrcat
  705  0000168c          	.align 2
  706  0000168c          	.proc _dstrncmp
  707  0000168c          	.global _dstrncmp
  708  0000168c          	_dstrncmp:
  709                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  710  0000168c  afbefffc	sw	-4(r29),r30; push fp
  711  00001690  001df020	add	r30,r0,r29; fp = sp
  712  00001694  afbffff8	sw	-8(r29),r31; push ret addr
  713  00001698  2fbd0018	subui	r29,r29,#24; alloc local storage
  714  0000169c  afa20000	sw	0(r29),r2
  715  000016a0  afa30004	sw	4(r29),r3
  716  000016a4  54000000	nop
  717  000016a8  20010000	addi	r1,r0,#0
  718  000016ac  afc1fff4	sw	-12(r30),r1
  719  000016b0          	L25_LF2:
  720  000016b0  8fc1fff4	lw	r1,-12(r30)
  721  000016b4  8fc20008	lw	r2,8(r30)
  722  000016b8  0022082a	slt	r1,r1,r2
  723  000016bc  1420000c	bnez	r1,L28_LF2
  724  000016c0  54000000	nop; delay slot nop
  725  000016c4  08000088	j	L26_LF2
  726  000016c8  54000000	nop; delay slot nop
  727  000016cc          	L28_LF2:
  728  000016cc  8fc10004	lw	r1,4(r30)
  729  000016d0  90220000	lbu	r2,(r1)
  730  000016d4  64410000	snei	r1,r2,#0
  731  000016d8  14200018	bnez	r1,L29_LF2
  732  000016dc  54000000	nop; delay slot nop
  733  000016e0  20010000	addi	r1,r0,#0
  734  000016e4  080000d8	j	L24_LF2
  735  000016e8  54000000	nop; delay slot nop
  736  000016ec  08000028	j	L30_LF2
  737  000016f0  54000000	nop; delay slot nop
  738  000016f4          	L29_LF2:
  739  000016f4  8fc10000	lw	r1,(r30)
  740  000016f8  8fc20004	lw	r2,4(r30)
  741  000016fc  90210000	lbu	r1,(r1)
  742  00001700  90420000	lbu	r2,(r2)
  743  00001704  00220829	sne	r1,r1,r2
  744  00001708  1020000c	beqz	r1,L30_LF2
  745  0000170c  54000000	nop; delay slot nop
  746  00001710  0800003c	j	L26_LF2
  747  00001714  54000000	nop; delay slot nop
  748  00001718          	L31_LF2:
  749  00001718          	L30_LF2:
  750  00001718  8fc20000	lw	r2,(r30)
  751  0000171c  20410001	addi	r1,r2,#1
  752  00001720  00011020	add	r2,r0,r1
  753  00001724  afc20000	sw	(r30),r2
  754  00001728  8fc20004	lw	r2,4(r30)
  755  0000172c  20410001	addi	r1,r2,#1
  756  00001730  00011020	add	r2,r0,r1
  757  00001734  afc20004	sw	4(r30),r2
  758  00001738          	L27_LF2:
  759  00001738  8fc2fff4	lw	r2,-12(r30)
  760  0000173c  20410001	addi	r1,r2,#1
  761  00001740  00011020	add	r2,r0,r1
  762  00001744  afc2fff4	sw	-12(r30),r2
  763  00001748  0bffff64	j	L25_LF2
  764  0000174c  54000000	nop; delay slot nop
  765  00001750          	L26_LF2:
  766  00001750  8fc1fff4	lw	r1,-12(r30)
  767  00001754  8fc20008	lw	r2,8(r30)
  768  00001758  00220828	seq	r1,r1,r2
  769  0000175c  10200018	beqz	r1,L32_LF2
  770  00001760  54000000	nop; delay slot nop
  771  00001764  20010000	addi	r1,r0,#0
  772  00001768  08000054	j	L24_LF2
  773  0000176c  54000000	nop; delay slot nop
  774  00001770  0800004c	j	L33_LF2
  775  00001774  54000000	nop; delay slot nop
  776  00001778          	L32_LF2:
  777  00001778  8fc20000	lw	r2,(r30)
  778  0000177c  90410000	lbu	r1,(r2)
  779  00001780  8fc20004	lw	r2,4(r30)
  780  00001784  90430000	lbu	r3,(r2)
  781  00001788  00230822	sub	r1,r1,r3
  782  0000178c  74220000	sgei	r2,r1,#0
  783  00001790  10400020	beqz	r2,L34_LF2
  784  00001794  54000000	nop; delay slot nop
  785  00001798  8fc10000	lw	r1,(r30)
  786  0000179c  8fc20004	lw	r2,4(r30)
  787  000017a0  90210000	lbu	r1,(r1)
  788  000017a4  90420000	lbu	r2,(r2)
  789  000017a8  00220829	sne	r1,r1,r2
  790  000017ac  08000008	j	L35_LF2
  791  000017b0  54000000	nop; delay slot nop
  792  000017b4          	L34_LF2:
  793  000017b4  2001ffff	addi	r1,r0,#-1
  794  000017b8          	L35_LF2:
  795  000017b8  08000004	j	L24_LF2
  796  000017bc  54000000	nop; delay slot nop
  797  000017c0          	L33_LF2:
  798  000017c0          	L24_LF2:
  799  000017c0  8fa20000	lw	r2,0(r29)
  800  000017c4  8fa30004	lw	r3,4(r29)
  801  000017c8  8fdffff8	lw	r31,-8(r30)
  802  000017cc  001ee820	add	r29,r0,r30
  803  000017d0  8fdefffc	lw	r30,-4(r30)
  804  000017d4  4be00000	jr	r31
  805  000017d8  54000000	nop
  806  000017dc          	.endproc _dstrncmp
  807  000017dc          	.align 2
  808  000017dc          	.proc _dstrlen
  809  000017dc          	.global _dstrlen
  810  000017dc          	_dstrlen:
  811                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  812  000017dc  afbefffc	sw	-4(r29),r30; push fp
  813  000017e0  001df020	add	r30,r0,r29; fp = sp
  814  000017e4  afbffff8	sw	-8(r29),r31; push ret addr
  815  000017e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  816  000017ec  afa20000	sw	0(r29),r2
  817  000017f0  20010000	addi	r1,r0,#0
  818  000017f4  afc1fff4	sw	-12(r30),r1
  819  000017f8          	L37_LF2:
  820  000017f8  8fc10000	lw	r1,(r30)
  821  000017fc  20220001	addi	r2,r1,#1
  822  00001800  afc20000	sw	(r30),r2
  823  00001804  90210000	lbu	r1,(r1)
  824  00001808  64220000	snei	r2,r1,#0
  825  0000180c  1440000c	bnez	r2,L39_LF2
  826  00001810  54000000	nop; delay slot nop
  827  00001814  0800001c	j	L38_LF2
  828  00001818  54000000	nop; delay slot nop
  829  0000181c          	L39_LF2:
  830  0000181c  8fc2fff4	lw	r2,-12(r30)
  831  00001820  20410001	addi	r1,r2,#1
  832  00001824  00011020	add	r2,r0,r1
  833  00001828  afc2fff4	sw	-12(r30),r2
  834  0000182c  0bffffc8	j	L37_LF2
  835  00001830  54000000	nop; delay slot nop
  836  00001834          	L38_LF2:
  837  00001834  8fc1fff4	lw	r1,-12(r30)
  838  00001838  08000004	j	L36_LF2
  839  0000183c  54000000	nop; delay slot nop
  840  00001840          	L36_LF2:
  841  00001840  8fa20000	lw	r2,0(r29)
  842  00001844  8fdffff8	lw	r31,-8(r30)
  843  00001848  001ee820	add	r29,r0,r30
  844  0000184c  8fdefffc	lw	r30,-4(r30)
  845  00001850  4be00000	jr	r31
  846  00001854  54000000	nop
  847  00001858          	.endproc _dstrlen
  848  00001858          	.align 2
  849  00001858          	.proc _dstrstr
  850  00001858          	.global _dstrstr
  851  00001858          	_dstrstr:
  852                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  853  00001858  afbefffc	sw	-4(r29),r30; push fp
  854  0000185c  001df020	add	r30,r0,r29; fp = sp
  855  00001860  afbffff8	sw	-8(r29),r31; push ret addr
  856  00001864  2fbd0018	subui	r29,r29,#24; alloc local storage
  857  00001868  afa20000	sw	0(r29),r2
  858  0000186c  23bdfff8	addi	r29,r29,#-8
  859  00001870  001d0820	add	r1,r0,r29
  860  00001874  8fc20004	lw	r2,4(r30)
  861  00001878  ac220000	sw	(r1),r2
  862  0000187c  0fffff5c	jal	_dstrlen
  863  00001880  54000000	nop; delay slot nop
  864  00001884  23bd0008	addi	r29,r29,#8
  865  00001888  afc1fff4	sw	-12(r30),r1
  866  0000188c          	L41_LF2:
  867  0000188c  8fc10000	lw	r1,(r30)
  868  00001890  90220000	lbu	r2,(r1)
  869  00001894  64410000	snei	r1,r2,#0
  870  00001898  1420000c	bnez	r1,L43_LF2
  871  0000189c  54000000	nop; delay slot nop
  872  000018a0  08000060	j	L42_LF2
  873  000018a4  54000000	nop; delay slot nop
  874  000018a8          	L43_LF2:
  875  000018a8  23bdfff0	addi	r29,r29,#-16
  876  000018ac  001d0820	add	r1,r0,r29
  877  000018b0  8fc20000	lw	r2,(r30)
  878  000018b4  ac220000	sw	(r1),r2
  879  000018b8  8fc20004	lw	r2,4(r30)
  880  000018bc  ac220004	sw	4(r1),r2
  881  000018c0  8fc2fff4	lw	r2,-12(r30)
  882  000018c4  ac220008	sw	8(r1),r2
  883  000018c8  0ffffdc0	jal	_dstrncmp
  884  000018cc  54000000	nop; delay slot nop
  885  000018d0  23bd0010	addi	r29,r29,#16
  886  000018d4  64220000	snei	r2,r1,#0
  887  000018d8  14400010	bnez	r2,L44_LF2
  888  000018dc  54000000	nop; delay slot nop
  889  000018e0  8fc10000	lw	r1,(r30)
  890  000018e4  08000028	j	L40_LF2
  891  000018e8  54000000	nop; delay slot nop
  892  000018ec          	L44_LF2:
  893  000018ec  8fc20000	lw	r2,(r30)
  894  000018f0  20410001	addi	r1,r2,#1
  895  000018f4  00011020	add	r2,r0,r1
  896  000018f8  afc20000	sw	(r30),r2
  897  000018fc  0bffff8c	j	L41_LF2
  898  00001900  54000000	nop; delay slot nop
  899  00001904          	L42_LF2:
  900  00001904  20010000	addi	r1,r0,#0
  901  00001908  08000004	j	L40_LF2
  902  0000190c  54000000	nop; delay slot nop
  903  00001910          	L40_LF2:
  904  00001910  8fa20000	lw	r2,0(r29)
  905  00001914  8fdffff8	lw	r31,-8(r30)
  906  00001918  001ee820	add	r29,r0,r30
  907  0000191c  8fdefffc	lw	r30,-4(r30)
  908  00001920  4be00000	jr	r31
  909  00001924  54000000	nop
  910  00001928          	.endproc _dstrstr
  911  00001928          	.align 2
  912  00001928          	.proc _dmindex
  913  00001928          	.global _dmindex
  914  00001928          	_dmindex:
  915                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  916  00001928  afbefffc	sw	-4(r29),r30; push fp
  917  0000192c  001df020	add	r30,r0,r29; fp = sp
  918  00001930  afbffff8	sw	-8(r29),r31; push ret addr
  919  00001934  2fbd0018	subui	r29,r29,#24; alloc local storage
  920  00001938  afa20000	sw	0(r29),r2
  921  0000193c  54000000	nop
  922  00001940          	L46_LF2:
  923  00001940  8fc10000	lw	r1,(r30)
  924  00001944  90220000	lbu	r2,(r1)
  925  00001948  64410000	snei	r1,r2,#0
  926  0000194c  1420000c	bnez	r1,L48_LF2
  927  00001950  54000000	nop; delay slot nop
  928  00001954  08000070	j	L47_LF2
  929  00001958  54000000	nop; delay slot nop
  930  0000195c          	L48_LF2:
  931  0000195c  8fc10004	lw	r1,4(r30)
  932  00001960  afc1fff4	sw	-12(r30),r1
  933  00001964          	L49_LF2:
  934  00001964  8fc1fff4	lw	r1,-12(r30)
  935  00001968  90220000	lbu	r2,(r1)
  936  0000196c  64410000	snei	r1,r2,#0
  937  00001970  1420000c	bnez	r1,L52_LF2
  938  00001974  54000000	nop; delay slot nop
  939  00001978  08000044	j	L50_LF2
  940  0000197c  54000000	nop; delay slot nop
  941  00001980          	L52_LF2:
  942  00001980  8fc10000	lw	r1,(r30)
  943  00001984  8fc2fff4	lw	r2,-12(r30)
  944  00001988  90210000	lbu	r1,(r1)
  945  0000198c  90420000	lbu	r2,(r2)
  946  00001990  00220828	seq	r1,r1,r2
  947  00001994  10200010	beqz	r1,L51_LF2
  948  00001998  54000000	nop; delay slot nop
  949  0000199c  8fc10000	lw	r1,(r30)
  950  000019a0  08000030	j	L45_LF2
  951  000019a4  54000000	nop; delay slot nop
  952  000019a8          	L53_LF2:
  953  000019a8          	L51_LF2:
  954  000019a8  8fc2fff4	lw	r2,-12(r30)
  955  000019ac  20410001	addi	r1,r2,#1
  956  000019b0  00011020	add	r2,r0,r1
  957  000019b4  afc2fff4	sw	-12(r30),r2
  958  000019b8  0bffffa8	j	L49_LF2
  959  000019bc  54000000	nop; delay slot nop
  960  000019c0          	L50_LF2:
  961  000019c0  0bffff7c	j	L46_LF2
  962  000019c4  54000000	nop; delay slot nop
  963  000019c8          	L47_LF2:
  964  000019c8  20010000	addi	r1,r0,#0
  965  000019cc  08000004	j	L45_LF2
  966  000019d0  54000000	nop; delay slot nop
  967  000019d4          	L45_LF2:
  968  000019d4  8fa20000	lw	r2,0(r29)
  969  000019d8  8fdffff8	lw	r31,-8(r30)
  970  000019dc  001ee820	add	r29,r0,r30
  971  000019e0  8fdefffc	lw	r30,-4(r30)
  972  000019e4  4be00000	jr	r31
  973  000019e8  54000000	nop
  974  000019ec          	.endproc _dmindex
  975  000019ec          	.align 2
  976  000019ec          	.proc _dindex
  977  000019ec          	.global _dindex
  978  000019ec          	_dindex:
  979                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  980  000019ec  afbefffc	sw	-4(r29),r30; push fp
  981  000019f0  001df020	add	r30,r0,r29; fp = sp
  982  000019f4  afbffff8	sw	-8(r29),r31; push ret addr
  983  000019f8  2fbd0010	subui	r29,r29,#16; alloc local storage
  984  000019fc  afa20000	sw	0(r29),r2
  985  00001a00  54000000	nop
  986  00001a04          	L55_LF2:
  987  00001a04  8fc10000	lw	r1,(r30)
  988  00001a08  90220000	lbu	r2,(r1)
  989  00001a0c  64410000	snei	r1,r2,#0
  990  00001a10  1420000c	bnez	r1,L57_LF2
  991  00001a14  54000000	nop; delay slot nop
  992  00001a18  08000040	j	L56_LF2
  993  00001a1c  54000000	nop; delay slot nop
  994  00001a20          	L57_LF2:
  995  00001a20  8fc10000	lw	r1,(r30)
  996  00001a24  90220000	lbu	r2,(r1)
  997  00001a28  8fc10004	lw	r1,4(r30)
  998  00001a2c  00411028	seq	r2,r2,r1
  999  00001a30  10400010	beqz	r2,L58_LF2
 1000  00001a34  54000000	nop; delay slot nop
 1001  00001a38  8fc10000	lw	r1,(r30)
 1002  00001a3c  08000028	j	L54_LF2
 1003  00001a40  54000000	nop; delay slot nop
 1004  00001a44          	L58_LF2:
 1005  00001a44  8fc20000	lw	r2,(r30)
 1006  00001a48  20410001	addi	r1,r2,#1
 1007  00001a4c  00011020	add	r2,r0,r1
 1008  00001a50  afc20000	sw	(r30),r2
 1009  00001a54  0bffffac	j	L55_LF2
 1010  00001a58  54000000	nop; delay slot nop
 1011  00001a5c          	L56_LF2:
 1012  00001a5c  20010000	addi	r1,r0,#0
 1013  00001a60  08000004	j	L54_LF2
 1014  00001a64  54000000	nop; delay slot nop
 1015  00001a68          	L54_LF2:
 1016  00001a68  8fa20000	lw	r2,0(r29)
 1017  00001a6c  8fdffff8	lw	r31,-8(r30)
 1018  00001a70  001ee820	add	r29,r0,r30
 1019  00001a74  8fdefffc	lw	r30,-4(r30)
 1020  00001a78  4be00000	jr	r31
 1021  00001a7c  54000000	nop
 1022  00001a80          	.endproc _dindex
 1023  00001a80          	.align 2
 1024  00001a80          	.proc _ditoa
 1025  00001a80          	.global _ditoa
 1026  00001a80          	_ditoa:
 1027                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1028  00001a80  afbefffc	sw	-4(r29),r30; push fp
 1029  00001a84  001df020	add	r30,r0,r29; fp = sp
 1030  00001a88  afbffff8	sw	-8(r29),r31; push ret addr
 1031  00001a8c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1032  00001a90  afa20000	sw	0(r29),r2
 1033  00001a94  afa30004	sw	4(r29),r3
 1034  00001a98  8fc10000	lw	r1,(r30)
 1035  00001a9c  68220000	slti	r2,r1,#0
 1036  00001aa0  1040002c	beqz	r2,L60_LF2
 1037  00001aa4  54000000	nop; delay slot nop
 1038  00001aa8  8fc10004	lw	r1,4(r30)
 1039  00001aac  20220001	addi	r2,r1,#1
 1040  00001ab0  afc20004	sw	4(r30),r2
 1041  00001ab4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1042  00001ab8  a0220000	sb	(r1),r2
 1043  00001abc  8fc10000	lw	r1,(r30)
 1044  00001ac0  00011022	sub	r2,r0,r1
 1045  00001ac4  afc20000	sw	(r30),r2
 1046  00001ac8  08000118	j	L61_LF2
 1047  00001acc  54000000	nop; delay slot nop
 1048  00001ad0          	L60_LF2:
 1049  00001ad0  8fc10000	lw	r1,(r30)
 1050  00001ad4  64220000	snei	r2,r1,#0
 1051  00001ad8  14400020	bnez	r2,L62_LF2
 1052  00001adc  54000000	nop; delay slot nop
 1053  00001ae0  8fc10004	lw	r1,4(r30)
 1054  00001ae4  20220001	addi	r2,r1,#1
 1055  00001ae8  afc20004	sw	4(r30),r2
 1056  00001aec  20020030	addi	r2,r0,(#0x30)&0xff
 1057  00001af0  a0220000	sb	(r1),r2
 1058  00001af4  080000ec	j	L61_LF2
 1059  00001af8  54000000	nop; delay slot nop
 1060  00001afc          	L62_LF2:
 1061  00001afc  20010001	addi	r1,r0,#1
 1062  00001b00  afc1fff4	sw	-12(r30),r1
 1063  00001b04          	L64_LF2:
 1064  00001b04  8fc1fff4	lw	r1,-12(r30)
 1065  00001b08  8fc20000	lw	r2,(r30)
 1066  00001b0c  0022082c	sle	r1,r1,r2
 1067  00001b10  1420000c	bnez	r1,L66_LF2
 1068  00001b14  54000000	nop; delay slot nop
 1069  00001b18  08000024	j	L65_LF2
 1070  00001b1c  54000000	nop; delay slot nop
 1071  00001b20          	L67_LF2:
 1072  00001b20          	L66_LF2:
 1073  00001b20  8fc1fff4	lw	r1,-12(r30)
 1074  00001b24  00011820	add	r3,r0,r1
 1075  00001b28  50620002	slli	r2,r3,#0x2
 1076  00001b2c  00411020	add	r2,r2,r1
 1077  00001b30  50410001	slli	r1,r2,#0x1
 1078  00001b34  afc1fff4	sw	-12(r30),r1
 1079  00001b38  0bffffc8	j	L64_LF2
 1080  00001b3c  54000000	nop; delay slot nop
 1081  00001b40          	L65_LF2:
 1082  00001b40  54000000	nop
 1083  00001b44          	L68_LF2:
 1084  00001b44  8fc1fff4	lw	r1,-12(r30)
 1085  00001b48  2002000a	addi	r2,r0,#10
 1086  00001b4c  00200035	movi2fp	f0,r1
 1087  00001b50  00400835	movi2fp	f1,r2
 1088  00001b54  0401000f	div	f0,f0,f1
 1089  00001b58  00000834	movfp2i	r1,f0
 1090  00001b5c  afc1fff4	sw	-12(r30),r1
 1091  00001b60  8fc10004	lw	r1,4(r30)
 1092  00001b64  20220001	addi	r2,r1,#1
 1093  00001b68  afc20004	sw	4(r30),r2
 1094  00001b6c  8fc20000	lw	r2,(r30)
 1095  00001b70  8fc3fff4	lw	r3,-12(r30)
 1096  00001b74  00400035	movi2fp	f0,r2
 1097  00001b78  00600835	movi2fp	f1,r3
 1098  00001b7c  0401000f	div	f0,f0,f1
 1099  00001b80  00001034	movfp2i	r2,f0
 1100  00001b84  00021820	add	r3,r0,r2
 1101  00001b88  20620030	addi	r2,r3,#48
 1102  00001b8c  a0220000	sb	(r1),r2
 1103  00001b90  8fc10000	lw	r1,(r30)
 1104  00001b94  8fc3fff4	lw	r3,-12(r30)
 1105  00001b98  00200035	movi2fp	f0,r1
 1106  00001b9c  00600835	movi2fp	f1,r3
 1107  00001ba0  0401000f	div	f0,f0,f1
 1108  00001ba4  00001034	movfp2i	r2,f0
 1109  00001ba8  8fc3fff4	lw	r3,-12(r30)
 1110  00001bac  00400035	movi2fp	f0,r2
 1111  00001bb0  00600835	movi2fp	f1,r3
 1112  00001bb4  0401000e	mult	f0,f0,f1
 1113  00001bb8  00001034	movfp2i	r2,f0
 1114  00001bbc  00220822	sub	r1,r1,r2
 1115  00001bc0  afc10000	sw	(r30),r1
 1116  00001bc4          	L70_LF2:
 1117  00001bc4  8fc1fff4	lw	r1,-12(r30)
 1118  00001bc8  6c220001	sgti	r2,r1,#1
 1119  00001bcc  1440000c	bnez	r2,L71_LF2
 1120  00001bd0  54000000	nop; delay slot nop
 1121  00001bd4  0800000c	j	L61_LF2
 1122  00001bd8  54000000	nop; delay slot nop
 1123  00001bdc          	L71_LF2:
 1124  00001bdc  0bffff64	j	L68_LF2
 1125  00001be0  54000000	nop; delay slot nop
 1126  00001be4          	L69_LF2:
 1127  00001be4          	L63_LF2:
 1128  00001be4          	L61_LF2:
 1129  00001be4  8fc10004	lw	r1,4(r30)
 1130  00001be8  20020000	addi	r2,r0,(#0x0)&0xff
 1131  00001bec  a0220000	sb	(r1),r2
 1132  00001bf0          	L59_LF2:
 1133  00001bf0  8fa20000	lw	r2,0(r29)
 1134  00001bf4  8fa30004	lw	r3,4(r29)
 1135  00001bf8  8fdffff8	lw	r31,-8(r30)
 1136  00001bfc  001ee820	add	r29,r0,r30
 1137  00001c00  8fdefffc	lw	r30,-4(r30)
 1138  00001c04  4be00000	jr	r31
 1139  00001c08  54000000	nop
 1140  00001c0c          	.endproc _ditoa
 1141  00001c0c          	.align 2
 1142  00001c0c          	.proc _dstrtol
 1143  00001c0c          	.global _dstrtol
 1144  00001c0c          	_dstrtol:
 1145                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1146  00001c0c  afbefffc	sw	-4(r29),r30; push fp
 1147  00001c10  001df020	add	r30,r0,r29; fp = sp
 1148  00001c14  afbffff8	sw	-8(r29),r31; push ret addr
 1149  00001c18  2fbd0020	subui	r29,r29,#32; alloc local storage
 1150  00001c1c  afa20000	sw	0(r29),r2
 1151  00001c20  20010000	addi	r1,r0,#0
 1152  00001c24  afc1fff4	sw	-12(r30),r1
 1153  00001c28          	L73_LF2:
 1154  00001c28  8fc10000	lw	r1,(r30)
 1155  00001c2c  90220000	lbu	r2,(r1)
 1156  00001c30  60410020	seqi	r1,r2,#32
 1157  00001c34  14200034	bnez	r1,L75_LF2
 1158  00001c38  54000000	nop; delay slot nop
 1159  00001c3c  8fc10000	lw	r1,(r30)
 1160  00001c40  90220000	lbu	r2,(r1)
 1161  00001c44  60410009	seqi	r1,r2,#9
 1162  00001c48  14200020	bnez	r1,L75_LF2
 1163  00001c4c  54000000	nop; delay slot nop
 1164  00001c50  8fc10000	lw	r1,(r30)
 1165  00001c54  90220000	lbu	r2,(r1)
 1166  00001c58  6041000a	seqi	r1,r2,#10
 1167  00001c5c  1420000c	bnez	r1,L75_LF2
 1168  00001c60  54000000	nop; delay slot nop
 1169  00001c64  0800001c	j	L74_LF2
 1170  00001c68  54000000	nop; delay slot nop
 1171  00001c6c          	L75_LF2:
 1172  00001c6c  8fc20000	lw	r2,(r30)
 1173  00001c70  20410001	addi	r1,r2,#1
 1174  00001c74  00011020	add	r2,r0,r1
 1175  00001c78  afc20000	sw	(r30),r2
 1176  00001c7c  0bffffa8	j	L73_LF2
 1177  00001c80  54000000	nop; delay slot nop
 1178  00001c84          	L74_LF2:
 1179  00001c84  8fc10004	lw	r1,4(r30)
 1180  00001c88  64220000	snei	r2,r1,#0
 1181  00001c8c  10400010	beqz	r2,L76_LF2
 1182  00001c90  54000000	nop; delay slot nop
 1183  00001c94  8fc10004	lw	r1,4(r30)
 1184  00001c98  8fc20000	lw	r2,(r30)
 1185  00001c9c  ac220000	sw	(r1),r2
 1186  00001ca0          	L76_LF2:
 1187  00001ca0  8fc10000	lw	r1,(r30)
 1188  00001ca4  90220000	lbu	r2,(r1)
 1189  00001ca8  64410000	snei	r1,r2,#0
 1190  00001cac  14200010	bnez	r1,L77_LF2
 1191  00001cb0  54000000	nop; delay slot nop
 1192  00001cb4  8fc1fff4	lw	r1,-12(r30)
 1193  00001cb8  08000294	j	L72_LF2
 1194  00001cbc  54000000	nop; delay slot nop
 1195  00001cc0          	L77_LF2:
 1196  00001cc0  8fc10000	lw	r1,(r30)
 1197  00001cc4  90220000	lbu	r2,(r1)
 1198  00001cc8  6041002d	seqi	r1,r2,#45
 1199  00001ccc  10200024	beqz	r1,L78_LF2
 1200  00001cd0  54000000	nop; delay slot nop
 1201  00001cd4  2001ffff	addi	r1,r0,#-1
 1202  00001cd8  afc1ffec	sw	-20(r30),r1
 1203  00001cdc  8fc20000	lw	r2,(r30)
 1204  00001ce0  20410001	addi	r1,r2,#1
 1205  00001ce4  00011020	add	r2,r0,r1
 1206  00001ce8  afc20000	sw	(r30),r2
 1207  00001cec  0800000c	j	L79_LF2
 1208  00001cf0  54000000	nop; delay slot nop
 1209  00001cf4          	L78_LF2:
 1210  00001cf4  20010001	addi	r1,r0,#1
 1211  00001cf8  afc1ffec	sw	-20(r30),r1
 1212  00001cfc          	L79_LF2:
 1213  00001cfc  8fc10008	lw	r1,8(r30)
 1214  00001d00  64220000	snei	r2,r1,#0
 1215  00001d04  14400090	bnez	r2,L80_LF2
 1216  00001d08  54000000	nop; delay slot nop
 1217  00001d0c  8fc10000	lw	r1,(r30)
 1218  00001d10  90220000	lbu	r2,(r1)
 1219  00001d14  60410030	seqi	r1,r2,#48
 1220  00001d18  10200074	beqz	r1,L81_LF2
 1221  00001d1c  54000000	nop; delay slot nop
 1222  00001d20  8fc20000	lw	r2,(r30)
 1223  00001d24  20410001	addi	r1,r2,#1
 1224  00001d28  00011020	add	r2,r0,r1
 1225  00001d2c  afc20000	sw	(r30),r2
 1226  00001d30  8fc10000	lw	r1,(r30)
 1227  00001d34  90220000	lbu	r2,(r1)
 1228  00001d38  60410078	seqi	r1,r2,#120
 1229  00001d3c  14200020	bnez	r1,L83_LF2
 1230  00001d40  54000000	nop; delay slot nop
 1231  00001d44  8fc10000	lw	r1,(r30)
 1232  00001d48  90220000	lbu	r2,(r1)
 1233  00001d4c  60410058	seqi	r1,r2,#88
 1234  00001d50  1420000c	bnez	r1,L83_LF2
 1235  00001d54  54000000	nop; delay slot nop
 1236  00001d58  08000024	j	L82_LF2
 1237  00001d5c  54000000	nop; delay slot nop
 1238  00001d60          	L83_LF2:
 1239  00001d60  20010010	addi	r1,r0,#16
 1240  00001d64  afc10008	sw	8(r30),r1
 1241  00001d68  8fc20000	lw	r2,(r30)
 1242  00001d6c  20410001	addi	r1,r2,#1
 1243  00001d70  00011020	add	r2,r0,r1
 1244  00001d74  afc20000	sw	(r30),r2
 1245  00001d78  0800000c	j	L84_LF2
 1246  00001d7c  54000000	nop; delay slot nop
 1247  00001d80          	L82_LF2:
 1248  00001d80  20010008	addi	r1,r0,#8
 1249  00001d84  afc10008	sw	8(r30),r1
 1250  00001d88          	L84_LF2:
 1251  00001d88  0800000c	j	L80_LF2
 1252  00001d8c  54000000	nop; delay slot nop
 1253  00001d90          	L81_LF2:
 1254  00001d90  2001000a	addi	r1,r0,#10
 1255  00001d94  afc10008	sw	8(r30),r1
 1256  00001d98          	L85_LF2:
 1257  00001d98          	L80_LF2:
 1258  00001d98  8fc10008	lw	r1,8(r30)
 1259  00001d9c  70220000	slei	r2,r1,#0
 1260  00001da0  1440001c	bnez	r2,L87_LF2
 1261  00001da4  54000000	nop; delay slot nop
 1262  00001da8  8fc10008	lw	r1,8(r30)
 1263  00001dac  6c220010	sgti	r2,r1,#16
 1264  00001db0  1440000c	bnez	r2,L87_LF2
 1265  00001db4  54000000	nop; delay slot nop
 1266  00001db8  08000010	j	L86_LF2
 1267  00001dbc  54000000	nop; delay slot nop
 1268  00001dc0          	L87_LF2:
 1269  00001dc0  8fc1fff4	lw	r1,-12(r30)
 1270  00001dc4  08000188	j	L72_LF2
 1271  00001dc8  54000000	nop; delay slot nop
 1272  00001dcc          	L86_LF2:
 1273  00001dcc  54000000	nop
 1274  00001dd0          	L88_LF2:
 1275  00001dd0  8fc10000	lw	r1,(r30)
 1276  00001dd4  90220000	lbu	r2,(r1)
 1277  00001dd8  6c41002f	sgtui	r1,r2,#47
 1278  00001ddc  10200030	beqz	r1,L91_LF2
 1279  00001de0  54000000	nop; delay slot nop
 1280  00001de4  8fc10000	lw	r1,(r30)
 1281  00001de8  90220000	lbu	r2,(r1)
 1282  00001dec  70410039	sleui	r1,r2,#57
 1283  00001df0  1020001c	beqz	r1,L91_LF2
 1284  00001df4  54000000	nop; delay slot nop
 1285  00001df8  8fc10000	lw	r1,(r30)
 1286  00001dfc  90220000	lbu	r2,(r1)
 1287  00001e00  2041ffd0	addi	r1,r2,#-48
 1288  00001e04  afc1fff0	sw	-16(r30),r1
 1289  00001e08  0800008c	j	L92_LF2
 1290  00001e0c  54000000	nop; delay slot nop
 1291  00001e10          	L91_LF2:
 1292  00001e10  8fc10000	lw	r1,(r30)
 1293  00001e14  90220000	lbu	r2,(r1)
 1294  00001e18  6c410060	sgtui	r1,r2,#96
 1295  00001e1c  10200030	beqz	r1,L93_LF2
 1296  00001e20  54000000	nop; delay slot nop
 1297  00001e24  8fc10000	lw	r1,(r30)
 1298  00001e28  90220000	lbu	r2,(r1)
 1299  00001e2c  7041007a	sleui	r1,r2,#122
 1300  00001e30  1020001c	beqz	r1,L93_LF2
 1301  00001e34  54000000	nop; delay slot nop
 1302  00001e38  8fc10000	lw	r1,(r30)
 1303  00001e3c  90220000	lbu	r2,(r1)
 1304  00001e40  2041ffa9	addi	r1,r2,#-87
 1305  00001e44  afc1fff0	sw	-16(r30),r1
 1306  00001e48  0800004c	j	L92_LF2
 1307  00001e4c  54000000	nop; delay slot nop
 1308  00001e50          	L93_LF2:
 1309  00001e50  8fc10000	lw	r1,(r30)
 1310  00001e54  90220000	lbu	r2,(r1)
 1311  00001e58  6c410040	sgtui	r1,r2,#64
 1312  00001e5c  10200030	beqz	r1,L95_LF2
 1313  00001e60  54000000	nop; delay slot nop
 1314  00001e64  8fc10000	lw	r1,(r30)
 1315  00001e68  90220000	lbu	r2,(r1)
 1316  00001e6c  7041005a	sleui	r1,r2,#90
 1317  00001e70  1020001c	beqz	r1,L95_LF2
 1318  00001e74  54000000	nop; delay slot nop
 1319  00001e78  8fc10000	lw	r1,(r30)
 1320  00001e7c  90220000	lbu	r2,(r1)
 1321  00001e80  2041ffc9	addi	r1,r2,#-55
 1322  00001e84  afc1fff0	sw	-16(r30),r1
 1323  00001e88  0800000c	j	L92_LF2
 1324  00001e8c  54000000	nop; delay slot nop
 1325  00001e90          	L95_LF2:
 1326  00001e90  200103e8	addi	r1,r0,#1000
 1327  00001e94  afc1fff0	sw	-16(r30),r1
 1328  00001e98          	L96_LF2:
 1329  00001e98          	L94_LF2:
 1330  00001e98          	L92_LF2:
 1331  00001e98  8fc1fff0	lw	r1,-16(r30)
 1332  00001e9c  8fc20008	lw	r2,8(r30)
 1333  00001ea0  0022082a	slt	r1,r1,r2
 1334  00001ea4  10200040	beqz	r1,L90_LF2
 1335  00001ea8  54000000	nop; delay slot nop
 1336  00001eac  8fc1fff4	lw	r1,-12(r30)
 1337  00001eb0  8fc20008	lw	r2,8(r30)
 1338  00001eb4  00200035	movi2fp	f0,r1
 1339  00001eb8  00400835	movi2fp	f1,r2
 1340  00001ebc  0401000e	mult	f0,f0,f1
 1341  00001ec0  00000834	movfp2i	r1,f0
 1342  00001ec4  afc1fff4	sw	-12(r30),r1
 1343  00001ec8  8fc1fff4	lw	r1,-12(r30)
 1344  00001ecc  8fc2fff0	lw	r2,-16(r30)
 1345  00001ed0  00220820	add	r1,r1,r2
 1346  00001ed4  afc1fff4	sw	-12(r30),r1
 1347  00001ed8  8fc20000	lw	r2,(r30)
 1348  00001edc  20410001	addi	r1,r2,#1
 1349  00001ee0  00011020	add	r2,r0,r1
 1350  00001ee4  afc20000	sw	(r30),r2
 1351  00001ee8          	L97_LF2:
 1352  00001ee8          	L90_LF2:
 1353  00001ee8  8fc1fff0	lw	r1,-16(r30)
 1354  00001eec  8fc20008	lw	r2,8(r30)
 1355  00001ef0  0022082a	slt	r1,r1,r2
 1356  00001ef4  1420000c	bnez	r1,L98_LF2
 1357  00001ef8  54000000	nop; delay slot nop
 1358  00001efc  0800000c	j	L89_LF2
 1359  00001f00  54000000	nop; delay slot nop
 1360  00001f04          	L98_LF2:
 1361  00001f04  0bfffec8	j	L88_LF2
 1362  00001f08  54000000	nop; delay slot nop
 1363  00001f0c          	L89_LF2:
 1364  00001f0c  8fc10004	lw	r1,4(r30)
 1365  00001f10  64220000	snei	r2,r1,#0
 1366  00001f14  10400010	beqz	r2,L99_LF2
 1367  00001f18  54000000	nop; delay slot nop
 1368  00001f1c  8fc10004	lw	r1,4(r30)
 1369  00001f20  8fc20000	lw	r2,(r30)
 1370  00001f24  ac220000	sw	(r1),r2
 1371  00001f28          	L99_LF2:
 1372  00001f28  8fc1fff4	lw	r1,-12(r30)
 1373  00001f2c  8fc2ffec	lw	r2,-20(r30)
 1374  00001f30  00200035	movi2fp	f0,r1
 1375  00001f34  00400835	movi2fp	f1,r2
 1376  00001f38  0401000e	mult	f0,f0,f1
 1377  00001f3c  00000834	movfp2i	r1,f0
 1378  00001f40  afc1fff4	sw	-12(r30),r1
 1379  00001f44  8fc1fff4	lw	r1,-12(r30)
 1380  00001f48  08000004	j	L72_LF2
 1381  00001f4c  54000000	nop; delay slot nop
 1382  00001f50          	L72_LF2:
 1383  00001f50  8fa20000	lw	r2,0(r29)
 1384  00001f54  8fdffff8	lw	r31,-8(r30)
 1385  00001f58  001ee820	add	r29,r0,r30
 1386  00001f5c  8fdefffc	lw	r30,-4(r30)
 1387  00001f60  4be00000	jr	r31
 1388  00001f64  54000000	nop
 1389  00001f68          	.endproc _dstrtol
 1390  00001f68          	.align 2
 1391  00001f68          	.proc _bcopy
 1392  00001f68          	.global _bcopy
 1393  00001f68          	_bcopy:
 1394                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1395  00001f68  afbefffc	sw	-4(r29),r30; push fp
 1396  00001f6c  001df020	add	r30,r0,r29; fp = sp
 1397  00001f70  afbffff8	sw	-8(r29),r31; push ret addr
 1398  00001f74  2fbd0010	subui	r29,r29,#16; alloc local storage
 1399  00001f78  afa20000	sw	0(r29),r2
 1400  00001f7c  afa30004	sw	4(r29),r3
 1401  00001f80  54000000	nop
 1402  00001f84          	L101_LF2:
 1403  00001f84  8fc10008	lw	r1,8(r30)
 1404  00001f88  2022ffff	addi	r2,r1,#-1
 1405  00001f8c  afc20008	sw	8(r30),r2
 1406  00001f90  6c210000	sgti	r1,r1,#0
 1407  00001f94  1420000c	bnez	r1,L103_LF2
 1408  00001f98  54000000	nop; delay slot nop
 1409  00001f9c  0800002c	j	L102_LF2
 1410  00001fa0  54000000	nop; delay slot nop
 1411  00001fa4          	L103_LF2:
 1412  00001fa4  8fc10004	lw	r1,4(r30)
 1413  00001fa8  20220001	addi	r2,r1,#1
 1414  00001fac  afc20004	sw	4(r30),r2
 1415  00001fb0  8fc20000	lw	r2,(r30)
 1416  00001fb4  20430001	addi	r3,r2,#1
 1417  00001fb8  afc30000	sw	(r30),r3
 1418  00001fbc  80420000	lb	r2,(r2)
 1419  00001fc0  a0220000	sb	(r1),r2
 1420  00001fc4  0bffffbc	j	L101_LF2
 1421  00001fc8  54000000	nop; delay slot nop
 1422  00001fcc          	L102_LF2:
 1423  00001fcc          	L100_LF2:
 1424  00001fcc  8fa20000	lw	r2,0(r29)
 1425  00001fd0  8fa30004	lw	r3,4(r29)
 1426  00001fd4  8fdffff8	lw	r31,-8(r30)
 1427  00001fd8  001ee820	add	r29,r0,r30
 1428  00001fdc  8fdefffc	lw	r30,-4(r30)
 1429  00001fe0  4be00000	jr	r31
 1430  00001fe4  54000000	nop
 1431  00001fe8          	.endproc _bcopy
 1432  00001fe8          	.align 2
 1433  00001fe8          	.proc _bzero
 1434  00001fe8          	.global _bzero
 1435  00001fe8          	_bzero:
 1436                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1437  00001fe8  afbefffc	sw	-4(r29),r30; push fp
 1438  00001fec  001df020	add	r30,r0,r29; fp = sp
 1439  00001ff0  afbffff8	sw	-8(r29),r31; push ret addr
 1440  00001ff4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1441  00001ff8  afa20000	sw	0(r29),r2
 1442  00001ffc  54000000	nop
 1443  00002000          	L105_LF2:
 1444  00002000  8fc10004	lw	r1,4(r30)
 1445  00002004  2022ffff	addi	r2,r1,#-1
 1446  00002008  afc20004	sw	4(r30),r2
 1447  0000200c  6c210000	sgti	r1,r1,#0
 1448  00002010  1420000c	bnez	r1,L107_LF2
 1449  00002014  54000000	nop; delay slot nop
 1450  00002018  08000020	j	L106_LF2
 1451  0000201c  54000000	nop; delay slot nop
 1452  00002020          	L107_LF2:
 1453  00002020  8fc10000	lw	r1,(r30)
 1454  00002024  20220001	addi	r2,r1,#1
 1455  00002028  afc20000	sw	(r30),r2
 1456  0000202c  20020000	addi	r2,r0,(#0x0)&0xff
 1457  00002030  a0220000	sb	(r1),r2
 1458  00002034  0bffffc8	j	L105_LF2
 1459  00002038  54000000	nop; delay slot nop
 1460  0000203c          	L106_LF2:
 1461  0000203c          	L104_LF2:
 1462  0000203c  8fa20000	lw	r2,0(r29)
 1463  00002040  8fdffff8	lw	r31,-8(r30)
 1464  00002044  001ee820	add	r29,r0,r30
 1465  00002048  8fdefffc	lw	r30,-4(r30)
 1466  0000204c  4be00000	jr	r31
 1467  00002050  54000000	nop
 1468  00002054          	.endproc _bzero
 1469  00002054          	.align 2
 1470  00002054          	.proc _min
 1471  00002054          	.global _min
 1472  00002054          	_min:
 1473                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1474  00002054  afbefffc	sw	-4(r29),r30; push fp
 1475  00002058  001df020	add	r30,r0,r29; fp = sp
 1476  0000205c  afbffff8	sw	-8(r29),r31; push ret addr
 1477  00002060  2fbd0010	subui	r29,r29,#16; alloc local storage
 1478  00002064  afa20000	sw	0(r29),r2
 1479  00002068  afa30004	sw	4(r29),r3
 1480  0000206c  8fc10000	lw	r1,(r30)
 1481  00002070  8fc20004	lw	r2,4(r30)
 1482  00002074  0022182c	sle	r3,r1,r2
 1483  00002078  14600008	bnez	r3,L109_LF2
 1484  0000207c  54000000	nop; delay slot nop
 1485  00002080  8fc10004	lw	r1,4(r30)
 1486  00002084          	L109_LF2:
 1487  00002084  08000004	j	L108_LF2
 1488  00002088  54000000	nop; delay slot nop
 1489  0000208c          	L108_LF2:
 1490  0000208c  8fa20000	lw	r2,0(r29)
 1491  00002090  8fa30004	lw	r3,4(r29)
 1492  00002094  8fdffff8	lw	r31,-8(r30)
 1493  00002098  001ee820	add	r29,r0,r30
 1494  0000209c  8fdefffc	lw	r30,-4(r30)
 1495  000020a0  4be00000	jr	r31
 1496  000020a4  54000000	nop
 1497  000020a8          	.endproc _min
 1498  000020a8          	.align 2
 1499  000020a8          	.proc _max
 1500  000020a8          	.global _max
 1501  000020a8          	_max:
 1502                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1503  000020a8  afbefffc	sw	-4(r29),r30; push fp
 1504  000020ac  001df020	add	r30,r0,r29; fp = sp
 1505  000020b0  afbffff8	sw	-8(r29),r31; push ret addr
 1506  000020b4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1507  000020b8  afa20000	sw	0(r29),r2
 1508  000020bc  afa30004	sw	4(r29),r3
 1509  000020c0  8fc10000	lw	r1,(r30)
 1510  000020c4  8fc20004	lw	r2,4(r30)
 1511  000020c8  0022182d	sge	r3,r1,r2
 1512  000020cc  14600008	bnez	r3,L111_LF2
 1513  000020d0  54000000	nop; delay slot nop
 1514  000020d4  8fc10004	lw	r1,4(r30)
 1515  000020d8          	L111_LF2:
 1516  000020d8  08000004	j	L110_LF2
 1517  000020dc  54000000	nop; delay slot nop
 1518  000020e0          	L110_LF2:
 1519  000020e0  8fa20000	lw	r2,0(r29)
 1520  000020e4  8fa30004	lw	r3,4(r29)
 1521  000020e8  8fdffff8	lw	r31,-8(r30)
 1522  000020ec  001ee820	add	r29,r0,r30
 1523  000020f0  8fdefffc	lw	r30,-4(r30)
 1524  000020f4  4be00000	jr	r31
 1525  000020f8  54000000	nop
 1526  000020fc          	.endproc _max
 1527                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1528                      ;;;
 1529                      ;;; Most of the traps are called in files from libtraps.
 1532  000020fc          	.align 2
 1533  000020fc          	.proc _exit
 1534  000020fc          	.global _exit
 1535  000020fc          	_exit:
 1536  000020fc  44000300	trap	#0x300
 1537  00002100  4be00000	jr	r31
 1538  00002104  54000000	nop
 1539  00002108          	.endproc _exit
 1541                      ; for the benefit of gcc.
 1542  00002108          	.proc ___main
 1543  00002108          	.global ___main
 1544  00002108          	___main:
 1545  00002108  4be00000	jr	r31
 1546  0000210c  54000000	nop
 1547  00002110          	.endproc ___main
 1548  00002110          	.text
 1549  00002110          	.global _etext
 1550  00002110          	_etext:
 1551  00002110          	.align 3
 1552  00002110          	.data
 1553  00003151          	.global _edata
 1554  00003151          	_edata:
