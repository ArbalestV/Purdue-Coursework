 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 382
    4                      ; Text size: 4624
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  0a43616c	.ascii "\nCalled function is on : %d, address = %d\000"
   82  00003004  6c656420	
   82  00003008  66756e63	
   82  0000300c  74696f6e	
   82  00003010  20697320	
   82  00003014  6f6e203a	
   82  00003018  2025642c	
   82  0000301c  20616464	
   82  00003020  72657373	
   82  00003024  203d2025	
   82  00003028  6400    	
   83  0000302a          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _recursive_function
   86  000010d4          	.global _recursive_function
   87  000010d4          	_recursive_function:
   88                      ;  Function 'recursive_function'; 0 bytes of locals, 1 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  23bdfff0	addi	r29,r29,#-16
   95  000010ec  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
   96  000010f0  24423000	addui	r2,r2,(LC0_LF0)&0xffff
   97  000010f4  afa20000	sw	(r29),r2
   98  000010f8  8fc10000	lw	r1,(r30)
   99  000010fc  afa10004	sw	4(r29),r1
  100  00001100  afbe0008	sw	8(r29),r30
  101  00001104  0c000240	jal	_Printf
  102  00001108  54000000	nop; not filled.
  103  0000110c  23bd0010	addi	r29,r29,#16
  104  00001110  8fdf0000	lw	r31,(r30)
  105  00001114  67e10000	snei	r1,r31,#0
  106  00001118  10200028	beqz	r1,L16_LF0
  107  0000111c  54000000	nop; not filled.
  108  00001120  23bdfff8	addi	r29,r29,#-8
  109  00001124  23e1ffff	addi	r1,r31,#-1
  110  00001128  afa10000	sw	(r29),r1
  111  0000112c  0fffffa4	jal	_recursive_function
  112  00001130  54000000	nop; not filled.
  113  00001134  20210001	addi	r1,r1,#1
  114  00001138  23bd0008	addi	r29,r29,#8
  115  0000113c  08000008	j	L15_LF0
  116  00001140  54000000	nop; not filled.
  117  00001144          	L16_LF0:
  118  00001144  20010000	addi	r1,r0,#0
  119  00001148          	L15_LF0:
  120  00001148  8fa20000	lw	r2,0(r29)
  121  0000114c  8fdffff8	lw	r31,-8(r30)
  122  00001150  001ee820	add	r29,r0,r30
  123  00001154  8fdefffc	lw	r30,-4(r30)
  124  00001158  4be00000	jr	r31
  125  0000115c  54000000	nop
  126  00001160          	.endproc _recursive_function
  127  00001160          	.data
  128  0000302a          	.align 2
  129  0000302c          	LC1_LF0:
  130  0000302c  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
  130  00003030  653a2025	
  130  00003034  73203c68	
  130  00003038  616e646c	
  130  0000303c  655f746f	
  130  00003040  5f70726f	
  130  00003044  63735f63	
  130  00003048  6f6d706c	
  130  0000304c  65746564	
  130  00003050  5f73656d	
  130  00003054  6170686f	
  130  00003058  72653e0a	
  130  0000305c  00      	
  131  0000305d          	.align 2
  132  00003060          	LC2_LF0:
  133  00003060  0a546865	.ascii "\nThe Test Program 4 - growing stack size to more than 1 page..\000"
  133  00003064  20546573	
  133  00003068  74205072	
  133  0000306c  6f677261	
  133  00003070  6d203420	
  133  00003074  2d206772	
  133  00003078  6f77696e	
  133  0000307c  67207374	
  133  00003080  61636b20	
  133  00003084  73697a65	
  133  00003088  20746f20	
  133  0000308c  6d6f7265	
  133  00003090  20746861	
  133  00003094  6e203120	
  133  00003098  70616765	
  133  0000309c  2e2e00  	
  134  0000309f          	.align 2
  135  000030a0          	LC3_LF0:
  136  000030a0  0a426567	.ascii "\nBeginning of function call of the recursion...\000"
  136  000030a4  696e6e69	
  136  000030a8  6e67206f	
  136  000030ac  66206675	
  136  000030b0  6e637469	
  136  000030b4  6f6e2063	
  136  000030b8  616c6c20	
  136  000030bc  6f662074	
  136  000030c0  68652072	
  136  000030c4  65637572	
  136  000030c8  73696f6e	
  136  000030cc  2e2e2e00	
  137  000030d0          	.align 2
  138  000030d0          	LC4_LF0:
  139  000030d0  0a546f74	.ascii "\nTotal number of recursive calls made: %d\n\000"
  139  000030d4  616c206e	
  139  000030d8  756d6265	
  139  000030dc  72206f66	
  139  000030e0  20726563	
  139  000030e4  75727369	
  139  000030e8  76652063	
  139  000030ec  616c6c73	
  139  000030f0  206d6164	
  139  000030f4  653a2025	
  139  000030f8  640a00  	
  140  000030fb          	.align 2
  141  000030fc          	LC5_LF0:
  142  000030fc  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  142  00003100  6f5f776f	
  142  00003104  726c6420	
  142  00003108  28256429	
  142  0000310c  3a204261	
  142  00003110  64207365	
  142  00003114  6d617068	
  142  00003118  6f726520	
  142  0000311c  735f7072	
  142  00003120  6f63735f	
  142  00003124  636f6d70	
  142  00003128  6c657465	
  142  0000312c  64202825	
  142  00003130  6429210a	
  142  00003134  00      	
  143  00003135          	.align 2
  144  00003138          	LC6_LF0:
  145  00003138  0a456e64	.ascii "\nEnd of The Test Program 4 - growing stack size to more than 1 page.."
  145  0000313c  206f6620	
  145  00003140  54686520	
  145  00003144  54657374	
  145  00003148  2050726f	
  145  0000314c  6772616d	
  145  00003150  2034202d	
  145  00003154  2067726f	
  145  00003158  77696e67	
  145  0000315c  20737461	
  145  00003160  636b2073	
  145  00003164  697a6520	
  145  00003168  746f206d	
  145  0000316c  6f726520	
  145  00003170  7468616e	
  145  00003174  20312070	
  145  00003178  6167652e	
  145  0000317c  2e      	
  146  0000317d  00      	.ascii "\000"
  147  0000317e          	.text
  148  00001160          	.align 2
  149  00001160          	.proc _main
  150  00001160          	.global _main
  151  00001160          	_main:
  152                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  153  00001160  afbefffc	sw	-4(r29),r30; push fp
  154  00001164  001df020	add	r30,r0,r29; fp = sp
  155  00001168  afbffff8	sw	-8(r29),r31; push ret addr
  156  0000116c  2fbd0010	subui	r29,r29,#16; alloc local storage
  157  00001170  8fc20000	lw	r2,(r30)
  158  00001174  8fc30004	lw	r3,4(r30)
  159  00001178  0c00108c	jal	___main
  160  0000117c  54000000	nop; not filled.
  161  00001180  64410002	snei	r1,r2,#2
  162  00001184  10200028	beqz	r1,L19_LF0
  163  00001188  54000000	nop; not filled.
  164  0000118c  23bdfff8	addi	r29,r29,#-8
  165  00001190  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  166  00001194  2484302c	addui	r4,r4,(LC1_LF0)&0xffff
  167  00001198  afa40000	sw	(r29),r4
  168  0000119c  0c0001a8	jal	_Printf
  169  000011a0  54000000	nop; not filled.
  170  000011a4  0c0002a8	jal	_Exit
  171  000011a8  54000000	nop; not filled.
  172  000011ac  23bd0008	addi	r29,r29,#8
  173  000011b0          	L19_LF0:
  174  000011b0  23bdfff0	addi	r29,r29,#-16
  175  000011b4  8c630004	lw	r3,4(r3)
  176  000011b8  afa30000	sw	(r29),r3
  177  000011bc  20040000	addi	r4,r0,#0
  178  000011c0  afa40004	sw	4(r29),r4
  179  000011c4  2004000a	addi	r4,r0,#10
  180  000011c8  afa40008	sw	8(r29),r4
  181  000011cc  0c000b3c	jal	_dstrtol
  182  000011d0  54000000	nop; not filled.
  183  000011d4  00011820	add	r3,r0,r1
  184  000011d8  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  185  000011dc  24843060	addui	r4,r4,(LC2_LF0)&0xffff
  186  000011e0  afa40000	sw	(r29),r4
  187  000011e4  0c000160	jal	_Printf
  188  000011e8  54000000	nop; not filled.
  189  000011ec  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  190  000011f0  248430a0	addui	r4,r4,(LC3_LF0)&0xffff
  191  000011f4  afa40000	sw	(r29),r4
  192  000011f8  0c00014c	jal	_Printf
  193  000011fc  54000000	nop; not filled.
  194  00001200  23c1fff0	addi	r1,r30,#-16
  195  00001204  20040514	addi	r4,r0,#1300
  196  00001208  afc4fff0	sw	-16(r30),r4
  197  0000120c  23bd0010	addi	r29,r29,#16
  198  00001210  23bdfff0	addi	r29,r29,#-16
  199  00001214  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  200  00001218  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  201  0000121c  afa40000	sw	(r29),r4
  202  00001220  8fc2fff0	lw	r2,-16(r30)
  203  00001224  afa20004	sw	4(r29),r2
  204  00001228  afa10008	sw	8(r29),r1
  205  0000122c  0c000118	jal	_Printf
  206  00001230  54000000	nop; not filled.
  207  00001234  23bd0010	addi	r29,r29,#16
  208  00001238  8fc2fff0	lw	r2,-16(r30)
  209  0000123c  64410000	snei	r1,r2,#0
  210  00001240  14200010	bnez	r1,L21_LF0
  211  00001244  54000000	nop; not filled.
  212  00001248  20010000	addi	r1,r0,#0
  213  0000124c  08000020	j	L20_LF0
  214  00001250  54000000	nop; not filled.
  215  00001254          	L21_LF0:
  216  00001254  23bdfff8	addi	r29,r29,#-8
  217  00001258  2041ffff	addi	r1,r2,#-1
  218  0000125c  afa10000	sw	(r29),r1
  219  00001260  0ffffe70	jal	_recursive_function
  220  00001264  54000000	nop; not filled.
  221  00001268  20210001	addi	r1,r1,#1
  222  0000126c  23bd0008	addi	r29,r29,#8
  223  00001270          	L20_LF0:
  224  00001270  23bdfff8	addi	r29,r29,#-8
  225  00001274  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  226  00001278  248430d0	addui	r4,r4,(LC4_LF0)&0xffff
  227  0000127c  afa40000	sw	(r29),r4
  228  00001280  afa10004	sw	4(r29),r1
  229  00001284  0c0000c0	jal	_Printf
  230  00001288  54000000	nop; not filled.
  231  0000128c  afa30000	sw	(r29),r3
  232  00001290  0c000108	jal	_sem_signal
  233  00001294  54000000	nop; not filled.
  234  00001298  23bd0008	addi	r29,r29,#8
  235  0000129c  64210001	snei	r1,r1,#1
  236  000012a0  10200038	beqz	r1,L22_LF0
  237  000012a4  54000000	nop; not filled.
  238  000012a8  0c0000a8	jal	_getpid
  239  000012ac  54000000	nop; not filled.
  240  000012b0  23bdfff0	addi	r29,r29,#-16
  241  000012b4  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  242  000012b8  248430fc	addui	r4,r4,(LC5_LF0)&0xffff
  243  000012bc  afa40000	sw	(r29),r4
  244  000012c0  afa10004	sw	4(r29),r1
  245  000012c4  afa30008	sw	8(r29),r3
  246  000012c8  0c00007c	jal	_Printf
  247  000012cc  54000000	nop; not filled.
  248  000012d0  0c00017c	jal	_Exit
  249  000012d4  54000000	nop; not filled.
  250  000012d8  23bd0010	addi	r29,r29,#16
  251  000012dc          	L22_LF0:
  252  000012dc  23bdfff8	addi	r29,r29,#-8
  253  000012e0  3c040000	lhi	r4,((LC6_LF0)>>16)&0xffff
  254  000012e4  24843138	addui	r4,r4,(LC6_LF0)&0xffff
  255  000012e8  afa40000	sw	(r29),r4
  256  000012ec  0c000058	jal	_Printf
  257  000012f0  54000000	nop; not filled.
  258  000012f4  23bd0008	addi	r29,r29,#8
  259  000012f8  0c000f00	jal	_exit
  260  000012fc  54000000	nop
  261  00001300          	.endproc _main
  262                      ;;;
  263                      ;;; Stub functions for DLX traps.
  264                      ;;;
  265                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  266                      ;;;
  267                      ;;; The traps such as Open and Close
  268                      ;;; (note the capital letters) are for use by user programs.  The traps
  269                      ;;; with names such as open and close (lower case) are for use by the OS.
  270                      ;;;
  273  00001300          	.align 2
  275                      ;;; The following are the traps to be used by user-level programs
  276                      ;;;
  278  00001300          	.align 2
  279  00001300          	.proc _Open
  280  00001300          	.global _Open
  281  00001300          	_Open:
  282                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  283                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  284                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  285  00001300  44000213	trap	#0x213
  286  00001304  4be00000	jr	r31
  287  00001308  54000000	nop
  288  0000130c          	.endproc _Open
  290  0000130c          	.proc _Close
  291  0000130c          	.global _Close
  292  0000130c          	_Close:
  293  0000130c  44000214	trap	#0x214
  294  00001310  4be00000	jr	r31
  295  00001314  54000000	nop
  296  00001318          	.endproc _Close
  298  00001318          	.proc _Read
  299  00001318          	.global _Read
  300  00001318          	_Read:
  301  00001318  44000210	trap	#0x210
  302  0000131c  4be00000	jr	r31
  303  00001320  54000000	nop
  304  00001324          	.endproc _Read
  306  00001324          	.proc _Write
  307  00001324          	.global _Write
  308  00001324          	_Write:
  309  00001324  44000211	trap	#0x211
  310  00001328  4be00000	jr	r31
  311  0000132c  54000000	nop
  312  00001330          	.endproc _Write
  314  00001330          	.proc _Lseek
  315  00001330          	.global _Lseek
  316  00001330          	_Lseek:
  317  00001330  44000212	trap	#0x212
  318  00001334  4be00000	jr	r31
  319  00001338  54000000	nop
  320  0000133c          	.endproc _Lseek
  322  0000133c          	.proc _Putchar
  323  0000133c          	.global _Putchar
  324  0000133c          	_Putchar:
  325  0000133c  44000280	trap	#0x280
  326  00001340  4be00000	jr	r31
  327  00001344  54000000	nop
  328  00001348          	.endproc _Putchar
  330  00001348          	.proc _Printf
  331  00001348          	.global _Printf
  332  00001348          	_Printf:
  333  00001348  44000201	trap	#0x201
  334  0000134c  4be00000	jr	r31
  335  00001350  54000000	nop
  336  00001354          	.endproc _Printf
  338  00001354          	.proc _getpid
  339  00001354          	.global _getpid
  340  00001354          	_getpid:
  341  00001354  44000431	trap	#0x431
  342  00001358  4be00000	jr	r31
  343  0000135c  54000000	nop
  344  00001360          	.endproc _getpid
  346  00001360          	.proc _process_create
  347  00001360          	.global _process_create
  348  00001360          	_process_create:
  349  00001360  44000432	trap	#0x432
  350  00001364  4be00000	jr	r31
  351  00001368  54000000	nop
  352  0000136c          	.endproc _process_create
  354  0000136c          	.proc _shmget
  355  0000136c          	.global _shmget
  356  0000136c          	_shmget:
  357  0000136c  44000440	trap	#0x440
  358  00001370  4be00000	jr	r31
  359  00001374  54000000	nop
  360  00001378          	.endproc _shmget
  362  00001378          	.proc _shmat
  363  00001378          	.global _shmat
  364  00001378          	_shmat:
  365  00001378  44000441	trap	#0x441
  366  0000137c  4be00000	jr	r31
  367  00001380  54000000	nop
  368  00001384          	.endproc _shmat
  370  00001384          	.proc _sem_create
  371  00001384          	.global _sem_create
  372  00001384          	_sem_create:
  373  00001384  44000450	trap	#0x450
  374  00001388  4be00000	jr	r31
  375  0000138c  54000000	nop
  376  00001390          	.endproc _sem_create
  378  00001390          	.proc _sem_wait
  379  00001390          	.global _sem_wait
  380  00001390          	_sem_wait:
  381  00001390  44000451	trap	#0x451
  382  00001394  4be00000	jr	r31
  383  00001398  54000000	nop
  384  0000139c          	.endproc _sem_wait
  386  0000139c          	.proc _sem_signal
  387  0000139c          	.global _sem_signal
  388  0000139c          	_sem_signal:
  389  0000139c  44000452	trap	#0x452
  390  000013a0  4be00000	jr	r31
  391  000013a4  54000000	nop
  392  000013a8          	.endproc _sem_signal
  394  000013a8          	.proc _lock_create
  395  000013a8          	.global _lock_create
  396  000013a8          	_lock_create:
  397  000013a8  44000453	trap	#0x453
  398  000013ac  4be00000	jr	r31
  399  000013b0  54000000	nop
  400  000013b4          	.endproc _lock_create
  402  000013b4          	.proc _lock_acquire
  403  000013b4          	.global _lock_acquire
  404  000013b4          	_lock_acquire:
  405  000013b4  44000454	trap	#0x454
  406  000013b8  4be00000	jr	r31
  407  000013bc  54000000	nop
  408  000013c0          	.endproc _lock_acquire
  410  000013c0          	.proc _lock_release
  411  000013c0          	.global _lock_release
  412  000013c0          	_lock_release:
  413  000013c0  44000455	trap	#0x455
  414  000013c4  4be00000	jr	r31
  415  000013c8  54000000	nop
  416  000013cc          	.endproc _lock_release
  418  000013cc          	.proc _cond_create
  419  000013cc          	.global _cond_create
  420  000013cc          	_cond_create:
  421  000013cc  44000456	trap	#0x456
  422  000013d0  4be00000	jr	r31
  423  000013d4  54000000	nop
  424  000013d8          	.endproc _cond_create
  426  000013d8          	.proc _cond_wait
  427  000013d8          	.global _cond_wait
  428  000013d8          	_cond_wait:
  429  000013d8  44000457	trap	#0x457
  430  000013dc  4be00000	jr	r31
  431  000013e0  54000000	nop
  432  000013e4          	.endproc _cond_wait
  434  000013e4          	.proc _cond_signal
  435  000013e4          	.global _cond_signal
  436  000013e4          	_cond_signal:
  437  000013e4  44000458	trap	#0x458
  438  000013e8  4be00000	jr	r31
  439  000013ec  54000000	nop
  440  000013f0          	.endproc _cond_signal
  442  000013f0          	.proc _cond_broadcast
  443  000013f0          	.global _cond_broadcast
  444  000013f0          	_cond_broadcast:
  445  000013f0  44000459	trap	#0x459
  446  000013f4  4be00000	jr	r31
  447  000013f8  54000000	nop
  448  000013fc          	.endproc _cond_broadcast
  450  000013fc          	.proc _mbox_create
  451  000013fc          	.global _mbox_create
  452  000013fc          	_mbox_create:
  453  000013fc  44000460	trap	#0x460
  454  00001400  4be00000	jr	r31
  455  00001404  54000000	nop
  456  00001408          	.endproc _mbox_create
  458  00001408          	.proc _mbox_open
  459  00001408          	.global _mbox_open
  460  00001408          	_mbox_open:
  461  00001408  44000461	trap	#0x461
  462  0000140c  4be00000	jr	r31
  463  00001410  54000000	nop
  464  00001414          	.endproc _mbox_open
  466  00001414          	.proc _mbox_close
  467  00001414          	.global _mbox_close
  468  00001414          	_mbox_close:
  469  00001414  44000462	trap	#0x462
  470  00001418  4be00000	jr	r31
  471  0000141c  54000000	nop
  472  00001420          	.endproc _mbox_close
  474  00001420          	.proc _mbox_send
  475  00001420          	.global _mbox_send
  476  00001420          	_mbox_send:
  477  00001420  44000463	trap	#0x463
  478  00001424  4be00000	jr	r31
  479  00001428  54000000	nop
  480  0000142c          	.endproc _mbox_send
  482  0000142c          	.proc _mbox_recv
  483  0000142c          	.global _mbox_recv
  484  0000142c          	_mbox_recv:
  485  0000142c  44000464	trap	#0x464
  486  00001430  4be00000	jr	r31
  487  00001434  54000000	nop
  488  00001438          	.endproc _mbox_recv
  490  00001438          	.proc _sleep
  491  00001438          	.global _sleep
  492  00001438          	_sleep:
  493  00001438  44000465	trap	#0x465
  494  0000143c  4be00000	jr	r31
  495  00001440  54000000	nop
  496  00001444          	.endproc _sleep
  498  00001444          	.proc _yield
  499  00001444          	.global _yield
  500  00001444          	_yield:
  501  00001444  44000466	trap	#0x466
  502  00001448  4be00000	jr	r31
  503  0000144c  54000000	nop
  504  00001450          	.endproc _yield
  507  00001450          	.proc _Exit
  508  00001450          	.global _Exit
  509  00001450          	_Exit:
  510  00001450  44000500	trap	#0x500
  511  00001454  4be00000	jr	r31
  512  00001458  54000000	nop
  513  0000145c          	.endproc _Exit
  516  0000145c          	.proc _malloc
  517  0000145c          	.global _malloc
  518  0000145c          	_malloc:
  519  0000145c  44000467	trap	#0x467
  520  00001460  4be00000	jr	r31
  521  00001464          	.endproc _malloc
  524  00001464          	.proc _mfree
  525  00001464          	.global _mfree
  526  00001464          	_mfree:
  527  00001464  44000468	trap	#0x468
  528  00001468  4be00000	jr	r31
  529  0000146c          	.endproc _mfree
  530                      ; Compiled by GCC
  532  0000146c          	.align 2
  533  0000146c          	.proc _isspace
  534  0000146c          	.global _isspace
  535  0000146c          	_isspace:
  536                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  537  0000146c  afbefffc	sw	-4(r29),r30; push fp
  538  00001470  001df020	add	r30,r0,r29; fp = sp
  539  00001474  afbffff8	sw	-8(r29),r31; push ret addr
  540  00001478  2fbd0018	subui	r29,r29,#24; alloc local storage
  541  0000147c  afa20000	sw	0(r29),r2
  542  00001480  afa30004	sw	4(r29),r3
  543  00001484  afa40008	sw	8(r29),r4
  544  00001488  83c20003	lb	r2,3(r30)
  545  0000148c  20010000	addi	r1,r0,#0
  546  00001490  304300ff	andi	r3,r2,#0x00ff
  547  00001494  60640020	seqi	r4,r3,#32
  548  00001498  1480002c	bnez	r4,L3_LF2
  549  0000149c  54000000	nop; delay slot nop
  550  000014a0  304300ff	andi	r3,r2,#0x00ff
  551  000014a4  60640009	seqi	r4,r3,#9
  552  000014a8  1480001c	bnez	r4,L3_LF2
  553  000014ac  54000000	nop; delay slot nop
  554  000014b0  304300ff	andi	r3,r2,#0x00ff
  555  000014b4  6064000a	seqi	r4,r3,#10
  556  000014b8  1480000c	bnez	r4,L3_LF2
  557  000014bc  54000000	nop; delay slot nop
  558  000014c0  08000008	j	L2_LF2
  559  000014c4  54000000	nop; delay slot nop
  560  000014c8          	L3_LF2:
  561  000014c8  20010001	addi	r1,r0,#1
  562  000014cc          	L2_LF2:
  563  000014cc  08000004	j	L1_LF2
  564  000014d0  54000000	nop; delay slot nop
  565  000014d4          	L1_LF2:
  566  000014d4  8fa20000	lw	r2,0(r29)
  567  000014d8  8fa30004	lw	r3,4(r29)
  568  000014dc  8fa40008	lw	r4,8(r29)
  569  000014e0  8fdffff8	lw	r31,-8(r30)
  570  000014e4  001ee820	add	r29,r0,r30
  571  000014e8  8fdefffc	lw	r30,-4(r30)
  572  000014ec  4be00000	jr	r31
  573  000014f0  54000000	nop
  574  000014f4          	.endproc _isspace
  575  000014f4          	.align 2
  576  000014f4          	.proc _isxdigit
  577  000014f4          	.global _isxdigit
  578  000014f4          	_isxdigit:
  579                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  580  000014f4  afbefffc	sw	-4(r29),r30; push fp
  581  000014f8  001df020	add	r30,r0,r29; fp = sp
  582  000014fc  afbffff8	sw	-8(r29),r31; push ret addr
  583  00001500  2fbd0018	subui	r29,r29,#24; alloc local storage
  584  00001504  afa20000	sw	0(r29),r2
  585  00001508  afa30004	sw	4(r29),r3
  586  0000150c  afa40008	sw	8(r29),r4
  587  00001510  83c20003	lb	r2,3(r30)
  588  00001514  20010000	addi	r1,r0,#0
  589  00001518  304300ff	andi	r3,r2,#0x00ff
  590  0000151c  6c64002f	sgtui	r4,r3,#47
  591  00001520  1080001c	beqz	r4,L7_LF2
  592  00001524  54000000	nop; delay slot nop
  593  00001528  304300ff	andi	r3,r2,#0x00ff
  594  0000152c  70640039	sleui	r4,r3,#57
  595  00001530  1480005c	bnez	r4,L6_LF2
  596  00001534  54000000	nop; delay slot nop
  597  00001538  08000004	j	L7_LF2
  598  0000153c  54000000	nop; delay slot nop
  599  00001540          	L7_LF2:
  600  00001540  304300ff	andi	r3,r2,#0x00ff
  601  00001544  6c640060	sgtui	r4,r3,#96
  602  00001548  1080001c	beqz	r4,L8_LF2
  603  0000154c  54000000	nop; delay slot nop
  604  00001550  304300ff	andi	r3,r2,#0x00ff
  605  00001554  70640066	sleui	r4,r3,#102
  606  00001558  14800034	bnez	r4,L6_LF2
  607  0000155c  54000000	nop; delay slot nop
  608  00001560  08000004	j	L8_LF2
  609  00001564  54000000	nop; delay slot nop
  610  00001568          	L8_LF2:
  611  00001568  304300ff	andi	r3,r2,#0x00ff
  612  0000156c  6c640040	sgtui	r4,r3,#64
  613  00001570  10800020	beqz	r4,L5_LF2
  614  00001574  54000000	nop; delay slot nop
  615  00001578  304300ff	andi	r3,r2,#0x00ff
  616  0000157c  70640041	sleui	r4,r3,#65
  617  00001580  1480000c	bnez	r4,L6_LF2
  618  00001584  54000000	nop; delay slot nop
  619  00001588  08000008	j	L5_LF2
  620  0000158c  54000000	nop; delay slot nop
  621  00001590          	L6_LF2:
  622  00001590  20010001	addi	r1,r0,#1
  623  00001594          	L5_LF2:
  624  00001594  08000004	j	L4_LF2
  625  00001598  54000000	nop; delay slot nop
  626  0000159c          	L4_LF2:
  627  0000159c  8fa20000	lw	r2,0(r29)
  628  000015a0  8fa30004	lw	r3,4(r29)
  629  000015a4  8fa40008	lw	r4,8(r29)
  630  000015a8  8fdffff8	lw	r31,-8(r30)
  631  000015ac  001ee820	add	r29,r0,r30
  632  000015b0  8fdefffc	lw	r30,-4(r30)
  633  000015b4  4be00000	jr	r31
  634  000015b8  54000000	nop
  635  000015bc          	.endproc _isxdigit
  636  000015bc          	.align 2
  637  000015bc          	.proc _dstrcpy
  638  000015bc          	.global _dstrcpy
  639  000015bc          	_dstrcpy:
  640                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  641  000015bc  afbefffc	sw	-4(r29),r30; push fp
  642  000015c0  001df020	add	r30,r0,r29; fp = sp
  643  000015c4  afbffff8	sw	-8(r29),r31; push ret addr
  644  000015c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  645  000015cc  afa20000	sw	0(r29),r2
  646  000015d0  afa30004	sw	4(r29),r3
  647  000015d4  8fc10000	lw	r1,(r30)
  648  000015d8  afc1fff4	sw	-12(r30),r1
  649  000015dc          	L10_LF2:
  650  000015dc  8fc10000	lw	r1,(r30)
  651  000015e0  20220001	addi	r2,r1,#1
  652  000015e4  afc20000	sw	(r30),r2
  653  000015e8  8fc20004	lw	r2,4(r30)
  654  000015ec  20430001	addi	r3,r2,#1
  655  000015f0  afc30004	sw	4(r30),r3
  656  000015f4  80420000	lb	r2,(r2)
  657  000015f8  a0220000	sb	(r1),r2
  658  000015fc  a3c2fff3	sb	-13(r30),r2
  659  00001600          	L12_LF2:
  660  00001600  93c1fff3	lbu	r1,-13(r30)
  661  00001604  64220000	snei	r2,r1,#0
  662  00001608  1440000c	bnez	r2,L13_LF2
  663  0000160c  54000000	nop; delay slot nop
  664  00001610  0800000c	j	L11_LF2
  665  00001614  54000000	nop; delay slot nop
  666  00001618          	L13_LF2:
  667  00001618  0bffffc0	j	L10_LF2
  668  0000161c  54000000	nop; delay slot nop
  669  00001620          	L11_LF2:
  670  00001620  8fc1fff4	lw	r1,-12(r30)
  671  00001624  08000004	j	L9_LF2
  672  00001628  54000000	nop; delay slot nop
  673  0000162c          	L9_LF2:
  674  0000162c  8fa20000	lw	r2,0(r29)
  675  00001630  8fa30004	lw	r3,4(r29)
  676  00001634  8fdffff8	lw	r31,-8(r30)
  677  00001638  001ee820	add	r29,r0,r30
  678  0000163c  8fdefffc	lw	r30,-4(r30)
  679  00001640  4be00000	jr	r31
  680  00001644  54000000	nop
  681  00001648          	.endproc _dstrcpy
  682  00001648          	.align 2
  683  00001648          	.proc _dstrncpy
  684  00001648          	.global _dstrncpy
  685  00001648          	_dstrncpy:
  686                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  687  00001648  afbefffc	sw	-4(r29),r30; push fp
  688  0000164c  001df020	add	r30,r0,r29; fp = sp
  689  00001650  afbffff8	sw	-8(r29),r31; push ret addr
  690  00001654  2fbd0018	subui	r29,r29,#24; alloc local storage
  691  00001658  afa20000	sw	0(r29),r2
  692  0000165c  afa30004	sw	4(r29),r3
  693  00001660  8fc10000	lw	r1,(r30)
  694  00001664  afc1fff4	sw	-12(r30),r1
  695  00001668          	L15_LF2:
  696  00001668  8fc10008	lw	r1,8(r30)
  697  0000166c  2022ffff	addi	r2,r1,#-1
  698  00001670  afc20008	sw	8(r30),r2
  699  00001674  70210000	slei	r1,r1,#0
  700  00001678  1020000c	beqz	r1,L18_LF2
  701  0000167c  54000000	nop; delay slot nop
  702  00001680  08000048	j	L16_LF2
  703  00001684  54000000	nop; delay slot nop
  704  00001688          	L18_LF2:
  705  00001688  8fc10000	lw	r1,(r30)
  706  0000168c  20220001	addi	r2,r1,#1
  707  00001690  afc20000	sw	(r30),r2
  708  00001694  8fc20004	lw	r2,4(r30)
  709  00001698  20430001	addi	r3,r2,#1
  710  0000169c  afc30004	sw	4(r30),r3
  711  000016a0  80420000	lb	r2,(r2)
  712  000016a4  a0220000	sb	(r1),r2
  713  000016a8  a3c2fff3	sb	-13(r30),r2
  714  000016ac          	L17_LF2:
  715  000016ac  93c1fff3	lbu	r1,-13(r30)
  716  000016b0  64220000	snei	r2,r1,#0
  717  000016b4  1440000c	bnez	r2,L19_LF2
  718  000016b8  54000000	nop; delay slot nop
  719  000016bc  0800000c	j	L16_LF2
  720  000016c0  54000000	nop; delay slot nop
  721  000016c4          	L19_LF2:
  722  000016c4  0bffffa0	j	L15_LF2
  723  000016c8  54000000	nop; delay slot nop
  724  000016cc          	L16_LF2:
  725  000016cc  8fc1fff4	lw	r1,-12(r30)
  726  000016d0  08000004	j	L14_LF2
  727  000016d4  54000000	nop; delay slot nop
  728  000016d8          	L14_LF2:
  729  000016d8  8fa20000	lw	r2,0(r29)
  730  000016dc  8fa30004	lw	r3,4(r29)
  731  000016e0  8fdffff8	lw	r31,-8(r30)
  732  000016e4  001ee820	add	r29,r0,r30
  733  000016e8  8fdefffc	lw	r30,-4(r30)
  734  000016ec  4be00000	jr	r31
  735  000016f0  54000000	nop
  736  000016f4          	.endproc _dstrncpy
  737  000016f4          	.align 2
  738  000016f4          	.proc _dstrcat
  739  000016f4          	.global _dstrcat
  740  000016f4          	_dstrcat:
  741                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  742  000016f4  afbefffc	sw	-4(r29),r30; push fp
  743  000016f8  001df020	add	r30,r0,r29; fp = sp
  744  000016fc  afbffff8	sw	-8(r29),r31; push ret addr
  745  00001700  2fbd0018	subui	r29,r29,#24; alloc local storage
  746  00001704  afa20000	sw	0(r29),r2
  747  00001708  8fc10000	lw	r1,(r30)
  748  0000170c  afc1fff4	sw	-12(r30),r1
  749  00001710          	L21_LF2:
  750  00001710  8fc10000	lw	r1,(r30)
  751  00001714  90220000	lbu	r2,(r1)
  752  00001718  64410000	snei	r1,r2,#0
  753  0000171c  1420000c	bnez	r1,L23_LF2
  754  00001720  54000000	nop; delay slot nop
  755  00001724  0800001c	j	L22_LF2
  756  00001728  54000000	nop; delay slot nop
  757  0000172c          	L23_LF2:
  758  0000172c  8fc20000	lw	r2,(r30)
  759  00001730  20410001	addi	r1,r2,#1
  760  00001734  00011020	add	r2,r0,r1
  761  00001738  afc20000	sw	(r30),r2
  762  0000173c  0bffffd0	j	L21_LF2
  763  00001740  54000000	nop; delay slot nop
  764  00001744          	L22_LF2:
  765  00001744  23bdfff8	addi	r29,r29,#-8
  766  00001748  001d0820	add	r1,r0,r29
  767  0000174c  8fc20000	lw	r2,(r30)
  768  00001750  ac220000	sw	(r1),r2
  769  00001754  8fc20004	lw	r2,4(r30)
  770  00001758  ac220004	sw	4(r1),r2
  771  0000175c  0ffffe5c	jal	_dstrcpy
  772  00001760  54000000	nop; delay slot nop
  773  00001764  23bd0008	addi	r29,r29,#8
  774  00001768  8fc1fff4	lw	r1,-12(r30)
  775  0000176c  08000004	j	L20_LF2
  776  00001770  54000000	nop; delay slot nop
  777  00001774          	L20_LF2:
  778  00001774  8fa20000	lw	r2,0(r29)
  779  00001778  8fdffff8	lw	r31,-8(r30)
  780  0000177c  001ee820	add	r29,r0,r30
  781  00001780  8fdefffc	lw	r30,-4(r30)
  782  00001784  4be00000	jr	r31
  783  00001788  54000000	nop
  784  0000178c          	.endproc _dstrcat
  785  0000178c          	.align 2
  786  0000178c          	.proc _dstrncmp
  787  0000178c          	.global _dstrncmp
  788  0000178c          	_dstrncmp:
  789                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  790  0000178c  afbefffc	sw	-4(r29),r30; push fp
  791  00001790  001df020	add	r30,r0,r29; fp = sp
  792  00001794  afbffff8	sw	-8(r29),r31; push ret addr
  793  00001798  2fbd0018	subui	r29,r29,#24; alloc local storage
  794  0000179c  afa20000	sw	0(r29),r2
  795  000017a0  afa30004	sw	4(r29),r3
  796  000017a4  54000000	nop
  797  000017a8  20010000	addi	r1,r0,#0
  798  000017ac  afc1fff4	sw	-12(r30),r1
  799  000017b0          	L25_LF2:
  800  000017b0  8fc1fff4	lw	r1,-12(r30)
  801  000017b4  8fc20008	lw	r2,8(r30)
  802  000017b8  0022082a	slt	r1,r1,r2
  803  000017bc  1420000c	bnez	r1,L28_LF2
  804  000017c0  54000000	nop; delay slot nop
  805  000017c4  08000088	j	L26_LF2
  806  000017c8  54000000	nop; delay slot nop
  807  000017cc          	L28_LF2:
  808  000017cc  8fc10004	lw	r1,4(r30)
  809  000017d0  90220000	lbu	r2,(r1)
  810  000017d4  64410000	snei	r1,r2,#0
  811  000017d8  14200018	bnez	r1,L29_LF2
  812  000017dc  54000000	nop; delay slot nop
  813  000017e0  20010000	addi	r1,r0,#0
  814  000017e4  080000d8	j	L24_LF2
  815  000017e8  54000000	nop; delay slot nop
  816  000017ec  08000028	j	L30_LF2
  817  000017f0  54000000	nop; delay slot nop
  818  000017f4          	L29_LF2:
  819  000017f4  8fc10000	lw	r1,(r30)
  820  000017f8  8fc20004	lw	r2,4(r30)
  821  000017fc  90210000	lbu	r1,(r1)
  822  00001800  90420000	lbu	r2,(r2)
  823  00001804  00220829	sne	r1,r1,r2
  824  00001808  1020000c	beqz	r1,L30_LF2
  825  0000180c  54000000	nop; delay slot nop
  826  00001810  0800003c	j	L26_LF2
  827  00001814  54000000	nop; delay slot nop
  828  00001818          	L31_LF2:
  829  00001818          	L30_LF2:
  830  00001818  8fc20000	lw	r2,(r30)
  831  0000181c  20410001	addi	r1,r2,#1
  832  00001820  00011020	add	r2,r0,r1
  833  00001824  afc20000	sw	(r30),r2
  834  00001828  8fc20004	lw	r2,4(r30)
  835  0000182c  20410001	addi	r1,r2,#1
  836  00001830  00011020	add	r2,r0,r1
  837  00001834  afc20004	sw	4(r30),r2
  838  00001838          	L27_LF2:
  839  00001838  8fc2fff4	lw	r2,-12(r30)
  840  0000183c  20410001	addi	r1,r2,#1
  841  00001840  00011020	add	r2,r0,r1
  842  00001844  afc2fff4	sw	-12(r30),r2
  843  00001848  0bffff64	j	L25_LF2
  844  0000184c  54000000	nop; delay slot nop
  845  00001850          	L26_LF2:
  846  00001850  8fc1fff4	lw	r1,-12(r30)
  847  00001854  8fc20008	lw	r2,8(r30)
  848  00001858  00220828	seq	r1,r1,r2
  849  0000185c  10200018	beqz	r1,L32_LF2
  850  00001860  54000000	nop; delay slot nop
  851  00001864  20010000	addi	r1,r0,#0
  852  00001868  08000054	j	L24_LF2
  853  0000186c  54000000	nop; delay slot nop
  854  00001870  0800004c	j	L33_LF2
  855  00001874  54000000	nop; delay slot nop
  856  00001878          	L32_LF2:
  857  00001878  8fc20000	lw	r2,(r30)
  858  0000187c  90410000	lbu	r1,(r2)
  859  00001880  8fc20004	lw	r2,4(r30)
  860  00001884  90430000	lbu	r3,(r2)
  861  00001888  00230822	sub	r1,r1,r3
  862  0000188c  74220000	sgei	r2,r1,#0
  863  00001890  10400020	beqz	r2,L34_LF2
  864  00001894  54000000	nop; delay slot nop
  865  00001898  8fc10000	lw	r1,(r30)
  866  0000189c  8fc20004	lw	r2,4(r30)
  867  000018a0  90210000	lbu	r1,(r1)
  868  000018a4  90420000	lbu	r2,(r2)
  869  000018a8  00220829	sne	r1,r1,r2
  870  000018ac  08000008	j	L35_LF2
  871  000018b0  54000000	nop; delay slot nop
  872  000018b4          	L34_LF2:
  873  000018b4  2001ffff	addi	r1,r0,#-1
  874  000018b8          	L35_LF2:
  875  000018b8  08000004	j	L24_LF2
  876  000018bc  54000000	nop; delay slot nop
  877  000018c0          	L33_LF2:
  878  000018c0          	L24_LF2:
  879  000018c0  8fa20000	lw	r2,0(r29)
  880  000018c4  8fa30004	lw	r3,4(r29)
  881  000018c8  8fdffff8	lw	r31,-8(r30)
  882  000018cc  001ee820	add	r29,r0,r30
  883  000018d0  8fdefffc	lw	r30,-4(r30)
  884  000018d4  4be00000	jr	r31
  885  000018d8  54000000	nop
  886  000018dc          	.endproc _dstrncmp
  887  000018dc          	.align 2
  888  000018dc          	.proc _dstrlen
  889  000018dc          	.global _dstrlen
  890  000018dc          	_dstrlen:
  891                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  892  000018dc  afbefffc	sw	-4(r29),r30; push fp
  893  000018e0  001df020	add	r30,r0,r29; fp = sp
  894  000018e4  afbffff8	sw	-8(r29),r31; push ret addr
  895  000018e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  896  000018ec  afa20000	sw	0(r29),r2
  897  000018f0  20010000	addi	r1,r0,#0
  898  000018f4  afc1fff4	sw	-12(r30),r1
  899  000018f8          	L37_LF2:
  900  000018f8  8fc10000	lw	r1,(r30)
  901  000018fc  20220001	addi	r2,r1,#1
  902  00001900  afc20000	sw	(r30),r2
  903  00001904  90210000	lbu	r1,(r1)
  904  00001908  64220000	snei	r2,r1,#0
  905  0000190c  1440000c	bnez	r2,L39_LF2
  906  00001910  54000000	nop; delay slot nop
  907  00001914  0800001c	j	L38_LF2
  908  00001918  54000000	nop; delay slot nop
  909  0000191c          	L39_LF2:
  910  0000191c  8fc2fff4	lw	r2,-12(r30)
  911  00001920  20410001	addi	r1,r2,#1
  912  00001924  00011020	add	r2,r0,r1
  913  00001928  afc2fff4	sw	-12(r30),r2
  914  0000192c  0bffffc8	j	L37_LF2
  915  00001930  54000000	nop; delay slot nop
  916  00001934          	L38_LF2:
  917  00001934  8fc1fff4	lw	r1,-12(r30)
  918  00001938  08000004	j	L36_LF2
  919  0000193c  54000000	nop; delay slot nop
  920  00001940          	L36_LF2:
  921  00001940  8fa20000	lw	r2,0(r29)
  922  00001944  8fdffff8	lw	r31,-8(r30)
  923  00001948  001ee820	add	r29,r0,r30
  924  0000194c  8fdefffc	lw	r30,-4(r30)
  925  00001950  4be00000	jr	r31
  926  00001954  54000000	nop
  927  00001958          	.endproc _dstrlen
  928  00001958          	.align 2
  929  00001958          	.proc _dstrstr
  930  00001958          	.global _dstrstr
  931  00001958          	_dstrstr:
  932                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  933  00001958  afbefffc	sw	-4(r29),r30; push fp
  934  0000195c  001df020	add	r30,r0,r29; fp = sp
  935  00001960  afbffff8	sw	-8(r29),r31; push ret addr
  936  00001964  2fbd0018	subui	r29,r29,#24; alloc local storage
  937  00001968  afa20000	sw	0(r29),r2
  938  0000196c  23bdfff8	addi	r29,r29,#-8
  939  00001970  001d0820	add	r1,r0,r29
  940  00001974  8fc20004	lw	r2,4(r30)
  941  00001978  ac220000	sw	(r1),r2
  942  0000197c  0fffff5c	jal	_dstrlen
  943  00001980  54000000	nop; delay slot nop
  944  00001984  23bd0008	addi	r29,r29,#8
  945  00001988  afc1fff4	sw	-12(r30),r1
  946  0000198c          	L41_LF2:
  947  0000198c  8fc10000	lw	r1,(r30)
  948  00001990  90220000	lbu	r2,(r1)
  949  00001994  64410000	snei	r1,r2,#0
  950  00001998  1420000c	bnez	r1,L43_LF2
  951  0000199c  54000000	nop; delay slot nop
  952  000019a0  08000060	j	L42_LF2
  953  000019a4  54000000	nop; delay slot nop
  954  000019a8          	L43_LF2:
  955  000019a8  23bdfff0	addi	r29,r29,#-16
  956  000019ac  001d0820	add	r1,r0,r29
  957  000019b0  8fc20000	lw	r2,(r30)
  958  000019b4  ac220000	sw	(r1),r2
  959  000019b8  8fc20004	lw	r2,4(r30)
  960  000019bc  ac220004	sw	4(r1),r2
  961  000019c0  8fc2fff4	lw	r2,-12(r30)
  962  000019c4  ac220008	sw	8(r1),r2
  963  000019c8  0ffffdc0	jal	_dstrncmp
  964  000019cc  54000000	nop; delay slot nop
  965  000019d0  23bd0010	addi	r29,r29,#16
  966  000019d4  64220000	snei	r2,r1,#0
  967  000019d8  14400010	bnez	r2,L44_LF2
  968  000019dc  54000000	nop; delay slot nop
  969  000019e0  8fc10000	lw	r1,(r30)
  970  000019e4  08000028	j	L40_LF2
  971  000019e8  54000000	nop; delay slot nop
  972  000019ec          	L44_LF2:
  973  000019ec  8fc20000	lw	r2,(r30)
  974  000019f0  20410001	addi	r1,r2,#1
  975  000019f4  00011020	add	r2,r0,r1
  976  000019f8  afc20000	sw	(r30),r2
  977  000019fc  0bffff8c	j	L41_LF2
  978  00001a00  54000000	nop; delay slot nop
  979  00001a04          	L42_LF2:
  980  00001a04  20010000	addi	r1,r0,#0
  981  00001a08  08000004	j	L40_LF2
  982  00001a0c  54000000	nop; delay slot nop
  983  00001a10          	L40_LF2:
  984  00001a10  8fa20000	lw	r2,0(r29)
  985  00001a14  8fdffff8	lw	r31,-8(r30)
  986  00001a18  001ee820	add	r29,r0,r30
  987  00001a1c  8fdefffc	lw	r30,-4(r30)
  988  00001a20  4be00000	jr	r31
  989  00001a24  54000000	nop
  990  00001a28          	.endproc _dstrstr
  991  00001a28          	.align 2
  992  00001a28          	.proc _dmindex
  993  00001a28          	.global _dmindex
  994  00001a28          	_dmindex:
  995                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  996  00001a28  afbefffc	sw	-4(r29),r30; push fp
  997  00001a2c  001df020	add	r30,r0,r29; fp = sp
  998  00001a30  afbffff8	sw	-8(r29),r31; push ret addr
  999  00001a34  2fbd0018	subui	r29,r29,#24; alloc local storage
 1000  00001a38  afa20000	sw	0(r29),r2
 1001  00001a3c  54000000	nop
 1002  00001a40          	L46_LF2:
 1003  00001a40  8fc10000	lw	r1,(r30)
 1004  00001a44  90220000	lbu	r2,(r1)
 1005  00001a48  64410000	snei	r1,r2,#0
 1006  00001a4c  1420000c	bnez	r1,L48_LF2
 1007  00001a50  54000000	nop; delay slot nop
 1008  00001a54  08000070	j	L47_LF2
 1009  00001a58  54000000	nop; delay slot nop
 1010  00001a5c          	L48_LF2:
 1011  00001a5c  8fc10004	lw	r1,4(r30)
 1012  00001a60  afc1fff4	sw	-12(r30),r1
 1013  00001a64          	L49_LF2:
 1014  00001a64  8fc1fff4	lw	r1,-12(r30)
 1015  00001a68  90220000	lbu	r2,(r1)
 1016  00001a6c  64410000	snei	r1,r2,#0
 1017  00001a70  1420000c	bnez	r1,L52_LF2
 1018  00001a74  54000000	nop; delay slot nop
 1019  00001a78  08000044	j	L50_LF2
 1020  00001a7c  54000000	nop; delay slot nop
 1021  00001a80          	L52_LF2:
 1022  00001a80  8fc10000	lw	r1,(r30)
 1023  00001a84  8fc2fff4	lw	r2,-12(r30)
 1024  00001a88  90210000	lbu	r1,(r1)
 1025  00001a8c  90420000	lbu	r2,(r2)
 1026  00001a90  00220828	seq	r1,r1,r2
 1027  00001a94  10200010	beqz	r1,L51_LF2
 1028  00001a98  54000000	nop; delay slot nop
 1029  00001a9c  8fc10000	lw	r1,(r30)
 1030  00001aa0  08000030	j	L45_LF2
 1031  00001aa4  54000000	nop; delay slot nop
 1032  00001aa8          	L53_LF2:
 1033  00001aa8          	L51_LF2:
 1034  00001aa8  8fc2fff4	lw	r2,-12(r30)
 1035  00001aac  20410001	addi	r1,r2,#1
 1036  00001ab0  00011020	add	r2,r0,r1
 1037  00001ab4  afc2fff4	sw	-12(r30),r2
 1038  00001ab8  0bffffa8	j	L49_LF2
 1039  00001abc  54000000	nop; delay slot nop
 1040  00001ac0          	L50_LF2:
 1041  00001ac0  0bffff7c	j	L46_LF2
 1042  00001ac4  54000000	nop; delay slot nop
 1043  00001ac8          	L47_LF2:
 1044  00001ac8  20010000	addi	r1,r0,#0
 1045  00001acc  08000004	j	L45_LF2
 1046  00001ad0  54000000	nop; delay slot nop
 1047  00001ad4          	L45_LF2:
 1048  00001ad4  8fa20000	lw	r2,0(r29)
 1049  00001ad8  8fdffff8	lw	r31,-8(r30)
 1050  00001adc  001ee820	add	r29,r0,r30
 1051  00001ae0  8fdefffc	lw	r30,-4(r30)
 1052  00001ae4  4be00000	jr	r31
 1053  00001ae8  54000000	nop
 1054  00001aec          	.endproc _dmindex
 1055  00001aec          	.align 2
 1056  00001aec          	.proc _dindex
 1057  00001aec          	.global _dindex
 1058  00001aec          	_dindex:
 1059                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1060  00001aec  afbefffc	sw	-4(r29),r30; push fp
 1061  00001af0  001df020	add	r30,r0,r29; fp = sp
 1062  00001af4  afbffff8	sw	-8(r29),r31; push ret addr
 1063  00001af8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1064  00001afc  afa20000	sw	0(r29),r2
 1065  00001b00  54000000	nop
 1066  00001b04          	L55_LF2:
 1067  00001b04  8fc10000	lw	r1,(r30)
 1068  00001b08  90220000	lbu	r2,(r1)
 1069  00001b0c  64410000	snei	r1,r2,#0
 1070  00001b10  1420000c	bnez	r1,L57_LF2
 1071  00001b14  54000000	nop; delay slot nop
 1072  00001b18  08000040	j	L56_LF2
 1073  00001b1c  54000000	nop; delay slot nop
 1074  00001b20          	L57_LF2:
 1075  00001b20  8fc10000	lw	r1,(r30)
 1076  00001b24  90220000	lbu	r2,(r1)
 1077  00001b28  8fc10004	lw	r1,4(r30)
 1078  00001b2c  00411028	seq	r2,r2,r1
 1079  00001b30  10400010	beqz	r2,L58_LF2
 1080  00001b34  54000000	nop; delay slot nop
 1081  00001b38  8fc10000	lw	r1,(r30)
 1082  00001b3c  08000028	j	L54_LF2
 1083  00001b40  54000000	nop; delay slot nop
 1084  00001b44          	L58_LF2:
 1085  00001b44  8fc20000	lw	r2,(r30)
 1086  00001b48  20410001	addi	r1,r2,#1
 1087  00001b4c  00011020	add	r2,r0,r1
 1088  00001b50  afc20000	sw	(r30),r2
 1089  00001b54  0bffffac	j	L55_LF2
 1090  00001b58  54000000	nop; delay slot nop
 1091  00001b5c          	L56_LF2:
 1092  00001b5c  20010000	addi	r1,r0,#0
 1093  00001b60  08000004	j	L54_LF2
 1094  00001b64  54000000	nop; delay slot nop
 1095  00001b68          	L54_LF2:
 1096  00001b68  8fa20000	lw	r2,0(r29)
 1097  00001b6c  8fdffff8	lw	r31,-8(r30)
 1098  00001b70  001ee820	add	r29,r0,r30
 1099  00001b74  8fdefffc	lw	r30,-4(r30)
 1100  00001b78  4be00000	jr	r31
 1101  00001b7c  54000000	nop
 1102  00001b80          	.endproc _dindex
 1103  00001b80          	.align 2
 1104  00001b80          	.proc _ditoa
 1105  00001b80          	.global _ditoa
 1106  00001b80          	_ditoa:
 1107                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1108  00001b80  afbefffc	sw	-4(r29),r30; push fp
 1109  00001b84  001df020	add	r30,r0,r29; fp = sp
 1110  00001b88  afbffff8	sw	-8(r29),r31; push ret addr
 1111  00001b8c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1112  00001b90  afa20000	sw	0(r29),r2
 1113  00001b94  afa30004	sw	4(r29),r3
 1114  00001b98  8fc10000	lw	r1,(r30)
 1115  00001b9c  68220000	slti	r2,r1,#0
 1116  00001ba0  1040002c	beqz	r2,L60_LF2
 1117  00001ba4  54000000	nop; delay slot nop
 1118  00001ba8  8fc10004	lw	r1,4(r30)
 1119  00001bac  20220001	addi	r2,r1,#1
 1120  00001bb0  afc20004	sw	4(r30),r2
 1121  00001bb4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1122  00001bb8  a0220000	sb	(r1),r2
 1123  00001bbc  8fc10000	lw	r1,(r30)
 1124  00001bc0  00011022	sub	r2,r0,r1
 1125  00001bc4  afc20000	sw	(r30),r2
 1126  00001bc8  08000118	j	L61_LF2
 1127  00001bcc  54000000	nop; delay slot nop
 1128  00001bd0          	L60_LF2:
 1129  00001bd0  8fc10000	lw	r1,(r30)
 1130  00001bd4  64220000	snei	r2,r1,#0
 1131  00001bd8  14400020	bnez	r2,L62_LF2
 1132  00001bdc  54000000	nop; delay slot nop
 1133  00001be0  8fc10004	lw	r1,4(r30)
 1134  00001be4  20220001	addi	r2,r1,#1
 1135  00001be8  afc20004	sw	4(r30),r2
 1136  00001bec  20020030	addi	r2,r0,(#0x30)&0xff
 1137  00001bf0  a0220000	sb	(r1),r2
 1138  00001bf4  080000ec	j	L61_LF2
 1139  00001bf8  54000000	nop; delay slot nop
 1140  00001bfc          	L62_LF2:
 1141  00001bfc  20010001	addi	r1,r0,#1
 1142  00001c00  afc1fff4	sw	-12(r30),r1
 1143  00001c04          	L64_LF2:
 1144  00001c04  8fc1fff4	lw	r1,-12(r30)
 1145  00001c08  8fc20000	lw	r2,(r30)
 1146  00001c0c  0022082c	sle	r1,r1,r2
 1147  00001c10  1420000c	bnez	r1,L66_LF2
 1148  00001c14  54000000	nop; delay slot nop
 1149  00001c18  08000024	j	L65_LF2
 1150  00001c1c  54000000	nop; delay slot nop
 1151  00001c20          	L67_LF2:
 1152  00001c20          	L66_LF2:
 1153  00001c20  8fc1fff4	lw	r1,-12(r30)
 1154  00001c24  00011820	add	r3,r0,r1
 1155  00001c28  50620002	slli	r2,r3,#0x2
 1156  00001c2c  00411020	add	r2,r2,r1
 1157  00001c30  50410001	slli	r1,r2,#0x1
 1158  00001c34  afc1fff4	sw	-12(r30),r1
 1159  00001c38  0bffffc8	j	L64_LF2
 1160  00001c3c  54000000	nop; delay slot nop
 1161  00001c40          	L65_LF2:
 1162  00001c40  54000000	nop
 1163  00001c44          	L68_LF2:
 1164  00001c44  8fc1fff4	lw	r1,-12(r30)
 1165  00001c48  2002000a	addi	r2,r0,#10
 1166  00001c4c  00200035	movi2fp	f0,r1
 1167  00001c50  00400835	movi2fp	f1,r2
 1168  00001c54  0401000f	div	f0,f0,f1
 1169  00001c58  00000834	movfp2i	r1,f0
 1170  00001c5c  afc1fff4	sw	-12(r30),r1
 1171  00001c60  8fc10004	lw	r1,4(r30)
 1172  00001c64  20220001	addi	r2,r1,#1
 1173  00001c68  afc20004	sw	4(r30),r2
 1174  00001c6c  8fc20000	lw	r2,(r30)
 1175  00001c70  8fc3fff4	lw	r3,-12(r30)
 1176  00001c74  00400035	movi2fp	f0,r2
 1177  00001c78  00600835	movi2fp	f1,r3
 1178  00001c7c  0401000f	div	f0,f0,f1
 1179  00001c80  00001034	movfp2i	r2,f0
 1180  00001c84  00021820	add	r3,r0,r2
 1181  00001c88  20620030	addi	r2,r3,#48
 1182  00001c8c  a0220000	sb	(r1),r2
 1183  00001c90  8fc10000	lw	r1,(r30)
 1184  00001c94  8fc3fff4	lw	r3,-12(r30)
 1185  00001c98  00200035	movi2fp	f0,r1
 1186  00001c9c  00600835	movi2fp	f1,r3
 1187  00001ca0  0401000f	div	f0,f0,f1
 1188  00001ca4  00001034	movfp2i	r2,f0
 1189  00001ca8  8fc3fff4	lw	r3,-12(r30)
 1190  00001cac  00400035	movi2fp	f0,r2
 1191  00001cb0  00600835	movi2fp	f1,r3
 1192  00001cb4  0401000e	mult	f0,f0,f1
 1193  00001cb8  00001034	movfp2i	r2,f0
 1194  00001cbc  00220822	sub	r1,r1,r2
 1195  00001cc0  afc10000	sw	(r30),r1
 1196  00001cc4          	L70_LF2:
 1197  00001cc4  8fc1fff4	lw	r1,-12(r30)
 1198  00001cc8  6c220001	sgti	r2,r1,#1
 1199  00001ccc  1440000c	bnez	r2,L71_LF2
 1200  00001cd0  54000000	nop; delay slot nop
 1201  00001cd4  0800000c	j	L61_LF2
 1202  00001cd8  54000000	nop; delay slot nop
 1203  00001cdc          	L71_LF2:
 1204  00001cdc  0bffff64	j	L68_LF2
 1205  00001ce0  54000000	nop; delay slot nop
 1206  00001ce4          	L69_LF2:
 1207  00001ce4          	L63_LF2:
 1208  00001ce4          	L61_LF2:
 1209  00001ce4  8fc10004	lw	r1,4(r30)
 1210  00001ce8  20020000	addi	r2,r0,(#0x0)&0xff
 1211  00001cec  a0220000	sb	(r1),r2
 1212  00001cf0          	L59_LF2:
 1213  00001cf0  8fa20000	lw	r2,0(r29)
 1214  00001cf4  8fa30004	lw	r3,4(r29)
 1215  00001cf8  8fdffff8	lw	r31,-8(r30)
 1216  00001cfc  001ee820	add	r29,r0,r30
 1217  00001d00  8fdefffc	lw	r30,-4(r30)
 1218  00001d04  4be00000	jr	r31
 1219  00001d08  54000000	nop
 1220  00001d0c          	.endproc _ditoa
 1221  00001d0c          	.align 2
 1222  00001d0c          	.proc _dstrtol
 1223  00001d0c          	.global _dstrtol
 1224  00001d0c          	_dstrtol:
 1225                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1226  00001d0c  afbefffc	sw	-4(r29),r30; push fp
 1227  00001d10  001df020	add	r30,r0,r29; fp = sp
 1228  00001d14  afbffff8	sw	-8(r29),r31; push ret addr
 1229  00001d18  2fbd0020	subui	r29,r29,#32; alloc local storage
 1230  00001d1c  afa20000	sw	0(r29),r2
 1231  00001d20  20010000	addi	r1,r0,#0
 1232  00001d24  afc1fff4	sw	-12(r30),r1
 1233  00001d28          	L73_LF2:
 1234  00001d28  8fc10000	lw	r1,(r30)
 1235  00001d2c  90220000	lbu	r2,(r1)
 1236  00001d30  60410020	seqi	r1,r2,#32
 1237  00001d34  14200034	bnez	r1,L75_LF2
 1238  00001d38  54000000	nop; delay slot nop
 1239  00001d3c  8fc10000	lw	r1,(r30)
 1240  00001d40  90220000	lbu	r2,(r1)
 1241  00001d44  60410009	seqi	r1,r2,#9
 1242  00001d48  14200020	bnez	r1,L75_LF2
 1243  00001d4c  54000000	nop; delay slot nop
 1244  00001d50  8fc10000	lw	r1,(r30)
 1245  00001d54  90220000	lbu	r2,(r1)
 1246  00001d58  6041000a	seqi	r1,r2,#10
 1247  00001d5c  1420000c	bnez	r1,L75_LF2
 1248  00001d60  54000000	nop; delay slot nop
 1249  00001d64  0800001c	j	L74_LF2
 1250  00001d68  54000000	nop; delay slot nop
 1251  00001d6c          	L75_LF2:
 1252  00001d6c  8fc20000	lw	r2,(r30)
 1253  00001d70  20410001	addi	r1,r2,#1
 1254  00001d74  00011020	add	r2,r0,r1
 1255  00001d78  afc20000	sw	(r30),r2
 1256  00001d7c  0bffffa8	j	L73_LF2
 1257  00001d80  54000000	nop; delay slot nop
 1258  00001d84          	L74_LF2:
 1259  00001d84  8fc10004	lw	r1,4(r30)
 1260  00001d88  64220000	snei	r2,r1,#0
 1261  00001d8c  10400010	beqz	r2,L76_LF2
 1262  00001d90  54000000	nop; delay slot nop
 1263  00001d94  8fc10004	lw	r1,4(r30)
 1264  00001d98  8fc20000	lw	r2,(r30)
 1265  00001d9c  ac220000	sw	(r1),r2
 1266  00001da0          	L76_LF2:
 1267  00001da0  8fc10000	lw	r1,(r30)
 1268  00001da4  90220000	lbu	r2,(r1)
 1269  00001da8  64410000	snei	r1,r2,#0
 1270  00001dac  14200010	bnez	r1,L77_LF2
 1271  00001db0  54000000	nop; delay slot nop
 1272  00001db4  8fc1fff4	lw	r1,-12(r30)
 1273  00001db8  08000294	j	L72_LF2
 1274  00001dbc  54000000	nop; delay slot nop
 1275  00001dc0          	L77_LF2:
 1276  00001dc0  8fc10000	lw	r1,(r30)
 1277  00001dc4  90220000	lbu	r2,(r1)
 1278  00001dc8  6041002d	seqi	r1,r2,#45
 1279  00001dcc  10200024	beqz	r1,L78_LF2
 1280  00001dd0  54000000	nop; delay slot nop
 1281  00001dd4  2001ffff	addi	r1,r0,#-1
 1282  00001dd8  afc1ffec	sw	-20(r30),r1
 1283  00001ddc  8fc20000	lw	r2,(r30)
 1284  00001de0  20410001	addi	r1,r2,#1
 1285  00001de4  00011020	add	r2,r0,r1
 1286  00001de8  afc20000	sw	(r30),r2
 1287  00001dec  0800000c	j	L79_LF2
 1288  00001df0  54000000	nop; delay slot nop
 1289  00001df4          	L78_LF2:
 1290  00001df4  20010001	addi	r1,r0,#1
 1291  00001df8  afc1ffec	sw	-20(r30),r1
 1292  00001dfc          	L79_LF2:
 1293  00001dfc  8fc10008	lw	r1,8(r30)
 1294  00001e00  64220000	snei	r2,r1,#0
 1295  00001e04  14400090	bnez	r2,L80_LF2
 1296  00001e08  54000000	nop; delay slot nop
 1297  00001e0c  8fc10000	lw	r1,(r30)
 1298  00001e10  90220000	lbu	r2,(r1)
 1299  00001e14  60410030	seqi	r1,r2,#48
 1300  00001e18  10200074	beqz	r1,L81_LF2
 1301  00001e1c  54000000	nop; delay slot nop
 1302  00001e20  8fc20000	lw	r2,(r30)
 1303  00001e24  20410001	addi	r1,r2,#1
 1304  00001e28  00011020	add	r2,r0,r1
 1305  00001e2c  afc20000	sw	(r30),r2
 1306  00001e30  8fc10000	lw	r1,(r30)
 1307  00001e34  90220000	lbu	r2,(r1)
 1308  00001e38  60410078	seqi	r1,r2,#120
 1309  00001e3c  14200020	bnez	r1,L83_LF2
 1310  00001e40  54000000	nop; delay slot nop
 1311  00001e44  8fc10000	lw	r1,(r30)
 1312  00001e48  90220000	lbu	r2,(r1)
 1313  00001e4c  60410058	seqi	r1,r2,#88
 1314  00001e50  1420000c	bnez	r1,L83_LF2
 1315  00001e54  54000000	nop; delay slot nop
 1316  00001e58  08000024	j	L82_LF2
 1317  00001e5c  54000000	nop; delay slot nop
 1318  00001e60          	L83_LF2:
 1319  00001e60  20010010	addi	r1,r0,#16
 1320  00001e64  afc10008	sw	8(r30),r1
 1321  00001e68  8fc20000	lw	r2,(r30)
 1322  00001e6c  20410001	addi	r1,r2,#1
 1323  00001e70  00011020	add	r2,r0,r1
 1324  00001e74  afc20000	sw	(r30),r2
 1325  00001e78  0800000c	j	L84_LF2
 1326  00001e7c  54000000	nop; delay slot nop
 1327  00001e80          	L82_LF2:
 1328  00001e80  20010008	addi	r1,r0,#8
 1329  00001e84  afc10008	sw	8(r30),r1
 1330  00001e88          	L84_LF2:
 1331  00001e88  0800000c	j	L80_LF2
 1332  00001e8c  54000000	nop; delay slot nop
 1333  00001e90          	L81_LF2:
 1334  00001e90  2001000a	addi	r1,r0,#10
 1335  00001e94  afc10008	sw	8(r30),r1
 1336  00001e98          	L85_LF2:
 1337  00001e98          	L80_LF2:
 1338  00001e98  8fc10008	lw	r1,8(r30)
 1339  00001e9c  70220000	slei	r2,r1,#0
 1340  00001ea0  1440001c	bnez	r2,L87_LF2
 1341  00001ea4  54000000	nop; delay slot nop
 1342  00001ea8  8fc10008	lw	r1,8(r30)
 1343  00001eac  6c220010	sgti	r2,r1,#16
 1344  00001eb0  1440000c	bnez	r2,L87_LF2
 1345  00001eb4  54000000	nop; delay slot nop
 1346  00001eb8  08000010	j	L86_LF2
 1347  00001ebc  54000000	nop; delay slot nop
 1348  00001ec0          	L87_LF2:
 1349  00001ec0  8fc1fff4	lw	r1,-12(r30)
 1350  00001ec4  08000188	j	L72_LF2
 1351  00001ec8  54000000	nop; delay slot nop
 1352  00001ecc          	L86_LF2:
 1353  00001ecc  54000000	nop
 1354  00001ed0          	L88_LF2:
 1355  00001ed0  8fc10000	lw	r1,(r30)
 1356  00001ed4  90220000	lbu	r2,(r1)
 1357  00001ed8  6c41002f	sgtui	r1,r2,#47
 1358  00001edc  10200030	beqz	r1,L91_LF2
 1359  00001ee0  54000000	nop; delay slot nop
 1360  00001ee4  8fc10000	lw	r1,(r30)
 1361  00001ee8  90220000	lbu	r2,(r1)
 1362  00001eec  70410039	sleui	r1,r2,#57
 1363  00001ef0  1020001c	beqz	r1,L91_LF2
 1364  00001ef4  54000000	nop; delay slot nop
 1365  00001ef8  8fc10000	lw	r1,(r30)
 1366  00001efc  90220000	lbu	r2,(r1)
 1367  00001f00  2041ffd0	addi	r1,r2,#-48
 1368  00001f04  afc1fff0	sw	-16(r30),r1
 1369  00001f08  0800008c	j	L92_LF2
 1370  00001f0c  54000000	nop; delay slot nop
 1371  00001f10          	L91_LF2:
 1372  00001f10  8fc10000	lw	r1,(r30)
 1373  00001f14  90220000	lbu	r2,(r1)
 1374  00001f18  6c410060	sgtui	r1,r2,#96
 1375  00001f1c  10200030	beqz	r1,L93_LF2
 1376  00001f20  54000000	nop; delay slot nop
 1377  00001f24  8fc10000	lw	r1,(r30)
 1378  00001f28  90220000	lbu	r2,(r1)
 1379  00001f2c  7041007a	sleui	r1,r2,#122
 1380  00001f30  1020001c	beqz	r1,L93_LF2
 1381  00001f34  54000000	nop; delay slot nop
 1382  00001f38  8fc10000	lw	r1,(r30)
 1383  00001f3c  90220000	lbu	r2,(r1)
 1384  00001f40  2041ffa9	addi	r1,r2,#-87
 1385  00001f44  afc1fff0	sw	-16(r30),r1
 1386  00001f48  0800004c	j	L92_LF2
 1387  00001f4c  54000000	nop; delay slot nop
 1388  00001f50          	L93_LF2:
 1389  00001f50  8fc10000	lw	r1,(r30)
 1390  00001f54  90220000	lbu	r2,(r1)
 1391  00001f58  6c410040	sgtui	r1,r2,#64
 1392  00001f5c  10200030	beqz	r1,L95_LF2
 1393  00001f60  54000000	nop; delay slot nop
 1394  00001f64  8fc10000	lw	r1,(r30)
 1395  00001f68  90220000	lbu	r2,(r1)
 1396  00001f6c  7041005a	sleui	r1,r2,#90
 1397  00001f70  1020001c	beqz	r1,L95_LF2
 1398  00001f74  54000000	nop; delay slot nop
 1399  00001f78  8fc10000	lw	r1,(r30)
 1400  00001f7c  90220000	lbu	r2,(r1)
 1401  00001f80  2041ffc9	addi	r1,r2,#-55
 1402  00001f84  afc1fff0	sw	-16(r30),r1
 1403  00001f88  0800000c	j	L92_LF2
 1404  00001f8c  54000000	nop; delay slot nop
 1405  00001f90          	L95_LF2:
 1406  00001f90  200103e8	addi	r1,r0,#1000
 1407  00001f94  afc1fff0	sw	-16(r30),r1
 1408  00001f98          	L96_LF2:
 1409  00001f98          	L94_LF2:
 1410  00001f98          	L92_LF2:
 1411  00001f98  8fc1fff0	lw	r1,-16(r30)
 1412  00001f9c  8fc20008	lw	r2,8(r30)
 1413  00001fa0  0022082a	slt	r1,r1,r2
 1414  00001fa4  10200040	beqz	r1,L90_LF2
 1415  00001fa8  54000000	nop; delay slot nop
 1416  00001fac  8fc1fff4	lw	r1,-12(r30)
 1417  00001fb0  8fc20008	lw	r2,8(r30)
 1418  00001fb4  00200035	movi2fp	f0,r1
 1419  00001fb8  00400835	movi2fp	f1,r2
 1420  00001fbc  0401000e	mult	f0,f0,f1
 1421  00001fc0  00000834	movfp2i	r1,f0
 1422  00001fc4  afc1fff4	sw	-12(r30),r1
 1423  00001fc8  8fc1fff4	lw	r1,-12(r30)
 1424  00001fcc  8fc2fff0	lw	r2,-16(r30)
 1425  00001fd0  00220820	add	r1,r1,r2
 1426  00001fd4  afc1fff4	sw	-12(r30),r1
 1427  00001fd8  8fc20000	lw	r2,(r30)
 1428  00001fdc  20410001	addi	r1,r2,#1
 1429  00001fe0  00011020	add	r2,r0,r1
 1430  00001fe4  afc20000	sw	(r30),r2
 1431  00001fe8          	L97_LF2:
 1432  00001fe8          	L90_LF2:
 1433  00001fe8  8fc1fff0	lw	r1,-16(r30)
 1434  00001fec  8fc20008	lw	r2,8(r30)
 1435  00001ff0  0022082a	slt	r1,r1,r2
 1436  00001ff4  1420000c	bnez	r1,L98_LF2
 1437  00001ff8  54000000	nop; delay slot nop
 1438  00001ffc  0800000c	j	L89_LF2
 1439  00002000  54000000	nop; delay slot nop
 1440  00002004          	L98_LF2:
 1441  00002004  0bfffec8	j	L88_LF2
 1442  00002008  54000000	nop; delay slot nop
 1443  0000200c          	L89_LF2:
 1444  0000200c  8fc10004	lw	r1,4(r30)
 1445  00002010  64220000	snei	r2,r1,#0
 1446  00002014  10400010	beqz	r2,L99_LF2
 1447  00002018  54000000	nop; delay slot nop
 1448  0000201c  8fc10004	lw	r1,4(r30)
 1449  00002020  8fc20000	lw	r2,(r30)
 1450  00002024  ac220000	sw	(r1),r2
 1451  00002028          	L99_LF2:
 1452  00002028  8fc1fff4	lw	r1,-12(r30)
 1453  0000202c  8fc2ffec	lw	r2,-20(r30)
 1454  00002030  00200035	movi2fp	f0,r1
 1455  00002034  00400835	movi2fp	f1,r2
 1456  00002038  0401000e	mult	f0,f0,f1
 1457  0000203c  00000834	movfp2i	r1,f0
 1458  00002040  afc1fff4	sw	-12(r30),r1
 1459  00002044  8fc1fff4	lw	r1,-12(r30)
 1460  00002048  08000004	j	L72_LF2
 1461  0000204c  54000000	nop; delay slot nop
 1462  00002050          	L72_LF2:
 1463  00002050  8fa20000	lw	r2,0(r29)
 1464  00002054  8fdffff8	lw	r31,-8(r30)
 1465  00002058  001ee820	add	r29,r0,r30
 1466  0000205c  8fdefffc	lw	r30,-4(r30)
 1467  00002060  4be00000	jr	r31
 1468  00002064  54000000	nop
 1469  00002068          	.endproc _dstrtol
 1470  00002068          	.align 2
 1471  00002068          	.proc _bcopy
 1472  00002068          	.global _bcopy
 1473  00002068          	_bcopy:
 1474                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1475  00002068  afbefffc	sw	-4(r29),r30; push fp
 1476  0000206c  001df020	add	r30,r0,r29; fp = sp
 1477  00002070  afbffff8	sw	-8(r29),r31; push ret addr
 1478  00002074  2fbd0010	subui	r29,r29,#16; alloc local storage
 1479  00002078  afa20000	sw	0(r29),r2
 1480  0000207c  afa30004	sw	4(r29),r3
 1481  00002080  54000000	nop
 1482  00002084          	L101_LF2:
 1483  00002084  8fc10008	lw	r1,8(r30)
 1484  00002088  2022ffff	addi	r2,r1,#-1
 1485  0000208c  afc20008	sw	8(r30),r2
 1486  00002090  6c210000	sgti	r1,r1,#0
 1487  00002094  1420000c	bnez	r1,L103_LF2
 1488  00002098  54000000	nop; delay slot nop
 1489  0000209c  0800002c	j	L102_LF2
 1490  000020a0  54000000	nop; delay slot nop
 1491  000020a4          	L103_LF2:
 1492  000020a4  8fc10004	lw	r1,4(r30)
 1493  000020a8  20220001	addi	r2,r1,#1
 1494  000020ac  afc20004	sw	4(r30),r2
 1495  000020b0  8fc20000	lw	r2,(r30)
 1496  000020b4  20430001	addi	r3,r2,#1
 1497  000020b8  afc30000	sw	(r30),r3
 1498  000020bc  80420000	lb	r2,(r2)
 1499  000020c0  a0220000	sb	(r1),r2
 1500  000020c4  0bffffbc	j	L101_LF2
 1501  000020c8  54000000	nop; delay slot nop
 1502  000020cc          	L102_LF2:
 1503  000020cc          	L100_LF2:
 1504  000020cc  8fa20000	lw	r2,0(r29)
 1505  000020d0  8fa30004	lw	r3,4(r29)
 1506  000020d4  8fdffff8	lw	r31,-8(r30)
 1507  000020d8  001ee820	add	r29,r0,r30
 1508  000020dc  8fdefffc	lw	r30,-4(r30)
 1509  000020e0  4be00000	jr	r31
 1510  000020e4  54000000	nop
 1511  000020e8          	.endproc _bcopy
 1512  000020e8          	.align 2
 1513  000020e8          	.proc _bzero
 1514  000020e8          	.global _bzero
 1515  000020e8          	_bzero:
 1516                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1517  000020e8  afbefffc	sw	-4(r29),r30; push fp
 1518  000020ec  001df020	add	r30,r0,r29; fp = sp
 1519  000020f0  afbffff8	sw	-8(r29),r31; push ret addr
 1520  000020f4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1521  000020f8  afa20000	sw	0(r29),r2
 1522  000020fc  54000000	nop
 1523  00002100          	L105_LF2:
 1524  00002100  8fc10004	lw	r1,4(r30)
 1525  00002104  2022ffff	addi	r2,r1,#-1
 1526  00002108  afc20004	sw	4(r30),r2
 1527  0000210c  6c210000	sgti	r1,r1,#0
 1528  00002110  1420000c	bnez	r1,L107_LF2
 1529  00002114  54000000	nop; delay slot nop
 1530  00002118  08000020	j	L106_LF2
 1531  0000211c  54000000	nop; delay slot nop
 1532  00002120          	L107_LF2:
 1533  00002120  8fc10000	lw	r1,(r30)
 1534  00002124  20220001	addi	r2,r1,#1
 1535  00002128  afc20000	sw	(r30),r2
 1536  0000212c  20020000	addi	r2,r0,(#0x0)&0xff
 1537  00002130  a0220000	sb	(r1),r2
 1538  00002134  0bffffc8	j	L105_LF2
 1539  00002138  54000000	nop; delay slot nop
 1540  0000213c          	L106_LF2:
 1541  0000213c          	L104_LF2:
 1542  0000213c  8fa20000	lw	r2,0(r29)
 1543  00002140  8fdffff8	lw	r31,-8(r30)
 1544  00002144  001ee820	add	r29,r0,r30
 1545  00002148  8fdefffc	lw	r30,-4(r30)
 1546  0000214c  4be00000	jr	r31
 1547  00002150  54000000	nop
 1548  00002154          	.endproc _bzero
 1549  00002154          	.align 2
 1550  00002154          	.proc _min
 1551  00002154          	.global _min
 1552  00002154          	_min:
 1553                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1554  00002154  afbefffc	sw	-4(r29),r30; push fp
 1555  00002158  001df020	add	r30,r0,r29; fp = sp
 1556  0000215c  afbffff8	sw	-8(r29),r31; push ret addr
 1557  00002160  2fbd0010	subui	r29,r29,#16; alloc local storage
 1558  00002164  afa20000	sw	0(r29),r2
 1559  00002168  afa30004	sw	4(r29),r3
 1560  0000216c  8fc10000	lw	r1,(r30)
 1561  00002170  8fc20004	lw	r2,4(r30)
 1562  00002174  0022182c	sle	r3,r1,r2
 1563  00002178  14600008	bnez	r3,L109_LF2
 1564  0000217c  54000000	nop; delay slot nop
 1565  00002180  8fc10004	lw	r1,4(r30)
 1566  00002184          	L109_LF2:
 1567  00002184  08000004	j	L108_LF2
 1568  00002188  54000000	nop; delay slot nop
 1569  0000218c          	L108_LF2:
 1570  0000218c  8fa20000	lw	r2,0(r29)
 1571  00002190  8fa30004	lw	r3,4(r29)
 1572  00002194  8fdffff8	lw	r31,-8(r30)
 1573  00002198  001ee820	add	r29,r0,r30
 1574  0000219c  8fdefffc	lw	r30,-4(r30)
 1575  000021a0  4be00000	jr	r31
 1576  000021a4  54000000	nop
 1577  000021a8          	.endproc _min
 1578  000021a8          	.align 2
 1579  000021a8          	.proc _max
 1580  000021a8          	.global _max
 1581  000021a8          	_max:
 1582                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1583  000021a8  afbefffc	sw	-4(r29),r30; push fp
 1584  000021ac  001df020	add	r30,r0,r29; fp = sp
 1585  000021b0  afbffff8	sw	-8(r29),r31; push ret addr
 1586  000021b4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1587  000021b8  afa20000	sw	0(r29),r2
 1588  000021bc  afa30004	sw	4(r29),r3
 1589  000021c0  8fc10000	lw	r1,(r30)
 1590  000021c4  8fc20004	lw	r2,4(r30)
 1591  000021c8  0022182d	sge	r3,r1,r2
 1592  000021cc  14600008	bnez	r3,L111_LF2
 1593  000021d0  54000000	nop; delay slot nop
 1594  000021d4  8fc10004	lw	r1,4(r30)
 1595  000021d8          	L111_LF2:
 1596  000021d8  08000004	j	L110_LF2
 1597  000021dc  54000000	nop; delay slot nop
 1598  000021e0          	L110_LF2:
 1599  000021e0  8fa20000	lw	r2,0(r29)
 1600  000021e4  8fa30004	lw	r3,4(r29)
 1601  000021e8  8fdffff8	lw	r31,-8(r30)
 1602  000021ec  001ee820	add	r29,r0,r30
 1603  000021f0  8fdefffc	lw	r30,-4(r30)
 1604  000021f4  4be00000	jr	r31
 1605  000021f8  54000000	nop
 1606  000021fc          	.endproc _max
 1607                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1608                      ;;;
 1609                      ;;; Most of the traps are called in files from libtraps.
 1612  000021fc          	.align 2
 1613  000021fc          	.proc _exit
 1614  000021fc          	.global _exit
 1615  000021fc          	_exit:
 1616  000021fc  44000300	trap	#0x300
 1617  00002200  4be00000	jr	r31
 1618  00002204  54000000	nop
 1619  00002208          	.endproc _exit
 1621                      ; for the benefit of gcc.
 1622  00002208          	.proc ___main
 1623  00002208          	.global ___main
 1624  00002208          	___main:
 1625  00002208  4be00000	jr	r31
 1626  0000220c  54000000	nop
 1627  00002210          	.endproc ___main
 1628  00002210          	.text
 1629  00002210          	.global _etext
 1630  00002210          	_etext:
 1631  00002210          	.align 3
 1632  00002210          	.data
 1633  0000317e          	.global _edata
 1634  0000317e          	_edata:
