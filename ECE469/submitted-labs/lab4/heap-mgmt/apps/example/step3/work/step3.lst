 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 459
    4                      ; Text size: 4428
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  0a546865	.ascii "\nThe Test Program 3 - accessing memory inside virtual address, but ou"
   85  00003038  20546573	
   85  0000303c  74205072	
   85  00003040  6f677261	
   85  00003044  6d203320	
   85  00003048  2d206163	
   85  0000304c  63657373	
   85  00003050  696e6720	
   85  00003054  6d656d6f	
   85  00003058  72792069	
   85  0000305c  6e736964	
   85  00003060  65207669	
   85  00003064  72747561	
   85  00003068  6c206164	
   85  0000306c  64726573	
   85  00003070  732c2062	
   85  00003074  7574206f	
   85  00003078  75      	
   86  00003079  74736964	.ascii "tside of allocated pages..\000"
   86  0000307d  65206f66	
   86  00003081  20616c6c	
   86  00003085  6f636174	
   86  00003089  65642070	
   86  0000308d  61676573	
   86  00003091  2e2e00  	
   87  00003094          	.align 2
   88  00003094          	LC2_LF0:
   89  00003094  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   89  00003098  6f5f776f	
   89  0000309c  726c6420	
   89  000030a0  28256429	
   89  000030a4  3a204261	
   89  000030a8  64207365	
   89  000030ac  6d617068	
   89  000030b0  6f726520	
   89  000030b4  735f7072	
   89  000030b8  6f63735f	
   89  000030bc  636f6d70	
   89  000030c0  6c657465	
   89  000030c4  64202825	
   89  000030c8  6429210a	
   89  000030cc  00      	
   90  000030cd          	.align 2
   91  000030d0          	LC3_LF0:
   92  000030d0  0a4d6178	.ascii "\nMaximum Virtual Address that can be accessed: %d\n\000"
   92  000030d4  696d756d	
   92  000030d8  20566972	
   92  000030dc  7475616c	
   92  000030e0  20416464	
   92  000030e4  72657373	
   92  000030e8  20746861	
   92  000030ec  74206361	
   92  000030f0  6e206265	
   92  000030f4  20616363	
   92  000030f8  65737365	
   92  000030fc  643a2025	
   92  00003100  640a00  	
   93  00003103          	.align 2
   94  00003104          	LC4_LF0:
   95  00003104  0a4d454d	.ascii "\nMEM_PAGESIZE = %d\n\000"
   95  00003108  5f504147	
   95  0000310c  4553495a	
   95  00003110  45203d20	
   95  00003114  25640a00	
   96  00003118          	.align 2
   97  00003118          	LC5_LF0:
   98  00003118  0a416363	.ascii "\nAccessing within bounds Memory Location in decimal representation : "
   98  0000311c  65737369	
   98  00003120  6e672077	
   98  00003124  69746869	
   98  00003128  6e20626f	
   98  0000312c  756e6473	
   98  00003130  204d656d	
   98  00003134  6f727920	
   98  00003138  4c6f6361	
   98  0000313c  74696f6e	
   98  00003140  20696e20	
   98  00003144  64656369	
   98  00003148  6d616c20	
   98  0000314c  72657072	
   98  00003150  6573656e	
   98  00003154  74617469	
   98  00003158  6f6e203a	
   98  0000315c  20      	
   99  0000315d  2564200a	.ascii "%d \n\000"
   99  00003161  00      	
  100  00003162          	.align 2
  101  00003164          	LC6_LF0:
  102  00003164  0a456e64	.ascii "\nEnd of The Test Program 3 - accessing memory inside virtual address,"
  102  00003168  206f6620	
  102  0000316c  54686520	
  102  00003170  54657374	
  102  00003174  2050726f	
  102  00003178  6772616d	
  102  0000317c  2033202d	
  102  00003180  20616363	
  102  00003184  65737369	
  102  00003188  6e67206d	
  102  0000318c  656d6f72	
  102  00003190  7920696e	
  102  00003194  73696465	
  102  00003198  20766972	
  102  0000319c  7475616c	
  102  000031a0  20616464	
  102  000031a4  72657373	
  102  000031a8  2c      	
  103  000031a9  20627574	.ascii " but outside of allocated pages..\000"
  103  000031ad  206f7574	
  103  000031b1  73696465	
  103  000031b5  206f6620	
  103  000031b9  616c6c6f	
  103  000031bd  63617465	
  103  000031c1  64207061	
  103  000031c5  6765732e	
  103  000031c9  2e00    	
  104  000031cb          	.text
  105  000010d4          	.align 2
  106  000010d4          	.proc _main
  107  000010d4          	.global _main
  108  000010d4          	_main:
  109                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  110  000010d4  afbefffc	sw	-4(r29),r30; push fp
  111  000010d8  001df020	add	r30,r0,r29; fp = sp
  112  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  113  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  114  000010e4  8fc20000	lw	r2,(r30)
  115  000010e8  8fc30004	lw	r3,4(r30)
  116  000010ec  0c001054	jal	___main
  117  000010f0  54000000	nop; not filled.
  118  000010f4  64410002	snei	r1,r2,#2
  119  000010f8  10200028	beqz	r1,L17_LF0
  120  000010fc  54000000	nop; not filled.
  121  00001100  23bdfff8	addi	r29,r29,#-8
  122  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  123  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  124  0000110c  afa40000	sw	(r29),r4
  125  00001110  0c000170	jal	_Printf
  126  00001114  54000000	nop; not filled.
  127  00001118  0c000270	jal	_Exit
  128  0000111c  54000000	nop; not filled.
  129  00001120  23bd0008	addi	r29,r29,#8
  130  00001124          	L17_LF0:
  131  00001124  23bdfff0	addi	r29,r29,#-16
  132  00001128  8c630004	lw	r3,4(r3)
  133  0000112c  afa30000	sw	(r29),r3
  134  00001130  20040000	addi	r4,r0,#0
  135  00001134  afa40004	sw	4(r29),r4
  136  00001138  2004000a	addi	r4,r0,#10
  137  0000113c  afa40008	sw	8(r29),r4
  138  00001140  0c000b04	jal	_dstrtol
  139  00001144  54000000	nop; not filled.
  140  00001148  00011020	add	r2,r0,r1
  141  0000114c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  142  00001150  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  143  00001154  afa40000	sw	(r29),r4
  144  00001158  0c000128	jal	_Printf
  145  0000115c  54000000	nop; not filled.
  146  00001160  afa20000	sw	(r29),r2
  147  00001164  0c000170	jal	_sem_signal
  148  00001168  54000000	nop; not filled.
  149  0000116c  23bd0010	addi	r29,r29,#16
  150  00001170  64210001	snei	r1,r1,#1
  151  00001174  10200038	beqz	r1,L18_LF0
  152  00001178  54000000	nop; not filled.
  153  0000117c  0c000110	jal	_getpid
  154  00001180  54000000	nop; not filled.
  155  00001184  23bdfff0	addi	r29,r29,#-16
  156  00001188  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  157  0000118c  24843094	addui	r4,r4,(LC2_LF0)&0xffff
  158  00001190  afa40000	sw	(r29),r4
  159  00001194  afa10004	sw	4(r29),r1
  160  00001198  afa20008	sw	8(r29),r2
  161  0000119c  0c0000e4	jal	_Printf
  162  000011a0  54000000	nop; not filled.
  163  000011a4  0c0001e4	jal	_Exit
  164  000011a8  54000000	nop; not filled.
  165  000011ac  23bd0010	addi	r29,r29,#16
  166  000011b0          	L18_LF0:
  167  000011b0  3c020009	lhi	r2,#9
  168  000011b4  24421000	addui	r2,r2,#4096
  169  000011b8  23bdfff8	addi	r29,r29,#-8
  170  000011bc  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  171  000011c0  248430d0	addui	r4,r4,(LC3_LF0)&0xffff
  172  000011c4  afa40000	sw	(r29),r4
  173  000011c8  3c01003f	lhi	r1,#63
  174  000011cc  2421ffff	addui	r1,r1,#65535
  175  000011d0  afa10004	sw	4(r29),r1
  176  000011d4  0c0000ac	jal	_Printf
  177  000011d8  54000000	nop; not filled.
  178  000011dc  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  179  000011e0  24843104	addui	r4,r4,(LC4_LF0)&0xffff
  180  000011e4  afa40000	sw	(r29),r4
  181  000011e8  20041000	addi	r4,r0,#4096
  182  000011ec  afa40004	sw	4(r29),r4
  183  000011f0  0c000090	jal	_Printf
  184  000011f4  54000000	nop; not filled.
  185  000011f8  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  186  000011fc  24843118	addui	r4,r4,(LC5_LF0)&0xffff
  187  00001200  afa40000	sw	(r29),r4
  188  00001204  afa20004	sw	4(r29),r2
  189  00001208  0c000078	jal	_Printf
  190  0000120c  54000000	nop; not filled.
  191  00001210  3c04abcd	lhi	r4,#-21555
  192  00001214  24841100	addui	r4,r4,#4352
  193  00001218  ac440000	sw	(r2),r4
  194  0000121c  3c040000	lhi	r4,((LC6_LF0)>>16)&0xffff
  195  00001220  24843164	addui	r4,r4,(LC6_LF0)&0xffff
  196  00001224  afa40000	sw	(r29),r4
  197  00001228  0c000058	jal	_Printf
  198  0000122c  54000000	nop; not filled.
  199  00001230  23bd0008	addi	r29,r29,#8
  200  00001234  0c000f00	jal	_exit
  201  00001238  54000000	nop
  202  0000123c          	.endproc _main
  203                      ;;;
  204                      ;;; Stub functions for DLX traps.
  205                      ;;;
  206                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  207                      ;;;
  208                      ;;; The traps such as Open and Close
  209                      ;;; (note the capital letters) are for use by user programs.  The traps
  210                      ;;; with names such as open and close (lower case) are for use by the OS.
  211                      ;;;
  214  0000123c          	.align 2
  216                      ;;; The following are the traps to be used by user-level programs
  217                      ;;;
  219  0000123c          	.align 2
  220  0000123c          	.proc _Open
  221  0000123c          	.global _Open
  222  0000123c          	_Open:
  223                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  224                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  225                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  226  0000123c  44000213	trap	#0x213
  227  00001240  4be00000	jr	r31
  228  00001244  54000000	nop
  229  00001248          	.endproc _Open
  231  00001248          	.proc _Close
  232  00001248          	.global _Close
  233  00001248          	_Close:
  234  00001248  44000214	trap	#0x214
  235  0000124c  4be00000	jr	r31
  236  00001250  54000000	nop
  237  00001254          	.endproc _Close
  239  00001254          	.proc _Read
  240  00001254          	.global _Read
  241  00001254          	_Read:
  242  00001254  44000210	trap	#0x210
  243  00001258  4be00000	jr	r31
  244  0000125c  54000000	nop
  245  00001260          	.endproc _Read
  247  00001260          	.proc _Write
  248  00001260          	.global _Write
  249  00001260          	_Write:
  250  00001260  44000211	trap	#0x211
  251  00001264  4be00000	jr	r31
  252  00001268  54000000	nop
  253  0000126c          	.endproc _Write
  255  0000126c          	.proc _Lseek
  256  0000126c          	.global _Lseek
  257  0000126c          	_Lseek:
  258  0000126c  44000212	trap	#0x212
  259  00001270  4be00000	jr	r31
  260  00001274  54000000	nop
  261  00001278          	.endproc _Lseek
  263  00001278          	.proc _Putchar
  264  00001278          	.global _Putchar
  265  00001278          	_Putchar:
  266  00001278  44000280	trap	#0x280
  267  0000127c  4be00000	jr	r31
  268  00001280  54000000	nop
  269  00001284          	.endproc _Putchar
  271  00001284          	.proc _Printf
  272  00001284          	.global _Printf
  273  00001284          	_Printf:
  274  00001284  44000201	trap	#0x201
  275  00001288  4be00000	jr	r31
  276  0000128c  54000000	nop
  277  00001290          	.endproc _Printf
  279  00001290          	.proc _getpid
  280  00001290          	.global _getpid
  281  00001290          	_getpid:
  282  00001290  44000431	trap	#0x431
  283  00001294  4be00000	jr	r31
  284  00001298  54000000	nop
  285  0000129c          	.endproc _getpid
  287  0000129c          	.proc _process_create
  288  0000129c          	.global _process_create
  289  0000129c          	_process_create:
  290  0000129c  44000432	trap	#0x432
  291  000012a0  4be00000	jr	r31
  292  000012a4  54000000	nop
  293  000012a8          	.endproc _process_create
  295  000012a8          	.proc _shmget
  296  000012a8          	.global _shmget
  297  000012a8          	_shmget:
  298  000012a8  44000440	trap	#0x440
  299  000012ac  4be00000	jr	r31
  300  000012b0  54000000	nop
  301  000012b4          	.endproc _shmget
  303  000012b4          	.proc _shmat
  304  000012b4          	.global _shmat
  305  000012b4          	_shmat:
  306  000012b4  44000441	trap	#0x441
  307  000012b8  4be00000	jr	r31
  308  000012bc  54000000	nop
  309  000012c0          	.endproc _shmat
  311  000012c0          	.proc _sem_create
  312  000012c0          	.global _sem_create
  313  000012c0          	_sem_create:
  314  000012c0  44000450	trap	#0x450
  315  000012c4  4be00000	jr	r31
  316  000012c8  54000000	nop
  317  000012cc          	.endproc _sem_create
  319  000012cc          	.proc _sem_wait
  320  000012cc          	.global _sem_wait
  321  000012cc          	_sem_wait:
  322  000012cc  44000451	trap	#0x451
  323  000012d0  4be00000	jr	r31
  324  000012d4  54000000	nop
  325  000012d8          	.endproc _sem_wait
  327  000012d8          	.proc _sem_signal
  328  000012d8          	.global _sem_signal
  329  000012d8          	_sem_signal:
  330  000012d8  44000452	trap	#0x452
  331  000012dc  4be00000	jr	r31
  332  000012e0  54000000	nop
  333  000012e4          	.endproc _sem_signal
  335  000012e4          	.proc _lock_create
  336  000012e4          	.global _lock_create
  337  000012e4          	_lock_create:
  338  000012e4  44000453	trap	#0x453
  339  000012e8  4be00000	jr	r31
  340  000012ec  54000000	nop
  341  000012f0          	.endproc _lock_create
  343  000012f0          	.proc _lock_acquire
  344  000012f0          	.global _lock_acquire
  345  000012f0          	_lock_acquire:
  346  000012f0  44000454	trap	#0x454
  347  000012f4  4be00000	jr	r31
  348  000012f8  54000000	nop
  349  000012fc          	.endproc _lock_acquire
  351  000012fc          	.proc _lock_release
  352  000012fc          	.global _lock_release
  353  000012fc          	_lock_release:
  354  000012fc  44000455	trap	#0x455
  355  00001300  4be00000	jr	r31
  356  00001304  54000000	nop
  357  00001308          	.endproc _lock_release
  359  00001308          	.proc _cond_create
  360  00001308          	.global _cond_create
  361  00001308          	_cond_create:
  362  00001308  44000456	trap	#0x456
  363  0000130c  4be00000	jr	r31
  364  00001310  54000000	nop
  365  00001314          	.endproc _cond_create
  367  00001314          	.proc _cond_wait
  368  00001314          	.global _cond_wait
  369  00001314          	_cond_wait:
  370  00001314  44000457	trap	#0x457
  371  00001318  4be00000	jr	r31
  372  0000131c  54000000	nop
  373  00001320          	.endproc _cond_wait
  375  00001320          	.proc _cond_signal
  376  00001320          	.global _cond_signal
  377  00001320          	_cond_signal:
  378  00001320  44000458	trap	#0x458
  379  00001324  4be00000	jr	r31
  380  00001328  54000000	nop
  381  0000132c          	.endproc _cond_signal
  383  0000132c          	.proc _cond_broadcast
  384  0000132c          	.global _cond_broadcast
  385  0000132c          	_cond_broadcast:
  386  0000132c  44000459	trap	#0x459
  387  00001330  4be00000	jr	r31
  388  00001334  54000000	nop
  389  00001338          	.endproc _cond_broadcast
  391  00001338          	.proc _mbox_create
  392  00001338          	.global _mbox_create
  393  00001338          	_mbox_create:
  394  00001338  44000460	trap	#0x460
  395  0000133c  4be00000	jr	r31
  396  00001340  54000000	nop
  397  00001344          	.endproc _mbox_create
  399  00001344          	.proc _mbox_open
  400  00001344          	.global _mbox_open
  401  00001344          	_mbox_open:
  402  00001344  44000461	trap	#0x461
  403  00001348  4be00000	jr	r31
  404  0000134c  54000000	nop
  405  00001350          	.endproc _mbox_open
  407  00001350          	.proc _mbox_close
  408  00001350          	.global _mbox_close
  409  00001350          	_mbox_close:
  410  00001350  44000462	trap	#0x462
  411  00001354  4be00000	jr	r31
  412  00001358  54000000	nop
  413  0000135c          	.endproc _mbox_close
  415  0000135c          	.proc _mbox_send
  416  0000135c          	.global _mbox_send
  417  0000135c          	_mbox_send:
  418  0000135c  44000463	trap	#0x463
  419  00001360  4be00000	jr	r31
  420  00001364  54000000	nop
  421  00001368          	.endproc _mbox_send
  423  00001368          	.proc _mbox_recv
  424  00001368          	.global _mbox_recv
  425  00001368          	_mbox_recv:
  426  00001368  44000464	trap	#0x464
  427  0000136c  4be00000	jr	r31
  428  00001370  54000000	nop
  429  00001374          	.endproc _mbox_recv
  431  00001374          	.proc _sleep
  432  00001374          	.global _sleep
  433  00001374          	_sleep:
  434  00001374  44000465	trap	#0x465
  435  00001378  4be00000	jr	r31
  436  0000137c  54000000	nop
  437  00001380          	.endproc _sleep
  439  00001380          	.proc _yield
  440  00001380          	.global _yield
  441  00001380          	_yield:
  442  00001380  44000466	trap	#0x466
  443  00001384  4be00000	jr	r31
  444  00001388  54000000	nop
  445  0000138c          	.endproc _yield
  448  0000138c          	.proc _Exit
  449  0000138c          	.global _Exit
  450  0000138c          	_Exit:
  451  0000138c  44000500	trap	#0x500
  452  00001390  4be00000	jr	r31
  453  00001394  54000000	nop
  454  00001398          	.endproc _Exit
  457  00001398          	.proc _malloc
  458  00001398          	.global _malloc
  459  00001398          	_malloc:
  460  00001398  44000467	trap	#0x467
  461  0000139c  4be00000	jr	r31
  462  000013a0          	.endproc _malloc
  465  000013a0          	.proc _mfree
  466  000013a0          	.global _mfree
  467  000013a0          	_mfree:
  468  000013a0  44000468	trap	#0x468
  469  000013a4  4be00000	jr	r31
  470  000013a8          	.endproc _mfree
  471                      ; Compiled by GCC
  473  000013a8          	.align 2
  474  000013a8          	.proc _isspace
  475  000013a8          	.global _isspace
  476  000013a8          	_isspace:
  477                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  478  000013a8  afbefffc	sw	-4(r29),r30; push fp
  479  000013ac  001df020	add	r30,r0,r29; fp = sp
  480  000013b0  afbffff8	sw	-8(r29),r31; push ret addr
  481  000013b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  482  000013b8  afa20000	sw	0(r29),r2
  483  000013bc  afa30004	sw	4(r29),r3
  484  000013c0  afa40008	sw	8(r29),r4
  485  000013c4  83c20003	lb	r2,3(r30)
  486  000013c8  20010000	addi	r1,r0,#0
  487  000013cc  304300ff	andi	r3,r2,#0x00ff
  488  000013d0  60640020	seqi	r4,r3,#32
  489  000013d4  1480002c	bnez	r4,L3_LF2
  490  000013d8  54000000	nop; delay slot nop
  491  000013dc  304300ff	andi	r3,r2,#0x00ff
  492  000013e0  60640009	seqi	r4,r3,#9
  493  000013e4  1480001c	bnez	r4,L3_LF2
  494  000013e8  54000000	nop; delay slot nop
  495  000013ec  304300ff	andi	r3,r2,#0x00ff
  496  000013f0  6064000a	seqi	r4,r3,#10
  497  000013f4  1480000c	bnez	r4,L3_LF2
  498  000013f8  54000000	nop; delay slot nop
  499  000013fc  08000008	j	L2_LF2
  500  00001400  54000000	nop; delay slot nop
  501  00001404          	L3_LF2:
  502  00001404  20010001	addi	r1,r0,#1
  503  00001408          	L2_LF2:
  504  00001408  08000004	j	L1_LF2
  505  0000140c  54000000	nop; delay slot nop
  506  00001410          	L1_LF2:
  507  00001410  8fa20000	lw	r2,0(r29)
  508  00001414  8fa30004	lw	r3,4(r29)
  509  00001418  8fa40008	lw	r4,8(r29)
  510  0000141c  8fdffff8	lw	r31,-8(r30)
  511  00001420  001ee820	add	r29,r0,r30
  512  00001424  8fdefffc	lw	r30,-4(r30)
  513  00001428  4be00000	jr	r31
  514  0000142c  54000000	nop
  515  00001430          	.endproc _isspace
  516  00001430          	.align 2
  517  00001430          	.proc _isxdigit
  518  00001430          	.global _isxdigit
  519  00001430          	_isxdigit:
  520                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  521  00001430  afbefffc	sw	-4(r29),r30; push fp
  522  00001434  001df020	add	r30,r0,r29; fp = sp
  523  00001438  afbffff8	sw	-8(r29),r31; push ret addr
  524  0000143c  2fbd0018	subui	r29,r29,#24; alloc local storage
  525  00001440  afa20000	sw	0(r29),r2
  526  00001444  afa30004	sw	4(r29),r3
  527  00001448  afa40008	sw	8(r29),r4
  528  0000144c  83c20003	lb	r2,3(r30)
  529  00001450  20010000	addi	r1,r0,#0
  530  00001454  304300ff	andi	r3,r2,#0x00ff
  531  00001458  6c64002f	sgtui	r4,r3,#47
  532  0000145c  1080001c	beqz	r4,L7_LF2
  533  00001460  54000000	nop; delay slot nop
  534  00001464  304300ff	andi	r3,r2,#0x00ff
  535  00001468  70640039	sleui	r4,r3,#57
  536  0000146c  1480005c	bnez	r4,L6_LF2
  537  00001470  54000000	nop; delay slot nop
  538  00001474  08000004	j	L7_LF2
  539  00001478  54000000	nop; delay slot nop
  540  0000147c          	L7_LF2:
  541  0000147c  304300ff	andi	r3,r2,#0x00ff
  542  00001480  6c640060	sgtui	r4,r3,#96
  543  00001484  1080001c	beqz	r4,L8_LF2
  544  00001488  54000000	nop; delay slot nop
  545  0000148c  304300ff	andi	r3,r2,#0x00ff
  546  00001490  70640066	sleui	r4,r3,#102
  547  00001494  14800034	bnez	r4,L6_LF2
  548  00001498  54000000	nop; delay slot nop
  549  0000149c  08000004	j	L8_LF2
  550  000014a0  54000000	nop; delay slot nop
  551  000014a4          	L8_LF2:
  552  000014a4  304300ff	andi	r3,r2,#0x00ff
  553  000014a8  6c640040	sgtui	r4,r3,#64
  554  000014ac  10800020	beqz	r4,L5_LF2
  555  000014b0  54000000	nop; delay slot nop
  556  000014b4  304300ff	andi	r3,r2,#0x00ff
  557  000014b8  70640041	sleui	r4,r3,#65
  558  000014bc  1480000c	bnez	r4,L6_LF2
  559  000014c0  54000000	nop; delay slot nop
  560  000014c4  08000008	j	L5_LF2
  561  000014c8  54000000	nop; delay slot nop
  562  000014cc          	L6_LF2:
  563  000014cc  20010001	addi	r1,r0,#1
  564  000014d0          	L5_LF2:
  565  000014d0  08000004	j	L4_LF2
  566  000014d4  54000000	nop; delay slot nop
  567  000014d8          	L4_LF2:
  568  000014d8  8fa20000	lw	r2,0(r29)
  569  000014dc  8fa30004	lw	r3,4(r29)
  570  000014e0  8fa40008	lw	r4,8(r29)
  571  000014e4  8fdffff8	lw	r31,-8(r30)
  572  000014e8  001ee820	add	r29,r0,r30
  573  000014ec  8fdefffc	lw	r30,-4(r30)
  574  000014f0  4be00000	jr	r31
  575  000014f4  54000000	nop
  576  000014f8          	.endproc _isxdigit
  577  000014f8          	.align 2
  578  000014f8          	.proc _dstrcpy
  579  000014f8          	.global _dstrcpy
  580  000014f8          	_dstrcpy:
  581                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  582  000014f8  afbefffc	sw	-4(r29),r30; push fp
  583  000014fc  001df020	add	r30,r0,r29; fp = sp
  584  00001500  afbffff8	sw	-8(r29),r31; push ret addr
  585  00001504  2fbd0018	subui	r29,r29,#24; alloc local storage
  586  00001508  afa20000	sw	0(r29),r2
  587  0000150c  afa30004	sw	4(r29),r3
  588  00001510  8fc10000	lw	r1,(r30)
  589  00001514  afc1fff4	sw	-12(r30),r1
  590  00001518          	L10_LF2:
  591  00001518  8fc10000	lw	r1,(r30)
  592  0000151c  20220001	addi	r2,r1,#1
  593  00001520  afc20000	sw	(r30),r2
  594  00001524  8fc20004	lw	r2,4(r30)
  595  00001528  20430001	addi	r3,r2,#1
  596  0000152c  afc30004	sw	4(r30),r3
  597  00001530  80420000	lb	r2,(r2)
  598  00001534  a0220000	sb	(r1),r2
  599  00001538  a3c2fff3	sb	-13(r30),r2
  600  0000153c          	L12_LF2:
  601  0000153c  93c1fff3	lbu	r1,-13(r30)
  602  00001540  64220000	snei	r2,r1,#0
  603  00001544  1440000c	bnez	r2,L13_LF2
  604  00001548  54000000	nop; delay slot nop
  605  0000154c  0800000c	j	L11_LF2
  606  00001550  54000000	nop; delay slot nop
  607  00001554          	L13_LF2:
  608  00001554  0bffffc0	j	L10_LF2
  609  00001558  54000000	nop; delay slot nop
  610  0000155c          	L11_LF2:
  611  0000155c  8fc1fff4	lw	r1,-12(r30)
  612  00001560  08000004	j	L9_LF2
  613  00001564  54000000	nop; delay slot nop
  614  00001568          	L9_LF2:
  615  00001568  8fa20000	lw	r2,0(r29)
  616  0000156c  8fa30004	lw	r3,4(r29)
  617  00001570  8fdffff8	lw	r31,-8(r30)
  618  00001574  001ee820	add	r29,r0,r30
  619  00001578  8fdefffc	lw	r30,-4(r30)
  620  0000157c  4be00000	jr	r31
  621  00001580  54000000	nop
  622  00001584          	.endproc _dstrcpy
  623  00001584          	.align 2
  624  00001584          	.proc _dstrncpy
  625  00001584          	.global _dstrncpy
  626  00001584          	_dstrncpy:
  627                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  628  00001584  afbefffc	sw	-4(r29),r30; push fp
  629  00001588  001df020	add	r30,r0,r29; fp = sp
  630  0000158c  afbffff8	sw	-8(r29),r31; push ret addr
  631  00001590  2fbd0018	subui	r29,r29,#24; alloc local storage
  632  00001594  afa20000	sw	0(r29),r2
  633  00001598  afa30004	sw	4(r29),r3
  634  0000159c  8fc10000	lw	r1,(r30)
  635  000015a0  afc1fff4	sw	-12(r30),r1
  636  000015a4          	L15_LF2:
  637  000015a4  8fc10008	lw	r1,8(r30)
  638  000015a8  2022ffff	addi	r2,r1,#-1
  639  000015ac  afc20008	sw	8(r30),r2
  640  000015b0  70210000	slei	r1,r1,#0
  641  000015b4  1020000c	beqz	r1,L18_LF2
  642  000015b8  54000000	nop; delay slot nop
  643  000015bc  08000048	j	L16_LF2
  644  000015c0  54000000	nop; delay slot nop
  645  000015c4          	L18_LF2:
  646  000015c4  8fc10000	lw	r1,(r30)
  647  000015c8  20220001	addi	r2,r1,#1
  648  000015cc  afc20000	sw	(r30),r2
  649  000015d0  8fc20004	lw	r2,4(r30)
  650  000015d4  20430001	addi	r3,r2,#1
  651  000015d8  afc30004	sw	4(r30),r3
  652  000015dc  80420000	lb	r2,(r2)
  653  000015e0  a0220000	sb	(r1),r2
  654  000015e4  a3c2fff3	sb	-13(r30),r2
  655  000015e8          	L17_LF2:
  656  000015e8  93c1fff3	lbu	r1,-13(r30)
  657  000015ec  64220000	snei	r2,r1,#0
  658  000015f0  1440000c	bnez	r2,L19_LF2
  659  000015f4  54000000	nop; delay slot nop
  660  000015f8  0800000c	j	L16_LF2
  661  000015fc  54000000	nop; delay slot nop
  662  00001600          	L19_LF2:
  663  00001600  0bffffa0	j	L15_LF2
  664  00001604  54000000	nop; delay slot nop
  665  00001608          	L16_LF2:
  666  00001608  8fc1fff4	lw	r1,-12(r30)
  667  0000160c  08000004	j	L14_LF2
  668  00001610  54000000	nop; delay slot nop
  669  00001614          	L14_LF2:
  670  00001614  8fa20000	lw	r2,0(r29)
  671  00001618  8fa30004	lw	r3,4(r29)
  672  0000161c  8fdffff8	lw	r31,-8(r30)
  673  00001620  001ee820	add	r29,r0,r30
  674  00001624  8fdefffc	lw	r30,-4(r30)
  675  00001628  4be00000	jr	r31
  676  0000162c  54000000	nop
  677  00001630          	.endproc _dstrncpy
  678  00001630          	.align 2
  679  00001630          	.proc _dstrcat
  680  00001630          	.global _dstrcat
  681  00001630          	_dstrcat:
  682                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  683  00001630  afbefffc	sw	-4(r29),r30; push fp
  684  00001634  001df020	add	r30,r0,r29; fp = sp
  685  00001638  afbffff8	sw	-8(r29),r31; push ret addr
  686  0000163c  2fbd0018	subui	r29,r29,#24; alloc local storage
  687  00001640  afa20000	sw	0(r29),r2
  688  00001644  8fc10000	lw	r1,(r30)
  689  00001648  afc1fff4	sw	-12(r30),r1
  690  0000164c          	L21_LF2:
  691  0000164c  8fc10000	lw	r1,(r30)
  692  00001650  90220000	lbu	r2,(r1)
  693  00001654  64410000	snei	r1,r2,#0
  694  00001658  1420000c	bnez	r1,L23_LF2
  695  0000165c  54000000	nop; delay slot nop
  696  00001660  0800001c	j	L22_LF2
  697  00001664  54000000	nop; delay slot nop
  698  00001668          	L23_LF2:
  699  00001668  8fc20000	lw	r2,(r30)
  700  0000166c  20410001	addi	r1,r2,#1
  701  00001670  00011020	add	r2,r0,r1
  702  00001674  afc20000	sw	(r30),r2
  703  00001678  0bffffd0	j	L21_LF2
  704  0000167c  54000000	nop; delay slot nop
  705  00001680          	L22_LF2:
  706  00001680  23bdfff8	addi	r29,r29,#-8
  707  00001684  001d0820	add	r1,r0,r29
  708  00001688  8fc20000	lw	r2,(r30)
  709  0000168c  ac220000	sw	(r1),r2
  710  00001690  8fc20004	lw	r2,4(r30)
  711  00001694  ac220004	sw	4(r1),r2
  712  00001698  0ffffe5c	jal	_dstrcpy
  713  0000169c  54000000	nop; delay slot nop
  714  000016a0  23bd0008	addi	r29,r29,#8
  715  000016a4  8fc1fff4	lw	r1,-12(r30)
  716  000016a8  08000004	j	L20_LF2
  717  000016ac  54000000	nop; delay slot nop
  718  000016b0          	L20_LF2:
  719  000016b0  8fa20000	lw	r2,0(r29)
  720  000016b4  8fdffff8	lw	r31,-8(r30)
  721  000016b8  001ee820	add	r29,r0,r30
  722  000016bc  8fdefffc	lw	r30,-4(r30)
  723  000016c0  4be00000	jr	r31
  724  000016c4  54000000	nop
  725  000016c8          	.endproc _dstrcat
  726  000016c8          	.align 2
  727  000016c8          	.proc _dstrncmp
  728  000016c8          	.global _dstrncmp
  729  000016c8          	_dstrncmp:
  730                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  731  000016c8  afbefffc	sw	-4(r29),r30; push fp
  732  000016cc  001df020	add	r30,r0,r29; fp = sp
  733  000016d0  afbffff8	sw	-8(r29),r31; push ret addr
  734  000016d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  735  000016d8  afa20000	sw	0(r29),r2
  736  000016dc  afa30004	sw	4(r29),r3
  737  000016e0  54000000	nop
  738  000016e4  20010000	addi	r1,r0,#0
  739  000016e8  afc1fff4	sw	-12(r30),r1
  740  000016ec          	L25_LF2:
  741  000016ec  8fc1fff4	lw	r1,-12(r30)
  742  000016f0  8fc20008	lw	r2,8(r30)
  743  000016f4  0022082a	slt	r1,r1,r2
  744  000016f8  1420000c	bnez	r1,L28_LF2
  745  000016fc  54000000	nop; delay slot nop
  746  00001700  08000088	j	L26_LF2
  747  00001704  54000000	nop; delay slot nop
  748  00001708          	L28_LF2:
  749  00001708  8fc10004	lw	r1,4(r30)
  750  0000170c  90220000	lbu	r2,(r1)
  751  00001710  64410000	snei	r1,r2,#0
  752  00001714  14200018	bnez	r1,L29_LF2
  753  00001718  54000000	nop; delay slot nop
  754  0000171c  20010000	addi	r1,r0,#0
  755  00001720  080000d8	j	L24_LF2
  756  00001724  54000000	nop; delay slot nop
  757  00001728  08000028	j	L30_LF2
  758  0000172c  54000000	nop; delay slot nop
  759  00001730          	L29_LF2:
  760  00001730  8fc10000	lw	r1,(r30)
  761  00001734  8fc20004	lw	r2,4(r30)
  762  00001738  90210000	lbu	r1,(r1)
  763  0000173c  90420000	lbu	r2,(r2)
  764  00001740  00220829	sne	r1,r1,r2
  765  00001744  1020000c	beqz	r1,L30_LF2
  766  00001748  54000000	nop; delay slot nop
  767  0000174c  0800003c	j	L26_LF2
  768  00001750  54000000	nop; delay slot nop
  769  00001754          	L31_LF2:
  770  00001754          	L30_LF2:
  771  00001754  8fc20000	lw	r2,(r30)
  772  00001758  20410001	addi	r1,r2,#1
  773  0000175c  00011020	add	r2,r0,r1
  774  00001760  afc20000	sw	(r30),r2
  775  00001764  8fc20004	lw	r2,4(r30)
  776  00001768  20410001	addi	r1,r2,#1
  777  0000176c  00011020	add	r2,r0,r1
  778  00001770  afc20004	sw	4(r30),r2
  779  00001774          	L27_LF2:
  780  00001774  8fc2fff4	lw	r2,-12(r30)
  781  00001778  20410001	addi	r1,r2,#1
  782  0000177c  00011020	add	r2,r0,r1
  783  00001780  afc2fff4	sw	-12(r30),r2
  784  00001784  0bffff64	j	L25_LF2
  785  00001788  54000000	nop; delay slot nop
  786  0000178c          	L26_LF2:
  787  0000178c  8fc1fff4	lw	r1,-12(r30)
  788  00001790  8fc20008	lw	r2,8(r30)
  789  00001794  00220828	seq	r1,r1,r2
  790  00001798  10200018	beqz	r1,L32_LF2
  791  0000179c  54000000	nop; delay slot nop
  792  000017a0  20010000	addi	r1,r0,#0
  793  000017a4  08000054	j	L24_LF2
  794  000017a8  54000000	nop; delay slot nop
  795  000017ac  0800004c	j	L33_LF2
  796  000017b0  54000000	nop; delay slot nop
  797  000017b4          	L32_LF2:
  798  000017b4  8fc20000	lw	r2,(r30)
  799  000017b8  90410000	lbu	r1,(r2)
  800  000017bc  8fc20004	lw	r2,4(r30)
  801  000017c0  90430000	lbu	r3,(r2)
  802  000017c4  00230822	sub	r1,r1,r3
  803  000017c8  74220000	sgei	r2,r1,#0
  804  000017cc  10400020	beqz	r2,L34_LF2
  805  000017d0  54000000	nop; delay slot nop
  806  000017d4  8fc10000	lw	r1,(r30)
  807  000017d8  8fc20004	lw	r2,4(r30)
  808  000017dc  90210000	lbu	r1,(r1)
  809  000017e0  90420000	lbu	r2,(r2)
  810  000017e4  00220829	sne	r1,r1,r2
  811  000017e8  08000008	j	L35_LF2
  812  000017ec  54000000	nop; delay slot nop
  813  000017f0          	L34_LF2:
  814  000017f0  2001ffff	addi	r1,r0,#-1
  815  000017f4          	L35_LF2:
  816  000017f4  08000004	j	L24_LF2
  817  000017f8  54000000	nop; delay slot nop
  818  000017fc          	L33_LF2:
  819  000017fc          	L24_LF2:
  820  000017fc  8fa20000	lw	r2,0(r29)
  821  00001800  8fa30004	lw	r3,4(r29)
  822  00001804  8fdffff8	lw	r31,-8(r30)
  823  00001808  001ee820	add	r29,r0,r30
  824  0000180c  8fdefffc	lw	r30,-4(r30)
  825  00001810  4be00000	jr	r31
  826  00001814  54000000	nop
  827  00001818          	.endproc _dstrncmp
  828  00001818          	.align 2
  829  00001818          	.proc _dstrlen
  830  00001818          	.global _dstrlen
  831  00001818          	_dstrlen:
  832                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  833  00001818  afbefffc	sw	-4(r29),r30; push fp
  834  0000181c  001df020	add	r30,r0,r29; fp = sp
  835  00001820  afbffff8	sw	-8(r29),r31; push ret addr
  836  00001824  2fbd0018	subui	r29,r29,#24; alloc local storage
  837  00001828  afa20000	sw	0(r29),r2
  838  0000182c  20010000	addi	r1,r0,#0
  839  00001830  afc1fff4	sw	-12(r30),r1
  840  00001834          	L37_LF2:
  841  00001834  8fc10000	lw	r1,(r30)
  842  00001838  20220001	addi	r2,r1,#1
  843  0000183c  afc20000	sw	(r30),r2
  844  00001840  90210000	lbu	r1,(r1)
  845  00001844  64220000	snei	r2,r1,#0
  846  00001848  1440000c	bnez	r2,L39_LF2
  847  0000184c  54000000	nop; delay slot nop
  848  00001850  0800001c	j	L38_LF2
  849  00001854  54000000	nop; delay slot nop
  850  00001858          	L39_LF2:
  851  00001858  8fc2fff4	lw	r2,-12(r30)
  852  0000185c  20410001	addi	r1,r2,#1
  853  00001860  00011020	add	r2,r0,r1
  854  00001864  afc2fff4	sw	-12(r30),r2
  855  00001868  0bffffc8	j	L37_LF2
  856  0000186c  54000000	nop; delay slot nop
  857  00001870          	L38_LF2:
  858  00001870  8fc1fff4	lw	r1,-12(r30)
  859  00001874  08000004	j	L36_LF2
  860  00001878  54000000	nop; delay slot nop
  861  0000187c          	L36_LF2:
  862  0000187c  8fa20000	lw	r2,0(r29)
  863  00001880  8fdffff8	lw	r31,-8(r30)
  864  00001884  001ee820	add	r29,r0,r30
  865  00001888  8fdefffc	lw	r30,-4(r30)
  866  0000188c  4be00000	jr	r31
  867  00001890  54000000	nop
  868  00001894          	.endproc _dstrlen
  869  00001894          	.align 2
  870  00001894          	.proc _dstrstr
  871  00001894          	.global _dstrstr
  872  00001894          	_dstrstr:
  873                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  874  00001894  afbefffc	sw	-4(r29),r30; push fp
  875  00001898  001df020	add	r30,r0,r29; fp = sp
  876  0000189c  afbffff8	sw	-8(r29),r31; push ret addr
  877  000018a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  878  000018a4  afa20000	sw	0(r29),r2
  879  000018a8  23bdfff8	addi	r29,r29,#-8
  880  000018ac  001d0820	add	r1,r0,r29
  881  000018b0  8fc20004	lw	r2,4(r30)
  882  000018b4  ac220000	sw	(r1),r2
  883  000018b8  0fffff5c	jal	_dstrlen
  884  000018bc  54000000	nop; delay slot nop
  885  000018c0  23bd0008	addi	r29,r29,#8
  886  000018c4  afc1fff4	sw	-12(r30),r1
  887  000018c8          	L41_LF2:
  888  000018c8  8fc10000	lw	r1,(r30)
  889  000018cc  90220000	lbu	r2,(r1)
  890  000018d0  64410000	snei	r1,r2,#0
  891  000018d4  1420000c	bnez	r1,L43_LF2
  892  000018d8  54000000	nop; delay slot nop
  893  000018dc  08000060	j	L42_LF2
  894  000018e0  54000000	nop; delay slot nop
  895  000018e4          	L43_LF2:
  896  000018e4  23bdfff0	addi	r29,r29,#-16
  897  000018e8  001d0820	add	r1,r0,r29
  898  000018ec  8fc20000	lw	r2,(r30)
  899  000018f0  ac220000	sw	(r1),r2
  900  000018f4  8fc20004	lw	r2,4(r30)
  901  000018f8  ac220004	sw	4(r1),r2
  902  000018fc  8fc2fff4	lw	r2,-12(r30)
  903  00001900  ac220008	sw	8(r1),r2
  904  00001904  0ffffdc0	jal	_dstrncmp
  905  00001908  54000000	nop; delay slot nop
  906  0000190c  23bd0010	addi	r29,r29,#16
  907  00001910  64220000	snei	r2,r1,#0
  908  00001914  14400010	bnez	r2,L44_LF2
  909  00001918  54000000	nop; delay slot nop
  910  0000191c  8fc10000	lw	r1,(r30)
  911  00001920  08000028	j	L40_LF2
  912  00001924  54000000	nop; delay slot nop
  913  00001928          	L44_LF2:
  914  00001928  8fc20000	lw	r2,(r30)
  915  0000192c  20410001	addi	r1,r2,#1
  916  00001930  00011020	add	r2,r0,r1
  917  00001934  afc20000	sw	(r30),r2
  918  00001938  0bffff8c	j	L41_LF2
  919  0000193c  54000000	nop; delay slot nop
  920  00001940          	L42_LF2:
  921  00001940  20010000	addi	r1,r0,#0
  922  00001944  08000004	j	L40_LF2
  923  00001948  54000000	nop; delay slot nop
  924  0000194c          	L40_LF2:
  925  0000194c  8fa20000	lw	r2,0(r29)
  926  00001950  8fdffff8	lw	r31,-8(r30)
  927  00001954  001ee820	add	r29,r0,r30
  928  00001958  8fdefffc	lw	r30,-4(r30)
  929  0000195c  4be00000	jr	r31
  930  00001960  54000000	nop
  931  00001964          	.endproc _dstrstr
  932  00001964          	.align 2
  933  00001964          	.proc _dmindex
  934  00001964          	.global _dmindex
  935  00001964          	_dmindex:
  936                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  937  00001964  afbefffc	sw	-4(r29),r30; push fp
  938  00001968  001df020	add	r30,r0,r29; fp = sp
  939  0000196c  afbffff8	sw	-8(r29),r31; push ret addr
  940  00001970  2fbd0018	subui	r29,r29,#24; alloc local storage
  941  00001974  afa20000	sw	0(r29),r2
  942  00001978  54000000	nop
  943  0000197c          	L46_LF2:
  944  0000197c  8fc10000	lw	r1,(r30)
  945  00001980  90220000	lbu	r2,(r1)
  946  00001984  64410000	snei	r1,r2,#0
  947  00001988  1420000c	bnez	r1,L48_LF2
  948  0000198c  54000000	nop; delay slot nop
  949  00001990  08000070	j	L47_LF2
  950  00001994  54000000	nop; delay slot nop
  951  00001998          	L48_LF2:
  952  00001998  8fc10004	lw	r1,4(r30)
  953  0000199c  afc1fff4	sw	-12(r30),r1
  954  000019a0          	L49_LF2:
  955  000019a0  8fc1fff4	lw	r1,-12(r30)
  956  000019a4  90220000	lbu	r2,(r1)
  957  000019a8  64410000	snei	r1,r2,#0
  958  000019ac  1420000c	bnez	r1,L52_LF2
  959  000019b0  54000000	nop; delay slot nop
  960  000019b4  08000044	j	L50_LF2
  961  000019b8  54000000	nop; delay slot nop
  962  000019bc          	L52_LF2:
  963  000019bc  8fc10000	lw	r1,(r30)
  964  000019c0  8fc2fff4	lw	r2,-12(r30)
  965  000019c4  90210000	lbu	r1,(r1)
  966  000019c8  90420000	lbu	r2,(r2)
  967  000019cc  00220828	seq	r1,r1,r2
  968  000019d0  10200010	beqz	r1,L51_LF2
  969  000019d4  54000000	nop; delay slot nop
  970  000019d8  8fc10000	lw	r1,(r30)
  971  000019dc  08000030	j	L45_LF2
  972  000019e0  54000000	nop; delay slot nop
  973  000019e4          	L53_LF2:
  974  000019e4          	L51_LF2:
  975  000019e4  8fc2fff4	lw	r2,-12(r30)
  976  000019e8  20410001	addi	r1,r2,#1
  977  000019ec  00011020	add	r2,r0,r1
  978  000019f0  afc2fff4	sw	-12(r30),r2
  979  000019f4  0bffffa8	j	L49_LF2
  980  000019f8  54000000	nop; delay slot nop
  981  000019fc          	L50_LF2:
  982  000019fc  0bffff7c	j	L46_LF2
  983  00001a00  54000000	nop; delay slot nop
  984  00001a04          	L47_LF2:
  985  00001a04  20010000	addi	r1,r0,#0
  986  00001a08  08000004	j	L45_LF2
  987  00001a0c  54000000	nop; delay slot nop
  988  00001a10          	L45_LF2:
  989  00001a10  8fa20000	lw	r2,0(r29)
  990  00001a14  8fdffff8	lw	r31,-8(r30)
  991  00001a18  001ee820	add	r29,r0,r30
  992  00001a1c  8fdefffc	lw	r30,-4(r30)
  993  00001a20  4be00000	jr	r31
  994  00001a24  54000000	nop
  995  00001a28          	.endproc _dmindex
  996  00001a28          	.align 2
  997  00001a28          	.proc _dindex
  998  00001a28          	.global _dindex
  999  00001a28          	_dindex:
 1000                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1001  00001a28  afbefffc	sw	-4(r29),r30; push fp
 1002  00001a2c  001df020	add	r30,r0,r29; fp = sp
 1003  00001a30  afbffff8	sw	-8(r29),r31; push ret addr
 1004  00001a34  2fbd0010	subui	r29,r29,#16; alloc local storage
 1005  00001a38  afa20000	sw	0(r29),r2
 1006  00001a3c  54000000	nop
 1007  00001a40          	L55_LF2:
 1008  00001a40  8fc10000	lw	r1,(r30)
 1009  00001a44  90220000	lbu	r2,(r1)
 1010  00001a48  64410000	snei	r1,r2,#0
 1011  00001a4c  1420000c	bnez	r1,L57_LF2
 1012  00001a50  54000000	nop; delay slot nop
 1013  00001a54  08000040	j	L56_LF2
 1014  00001a58  54000000	nop; delay slot nop
 1015  00001a5c          	L57_LF2:
 1016  00001a5c  8fc10000	lw	r1,(r30)
 1017  00001a60  90220000	lbu	r2,(r1)
 1018  00001a64  8fc10004	lw	r1,4(r30)
 1019  00001a68  00411028	seq	r2,r2,r1
 1020  00001a6c  10400010	beqz	r2,L58_LF2
 1021  00001a70  54000000	nop; delay slot nop
 1022  00001a74  8fc10000	lw	r1,(r30)
 1023  00001a78  08000028	j	L54_LF2
 1024  00001a7c  54000000	nop; delay slot nop
 1025  00001a80          	L58_LF2:
 1026  00001a80  8fc20000	lw	r2,(r30)
 1027  00001a84  20410001	addi	r1,r2,#1
 1028  00001a88  00011020	add	r2,r0,r1
 1029  00001a8c  afc20000	sw	(r30),r2
 1030  00001a90  0bffffac	j	L55_LF2
 1031  00001a94  54000000	nop; delay slot nop
 1032  00001a98          	L56_LF2:
 1033  00001a98  20010000	addi	r1,r0,#0
 1034  00001a9c  08000004	j	L54_LF2
 1035  00001aa0  54000000	nop; delay slot nop
 1036  00001aa4          	L54_LF2:
 1037  00001aa4  8fa20000	lw	r2,0(r29)
 1038  00001aa8  8fdffff8	lw	r31,-8(r30)
 1039  00001aac  001ee820	add	r29,r0,r30
 1040  00001ab0  8fdefffc	lw	r30,-4(r30)
 1041  00001ab4  4be00000	jr	r31
 1042  00001ab8  54000000	nop
 1043  00001abc          	.endproc _dindex
 1044  00001abc          	.align 2
 1045  00001abc          	.proc _ditoa
 1046  00001abc          	.global _ditoa
 1047  00001abc          	_ditoa:
 1048                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1049  00001abc  afbefffc	sw	-4(r29),r30; push fp
 1050  00001ac0  001df020	add	r30,r0,r29; fp = sp
 1051  00001ac4  afbffff8	sw	-8(r29),r31; push ret addr
 1052  00001ac8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1053  00001acc  afa20000	sw	0(r29),r2
 1054  00001ad0  afa30004	sw	4(r29),r3
 1055  00001ad4  8fc10000	lw	r1,(r30)
 1056  00001ad8  68220000	slti	r2,r1,#0
 1057  00001adc  1040002c	beqz	r2,L60_LF2
 1058  00001ae0  54000000	nop; delay slot nop
 1059  00001ae4  8fc10004	lw	r1,4(r30)
 1060  00001ae8  20220001	addi	r2,r1,#1
 1061  00001aec  afc20004	sw	4(r30),r2
 1062  00001af0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1063  00001af4  a0220000	sb	(r1),r2
 1064  00001af8  8fc10000	lw	r1,(r30)
 1065  00001afc  00011022	sub	r2,r0,r1
 1066  00001b00  afc20000	sw	(r30),r2
 1067  00001b04  08000118	j	L61_LF2
 1068  00001b08  54000000	nop; delay slot nop
 1069  00001b0c          	L60_LF2:
 1070  00001b0c  8fc10000	lw	r1,(r30)
 1071  00001b10  64220000	snei	r2,r1,#0
 1072  00001b14  14400020	bnez	r2,L62_LF2
 1073  00001b18  54000000	nop; delay slot nop
 1074  00001b1c  8fc10004	lw	r1,4(r30)
 1075  00001b20  20220001	addi	r2,r1,#1
 1076  00001b24  afc20004	sw	4(r30),r2
 1077  00001b28  20020030	addi	r2,r0,(#0x30)&0xff
 1078  00001b2c  a0220000	sb	(r1),r2
 1079  00001b30  080000ec	j	L61_LF2
 1080  00001b34  54000000	nop; delay slot nop
 1081  00001b38          	L62_LF2:
 1082  00001b38  20010001	addi	r1,r0,#1
 1083  00001b3c  afc1fff4	sw	-12(r30),r1
 1084  00001b40          	L64_LF2:
 1085  00001b40  8fc1fff4	lw	r1,-12(r30)
 1086  00001b44  8fc20000	lw	r2,(r30)
 1087  00001b48  0022082c	sle	r1,r1,r2
 1088  00001b4c  1420000c	bnez	r1,L66_LF2
 1089  00001b50  54000000	nop; delay slot nop
 1090  00001b54  08000024	j	L65_LF2
 1091  00001b58  54000000	nop; delay slot nop
 1092  00001b5c          	L67_LF2:
 1093  00001b5c          	L66_LF2:
 1094  00001b5c  8fc1fff4	lw	r1,-12(r30)
 1095  00001b60  00011820	add	r3,r0,r1
 1096  00001b64  50620002	slli	r2,r3,#0x2
 1097  00001b68  00411020	add	r2,r2,r1
 1098  00001b6c  50410001	slli	r1,r2,#0x1
 1099  00001b70  afc1fff4	sw	-12(r30),r1
 1100  00001b74  0bffffc8	j	L64_LF2
 1101  00001b78  54000000	nop; delay slot nop
 1102  00001b7c          	L65_LF2:
 1103  00001b7c  54000000	nop
 1104  00001b80          	L68_LF2:
 1105  00001b80  8fc1fff4	lw	r1,-12(r30)
 1106  00001b84  2002000a	addi	r2,r0,#10
 1107  00001b88  00200035	movi2fp	f0,r1
 1108  00001b8c  00400835	movi2fp	f1,r2
 1109  00001b90  0401000f	div	f0,f0,f1
 1110  00001b94  00000834	movfp2i	r1,f0
 1111  00001b98  afc1fff4	sw	-12(r30),r1
 1112  00001b9c  8fc10004	lw	r1,4(r30)
 1113  00001ba0  20220001	addi	r2,r1,#1
 1114  00001ba4  afc20004	sw	4(r30),r2
 1115  00001ba8  8fc20000	lw	r2,(r30)
 1116  00001bac  8fc3fff4	lw	r3,-12(r30)
 1117  00001bb0  00400035	movi2fp	f0,r2
 1118  00001bb4  00600835	movi2fp	f1,r3
 1119  00001bb8  0401000f	div	f0,f0,f1
 1120  00001bbc  00001034	movfp2i	r2,f0
 1121  00001bc0  00021820	add	r3,r0,r2
 1122  00001bc4  20620030	addi	r2,r3,#48
 1123  00001bc8  a0220000	sb	(r1),r2
 1124  00001bcc  8fc10000	lw	r1,(r30)
 1125  00001bd0  8fc3fff4	lw	r3,-12(r30)
 1126  00001bd4  00200035	movi2fp	f0,r1
 1127  00001bd8  00600835	movi2fp	f1,r3
 1128  00001bdc  0401000f	div	f0,f0,f1
 1129  00001be0  00001034	movfp2i	r2,f0
 1130  00001be4  8fc3fff4	lw	r3,-12(r30)
 1131  00001be8  00400035	movi2fp	f0,r2
 1132  00001bec  00600835	movi2fp	f1,r3
 1133  00001bf0  0401000e	mult	f0,f0,f1
 1134  00001bf4  00001034	movfp2i	r2,f0
 1135  00001bf8  00220822	sub	r1,r1,r2
 1136  00001bfc  afc10000	sw	(r30),r1
 1137  00001c00          	L70_LF2:
 1138  00001c00  8fc1fff4	lw	r1,-12(r30)
 1139  00001c04  6c220001	sgti	r2,r1,#1
 1140  00001c08  1440000c	bnez	r2,L71_LF2
 1141  00001c0c  54000000	nop; delay slot nop
 1142  00001c10  0800000c	j	L61_LF2
 1143  00001c14  54000000	nop; delay slot nop
 1144  00001c18          	L71_LF2:
 1145  00001c18  0bffff64	j	L68_LF2
 1146  00001c1c  54000000	nop; delay slot nop
 1147  00001c20          	L69_LF2:
 1148  00001c20          	L63_LF2:
 1149  00001c20          	L61_LF2:
 1150  00001c20  8fc10004	lw	r1,4(r30)
 1151  00001c24  20020000	addi	r2,r0,(#0x0)&0xff
 1152  00001c28  a0220000	sb	(r1),r2
 1153  00001c2c          	L59_LF2:
 1154  00001c2c  8fa20000	lw	r2,0(r29)
 1155  00001c30  8fa30004	lw	r3,4(r29)
 1156  00001c34  8fdffff8	lw	r31,-8(r30)
 1157  00001c38  001ee820	add	r29,r0,r30
 1158  00001c3c  8fdefffc	lw	r30,-4(r30)
 1159  00001c40  4be00000	jr	r31
 1160  00001c44  54000000	nop
 1161  00001c48          	.endproc _ditoa
 1162  00001c48          	.align 2
 1163  00001c48          	.proc _dstrtol
 1164  00001c48          	.global _dstrtol
 1165  00001c48          	_dstrtol:
 1166                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1167  00001c48  afbefffc	sw	-4(r29),r30; push fp
 1168  00001c4c  001df020	add	r30,r0,r29; fp = sp
 1169  00001c50  afbffff8	sw	-8(r29),r31; push ret addr
 1170  00001c54  2fbd0020	subui	r29,r29,#32; alloc local storage
 1171  00001c58  afa20000	sw	0(r29),r2
 1172  00001c5c  20010000	addi	r1,r0,#0
 1173  00001c60  afc1fff4	sw	-12(r30),r1
 1174  00001c64          	L73_LF2:
 1175  00001c64  8fc10000	lw	r1,(r30)
 1176  00001c68  90220000	lbu	r2,(r1)
 1177  00001c6c  60410020	seqi	r1,r2,#32
 1178  00001c70  14200034	bnez	r1,L75_LF2
 1179  00001c74  54000000	nop; delay slot nop
 1180  00001c78  8fc10000	lw	r1,(r30)
 1181  00001c7c  90220000	lbu	r2,(r1)
 1182  00001c80  60410009	seqi	r1,r2,#9
 1183  00001c84  14200020	bnez	r1,L75_LF2
 1184  00001c88  54000000	nop; delay slot nop
 1185  00001c8c  8fc10000	lw	r1,(r30)
 1186  00001c90  90220000	lbu	r2,(r1)
 1187  00001c94  6041000a	seqi	r1,r2,#10
 1188  00001c98  1420000c	bnez	r1,L75_LF2
 1189  00001c9c  54000000	nop; delay slot nop
 1190  00001ca0  0800001c	j	L74_LF2
 1191  00001ca4  54000000	nop; delay slot nop
 1192  00001ca8          	L75_LF2:
 1193  00001ca8  8fc20000	lw	r2,(r30)
 1194  00001cac  20410001	addi	r1,r2,#1
 1195  00001cb0  00011020	add	r2,r0,r1
 1196  00001cb4  afc20000	sw	(r30),r2
 1197  00001cb8  0bffffa8	j	L73_LF2
 1198  00001cbc  54000000	nop; delay slot nop
 1199  00001cc0          	L74_LF2:
 1200  00001cc0  8fc10004	lw	r1,4(r30)
 1201  00001cc4  64220000	snei	r2,r1,#0
 1202  00001cc8  10400010	beqz	r2,L76_LF2
 1203  00001ccc  54000000	nop; delay slot nop
 1204  00001cd0  8fc10004	lw	r1,4(r30)
 1205  00001cd4  8fc20000	lw	r2,(r30)
 1206  00001cd8  ac220000	sw	(r1),r2
 1207  00001cdc          	L76_LF2:
 1208  00001cdc  8fc10000	lw	r1,(r30)
 1209  00001ce0  90220000	lbu	r2,(r1)
 1210  00001ce4  64410000	snei	r1,r2,#0
 1211  00001ce8  14200010	bnez	r1,L77_LF2
 1212  00001cec  54000000	nop; delay slot nop
 1213  00001cf0  8fc1fff4	lw	r1,-12(r30)
 1214  00001cf4  08000294	j	L72_LF2
 1215  00001cf8  54000000	nop; delay slot nop
 1216  00001cfc          	L77_LF2:
 1217  00001cfc  8fc10000	lw	r1,(r30)
 1218  00001d00  90220000	lbu	r2,(r1)
 1219  00001d04  6041002d	seqi	r1,r2,#45
 1220  00001d08  10200024	beqz	r1,L78_LF2
 1221  00001d0c  54000000	nop; delay slot nop
 1222  00001d10  2001ffff	addi	r1,r0,#-1
 1223  00001d14  afc1ffec	sw	-20(r30),r1
 1224  00001d18  8fc20000	lw	r2,(r30)
 1225  00001d1c  20410001	addi	r1,r2,#1
 1226  00001d20  00011020	add	r2,r0,r1
 1227  00001d24  afc20000	sw	(r30),r2
 1228  00001d28  0800000c	j	L79_LF2
 1229  00001d2c  54000000	nop; delay slot nop
 1230  00001d30          	L78_LF2:
 1231  00001d30  20010001	addi	r1,r0,#1
 1232  00001d34  afc1ffec	sw	-20(r30),r1
 1233  00001d38          	L79_LF2:
 1234  00001d38  8fc10008	lw	r1,8(r30)
 1235  00001d3c  64220000	snei	r2,r1,#0
 1236  00001d40  14400090	bnez	r2,L80_LF2
 1237  00001d44  54000000	nop; delay slot nop
 1238  00001d48  8fc10000	lw	r1,(r30)
 1239  00001d4c  90220000	lbu	r2,(r1)
 1240  00001d50  60410030	seqi	r1,r2,#48
 1241  00001d54  10200074	beqz	r1,L81_LF2
 1242  00001d58  54000000	nop; delay slot nop
 1243  00001d5c  8fc20000	lw	r2,(r30)
 1244  00001d60  20410001	addi	r1,r2,#1
 1245  00001d64  00011020	add	r2,r0,r1
 1246  00001d68  afc20000	sw	(r30),r2
 1247  00001d6c  8fc10000	lw	r1,(r30)
 1248  00001d70  90220000	lbu	r2,(r1)
 1249  00001d74  60410078	seqi	r1,r2,#120
 1250  00001d78  14200020	bnez	r1,L83_LF2
 1251  00001d7c  54000000	nop; delay slot nop
 1252  00001d80  8fc10000	lw	r1,(r30)
 1253  00001d84  90220000	lbu	r2,(r1)
 1254  00001d88  60410058	seqi	r1,r2,#88
 1255  00001d8c  1420000c	bnez	r1,L83_LF2
 1256  00001d90  54000000	nop; delay slot nop
 1257  00001d94  08000024	j	L82_LF2
 1258  00001d98  54000000	nop; delay slot nop
 1259  00001d9c          	L83_LF2:
 1260  00001d9c  20010010	addi	r1,r0,#16
 1261  00001da0  afc10008	sw	8(r30),r1
 1262  00001da4  8fc20000	lw	r2,(r30)
 1263  00001da8  20410001	addi	r1,r2,#1
 1264  00001dac  00011020	add	r2,r0,r1
 1265  00001db0  afc20000	sw	(r30),r2
 1266  00001db4  0800000c	j	L84_LF2
 1267  00001db8  54000000	nop; delay slot nop
 1268  00001dbc          	L82_LF2:
 1269  00001dbc  20010008	addi	r1,r0,#8
 1270  00001dc0  afc10008	sw	8(r30),r1
 1271  00001dc4          	L84_LF2:
 1272  00001dc4  0800000c	j	L80_LF2
 1273  00001dc8  54000000	nop; delay slot nop
 1274  00001dcc          	L81_LF2:
 1275  00001dcc  2001000a	addi	r1,r0,#10
 1276  00001dd0  afc10008	sw	8(r30),r1
 1277  00001dd4          	L85_LF2:
 1278  00001dd4          	L80_LF2:
 1279  00001dd4  8fc10008	lw	r1,8(r30)
 1280  00001dd8  70220000	slei	r2,r1,#0
 1281  00001ddc  1440001c	bnez	r2,L87_LF2
 1282  00001de0  54000000	nop; delay slot nop
 1283  00001de4  8fc10008	lw	r1,8(r30)
 1284  00001de8  6c220010	sgti	r2,r1,#16
 1285  00001dec  1440000c	bnez	r2,L87_LF2
 1286  00001df0  54000000	nop; delay slot nop
 1287  00001df4  08000010	j	L86_LF2
 1288  00001df8  54000000	nop; delay slot nop
 1289  00001dfc          	L87_LF2:
 1290  00001dfc  8fc1fff4	lw	r1,-12(r30)
 1291  00001e00  08000188	j	L72_LF2
 1292  00001e04  54000000	nop; delay slot nop
 1293  00001e08          	L86_LF2:
 1294  00001e08  54000000	nop
 1295  00001e0c          	L88_LF2:
 1296  00001e0c  8fc10000	lw	r1,(r30)
 1297  00001e10  90220000	lbu	r2,(r1)
 1298  00001e14  6c41002f	sgtui	r1,r2,#47
 1299  00001e18  10200030	beqz	r1,L91_LF2
 1300  00001e1c  54000000	nop; delay slot nop
 1301  00001e20  8fc10000	lw	r1,(r30)
 1302  00001e24  90220000	lbu	r2,(r1)
 1303  00001e28  70410039	sleui	r1,r2,#57
 1304  00001e2c  1020001c	beqz	r1,L91_LF2
 1305  00001e30  54000000	nop; delay slot nop
 1306  00001e34  8fc10000	lw	r1,(r30)
 1307  00001e38  90220000	lbu	r2,(r1)
 1308  00001e3c  2041ffd0	addi	r1,r2,#-48
 1309  00001e40  afc1fff0	sw	-16(r30),r1
 1310  00001e44  0800008c	j	L92_LF2
 1311  00001e48  54000000	nop; delay slot nop
 1312  00001e4c          	L91_LF2:
 1313  00001e4c  8fc10000	lw	r1,(r30)
 1314  00001e50  90220000	lbu	r2,(r1)
 1315  00001e54  6c410060	sgtui	r1,r2,#96
 1316  00001e58  10200030	beqz	r1,L93_LF2
 1317  00001e5c  54000000	nop; delay slot nop
 1318  00001e60  8fc10000	lw	r1,(r30)
 1319  00001e64  90220000	lbu	r2,(r1)
 1320  00001e68  7041007a	sleui	r1,r2,#122
 1321  00001e6c  1020001c	beqz	r1,L93_LF2
 1322  00001e70  54000000	nop; delay slot nop
 1323  00001e74  8fc10000	lw	r1,(r30)
 1324  00001e78  90220000	lbu	r2,(r1)
 1325  00001e7c  2041ffa9	addi	r1,r2,#-87
 1326  00001e80  afc1fff0	sw	-16(r30),r1
 1327  00001e84  0800004c	j	L92_LF2
 1328  00001e88  54000000	nop; delay slot nop
 1329  00001e8c          	L93_LF2:
 1330  00001e8c  8fc10000	lw	r1,(r30)
 1331  00001e90  90220000	lbu	r2,(r1)
 1332  00001e94  6c410040	sgtui	r1,r2,#64
 1333  00001e98  10200030	beqz	r1,L95_LF2
 1334  00001e9c  54000000	nop; delay slot nop
 1335  00001ea0  8fc10000	lw	r1,(r30)
 1336  00001ea4  90220000	lbu	r2,(r1)
 1337  00001ea8  7041005a	sleui	r1,r2,#90
 1338  00001eac  1020001c	beqz	r1,L95_LF2
 1339  00001eb0  54000000	nop; delay slot nop
 1340  00001eb4  8fc10000	lw	r1,(r30)
 1341  00001eb8  90220000	lbu	r2,(r1)
 1342  00001ebc  2041ffc9	addi	r1,r2,#-55
 1343  00001ec0  afc1fff0	sw	-16(r30),r1
 1344  00001ec4  0800000c	j	L92_LF2
 1345  00001ec8  54000000	nop; delay slot nop
 1346  00001ecc          	L95_LF2:
 1347  00001ecc  200103e8	addi	r1,r0,#1000
 1348  00001ed0  afc1fff0	sw	-16(r30),r1
 1349  00001ed4          	L96_LF2:
 1350  00001ed4          	L94_LF2:
 1351  00001ed4          	L92_LF2:
 1352  00001ed4  8fc1fff0	lw	r1,-16(r30)
 1353  00001ed8  8fc20008	lw	r2,8(r30)
 1354  00001edc  0022082a	slt	r1,r1,r2
 1355  00001ee0  10200040	beqz	r1,L90_LF2
 1356  00001ee4  54000000	nop; delay slot nop
 1357  00001ee8  8fc1fff4	lw	r1,-12(r30)
 1358  00001eec  8fc20008	lw	r2,8(r30)
 1359  00001ef0  00200035	movi2fp	f0,r1
 1360  00001ef4  00400835	movi2fp	f1,r2
 1361  00001ef8  0401000e	mult	f0,f0,f1
 1362  00001efc  00000834	movfp2i	r1,f0
 1363  00001f00  afc1fff4	sw	-12(r30),r1
 1364  00001f04  8fc1fff4	lw	r1,-12(r30)
 1365  00001f08  8fc2fff0	lw	r2,-16(r30)
 1366  00001f0c  00220820	add	r1,r1,r2
 1367  00001f10  afc1fff4	sw	-12(r30),r1
 1368  00001f14  8fc20000	lw	r2,(r30)
 1369  00001f18  20410001	addi	r1,r2,#1
 1370  00001f1c  00011020	add	r2,r0,r1
 1371  00001f20  afc20000	sw	(r30),r2
 1372  00001f24          	L97_LF2:
 1373  00001f24          	L90_LF2:
 1374  00001f24  8fc1fff0	lw	r1,-16(r30)
 1375  00001f28  8fc20008	lw	r2,8(r30)
 1376  00001f2c  0022082a	slt	r1,r1,r2
 1377  00001f30  1420000c	bnez	r1,L98_LF2
 1378  00001f34  54000000	nop; delay slot nop
 1379  00001f38  0800000c	j	L89_LF2
 1380  00001f3c  54000000	nop; delay slot nop
 1381  00001f40          	L98_LF2:
 1382  00001f40  0bfffec8	j	L88_LF2
 1383  00001f44  54000000	nop; delay slot nop
 1384  00001f48          	L89_LF2:
 1385  00001f48  8fc10004	lw	r1,4(r30)
 1386  00001f4c  64220000	snei	r2,r1,#0
 1387  00001f50  10400010	beqz	r2,L99_LF2
 1388  00001f54  54000000	nop; delay slot nop
 1389  00001f58  8fc10004	lw	r1,4(r30)
 1390  00001f5c  8fc20000	lw	r2,(r30)
 1391  00001f60  ac220000	sw	(r1),r2
 1392  00001f64          	L99_LF2:
 1393  00001f64  8fc1fff4	lw	r1,-12(r30)
 1394  00001f68  8fc2ffec	lw	r2,-20(r30)
 1395  00001f6c  00200035	movi2fp	f0,r1
 1396  00001f70  00400835	movi2fp	f1,r2
 1397  00001f74  0401000e	mult	f0,f0,f1
 1398  00001f78  00000834	movfp2i	r1,f0
 1399  00001f7c  afc1fff4	sw	-12(r30),r1
 1400  00001f80  8fc1fff4	lw	r1,-12(r30)
 1401  00001f84  08000004	j	L72_LF2
 1402  00001f88  54000000	nop; delay slot nop
 1403  00001f8c          	L72_LF2:
 1404  00001f8c  8fa20000	lw	r2,0(r29)
 1405  00001f90  8fdffff8	lw	r31,-8(r30)
 1406  00001f94  001ee820	add	r29,r0,r30
 1407  00001f98  8fdefffc	lw	r30,-4(r30)
 1408  00001f9c  4be00000	jr	r31
 1409  00001fa0  54000000	nop
 1410  00001fa4          	.endproc _dstrtol
 1411  00001fa4          	.align 2
 1412  00001fa4          	.proc _bcopy
 1413  00001fa4          	.global _bcopy
 1414  00001fa4          	_bcopy:
 1415                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1416  00001fa4  afbefffc	sw	-4(r29),r30; push fp
 1417  00001fa8  001df020	add	r30,r0,r29; fp = sp
 1418  00001fac  afbffff8	sw	-8(r29),r31; push ret addr
 1419  00001fb0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1420  00001fb4  afa20000	sw	0(r29),r2
 1421  00001fb8  afa30004	sw	4(r29),r3
 1422  00001fbc  54000000	nop
 1423  00001fc0          	L101_LF2:
 1424  00001fc0  8fc10008	lw	r1,8(r30)
 1425  00001fc4  2022ffff	addi	r2,r1,#-1
 1426  00001fc8  afc20008	sw	8(r30),r2
 1427  00001fcc  6c210000	sgti	r1,r1,#0
 1428  00001fd0  1420000c	bnez	r1,L103_LF2
 1429  00001fd4  54000000	nop; delay slot nop
 1430  00001fd8  0800002c	j	L102_LF2
 1431  00001fdc  54000000	nop; delay slot nop
 1432  00001fe0          	L103_LF2:
 1433  00001fe0  8fc10004	lw	r1,4(r30)
 1434  00001fe4  20220001	addi	r2,r1,#1
 1435  00001fe8  afc20004	sw	4(r30),r2
 1436  00001fec  8fc20000	lw	r2,(r30)
 1437  00001ff0  20430001	addi	r3,r2,#1
 1438  00001ff4  afc30000	sw	(r30),r3
 1439  00001ff8  80420000	lb	r2,(r2)
 1440  00001ffc  a0220000	sb	(r1),r2
 1441  00002000  0bffffbc	j	L101_LF2
 1442  00002004  54000000	nop; delay slot nop
 1443  00002008          	L102_LF2:
 1444  00002008          	L100_LF2:
 1445  00002008  8fa20000	lw	r2,0(r29)
 1446  0000200c  8fa30004	lw	r3,4(r29)
 1447  00002010  8fdffff8	lw	r31,-8(r30)
 1448  00002014  001ee820	add	r29,r0,r30
 1449  00002018  8fdefffc	lw	r30,-4(r30)
 1450  0000201c  4be00000	jr	r31
 1451  00002020  54000000	nop
 1452  00002024          	.endproc _bcopy
 1453  00002024          	.align 2
 1454  00002024          	.proc _bzero
 1455  00002024          	.global _bzero
 1456  00002024          	_bzero:
 1457                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1458  00002024  afbefffc	sw	-4(r29),r30; push fp
 1459  00002028  001df020	add	r30,r0,r29; fp = sp
 1460  0000202c  afbffff8	sw	-8(r29),r31; push ret addr
 1461  00002030  2fbd0010	subui	r29,r29,#16; alloc local storage
 1462  00002034  afa20000	sw	0(r29),r2
 1463  00002038  54000000	nop
 1464  0000203c          	L105_LF2:
 1465  0000203c  8fc10004	lw	r1,4(r30)
 1466  00002040  2022ffff	addi	r2,r1,#-1
 1467  00002044  afc20004	sw	4(r30),r2
 1468  00002048  6c210000	sgti	r1,r1,#0
 1469  0000204c  1420000c	bnez	r1,L107_LF2
 1470  00002050  54000000	nop; delay slot nop
 1471  00002054  08000020	j	L106_LF2
 1472  00002058  54000000	nop; delay slot nop
 1473  0000205c          	L107_LF2:
 1474  0000205c  8fc10000	lw	r1,(r30)
 1475  00002060  20220001	addi	r2,r1,#1
 1476  00002064  afc20000	sw	(r30),r2
 1477  00002068  20020000	addi	r2,r0,(#0x0)&0xff
 1478  0000206c  a0220000	sb	(r1),r2
 1479  00002070  0bffffc8	j	L105_LF2
 1480  00002074  54000000	nop; delay slot nop
 1481  00002078          	L106_LF2:
 1482  00002078          	L104_LF2:
 1483  00002078  8fa20000	lw	r2,0(r29)
 1484  0000207c  8fdffff8	lw	r31,-8(r30)
 1485  00002080  001ee820	add	r29,r0,r30
 1486  00002084  8fdefffc	lw	r30,-4(r30)
 1487  00002088  4be00000	jr	r31
 1488  0000208c  54000000	nop
 1489  00002090          	.endproc _bzero
 1490  00002090          	.align 2
 1491  00002090          	.proc _min
 1492  00002090          	.global _min
 1493  00002090          	_min:
 1494                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1495  00002090  afbefffc	sw	-4(r29),r30; push fp
 1496  00002094  001df020	add	r30,r0,r29; fp = sp
 1497  00002098  afbffff8	sw	-8(r29),r31; push ret addr
 1498  0000209c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1499  000020a0  afa20000	sw	0(r29),r2
 1500  000020a4  afa30004	sw	4(r29),r3
 1501  000020a8  8fc10000	lw	r1,(r30)
 1502  000020ac  8fc20004	lw	r2,4(r30)
 1503  000020b0  0022182c	sle	r3,r1,r2
 1504  000020b4  14600008	bnez	r3,L109_LF2
 1505  000020b8  54000000	nop; delay slot nop
 1506  000020bc  8fc10004	lw	r1,4(r30)
 1507  000020c0          	L109_LF2:
 1508  000020c0  08000004	j	L108_LF2
 1509  000020c4  54000000	nop; delay slot nop
 1510  000020c8          	L108_LF2:
 1511  000020c8  8fa20000	lw	r2,0(r29)
 1512  000020cc  8fa30004	lw	r3,4(r29)
 1513  000020d0  8fdffff8	lw	r31,-8(r30)
 1514  000020d4  001ee820	add	r29,r0,r30
 1515  000020d8  8fdefffc	lw	r30,-4(r30)
 1516  000020dc  4be00000	jr	r31
 1517  000020e0  54000000	nop
 1518  000020e4          	.endproc _min
 1519  000020e4          	.align 2
 1520  000020e4          	.proc _max
 1521  000020e4          	.global _max
 1522  000020e4          	_max:
 1523                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1524  000020e4  afbefffc	sw	-4(r29),r30; push fp
 1525  000020e8  001df020	add	r30,r0,r29; fp = sp
 1526  000020ec  afbffff8	sw	-8(r29),r31; push ret addr
 1527  000020f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1528  000020f4  afa20000	sw	0(r29),r2
 1529  000020f8  afa30004	sw	4(r29),r3
 1530  000020fc  8fc10000	lw	r1,(r30)
 1531  00002100  8fc20004	lw	r2,4(r30)
 1532  00002104  0022182d	sge	r3,r1,r2
 1533  00002108  14600008	bnez	r3,L111_LF2
 1534  0000210c  54000000	nop; delay slot nop
 1535  00002110  8fc10004	lw	r1,4(r30)
 1536  00002114          	L111_LF2:
 1537  00002114  08000004	j	L110_LF2
 1538  00002118  54000000	nop; delay slot nop
 1539  0000211c          	L110_LF2:
 1540  0000211c  8fa20000	lw	r2,0(r29)
 1541  00002120  8fa30004	lw	r3,4(r29)
 1542  00002124  8fdffff8	lw	r31,-8(r30)
 1543  00002128  001ee820	add	r29,r0,r30
 1544  0000212c  8fdefffc	lw	r30,-4(r30)
 1545  00002130  4be00000	jr	r31
 1546  00002134  54000000	nop
 1547  00002138          	.endproc _max
 1548                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1549                      ;;;
 1550                      ;;; Most of the traps are called in files from libtraps.
 1553  00002138          	.align 2
 1554  00002138          	.proc _exit
 1555  00002138          	.global _exit
 1556  00002138          	_exit:
 1557  00002138  44000300	trap	#0x300
 1558  0000213c  4be00000	jr	r31
 1559  00002140  54000000	nop
 1560  00002144          	.endproc _exit
 1562                      ; for the benefit of gcc.
 1563  00002144          	.proc ___main
 1564  00002144          	.global ___main
 1565  00002144          	___main:
 1566  00002144  4be00000	jr	r31
 1567  00002148  54000000	nop
 1568  0000214c          	.endproc ___main
 1569  0000214c          	.text
 1570  0000214c          	.global _etext
 1571  0000214c          	_etext:
 1572  0000214c          	.align 3
 1573  00002150          	.data
 1574  000031cb          	.global _edata
 1575  000031cb          	_edata:
