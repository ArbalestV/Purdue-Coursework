 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 197
    4                      ; Text size: 4356
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  0a546865	.ascii "\nThe Test Program 1..\000"
   85  00003038  20546573	
   85  0000303c  74205072	
   85  00003040  6f677261	
   85  00003044  6d20312e	
   85  00003048  2e00    	
   86  0000304a          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  68656c6c	.ascii "hello_world (%d): Hello world!\n\000"
   88  00003050  6f5f776f	
   88  00003054  726c6420	
   88  00003058  28256429	
   88  0000305c  3a204865	
   88  00003060  6c6c6f20	
   88  00003064  776f726c	
   88  00003068  64210a00	
   89  0000306c          	.align 2
   90  0000306c          	LC3_LF0:
   91  0000306c  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  00003070  6f5f776f	
   91  00003074  726c6420	
   91  00003078  28256429	
   91  0000307c  3a204261	
   91  00003080  64207365	
   91  00003084  6d617068	
   91  00003088  6f726520	
   91  0000308c  735f7072	
   91  00003090  6f63735f	
   91  00003094  636f6d70	
   91  00003098  6c657465	
   91  0000309c  64202825	
   91  000030a0  6429210a	
   91  000030a4  00      	
   92  000030a5          	.align 2
   93  000030a8          	LC4_LF0:
   94  000030a8  0a456e64	.ascii "\nEnd of The Test Program 1..\000"
   94  000030ac  206f6620	
   94  000030b0  54686520	
   94  000030b4  54657374	
   94  000030b8  2050726f	
   94  000030bc  6772616d	
   94  000030c0  20312e2e	
   94  000030c4  00      	
   95  000030c5          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc30004	lw	r3,4(r30)
  107  000010ec  0c00100c	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  64410002	snei	r1,r2,#2
  110  000010f8  10200028	beqz	r1,L17_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff8	addi	r29,r29,#-8
  113  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  114  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  115  0000110c  afa40000	sw	(r29),r4
  116  00001110  0c000128	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  0c000228	jal	_Exit
  119  0000111c  54000000	nop; not filled.
  120  00001120  23bd0008	addi	r29,r29,#8
  121  00001124          	L17_LF0:
  122  00001124  23bdfff0	addi	r29,r29,#-16
  123  00001128  8c630004	lw	r3,4(r3)
  124  0000112c  afa30000	sw	(r29),r3
  125  00001130  20040000	addi	r4,r0,#0
  126  00001134  afa40004	sw	4(r29),r4
  127  00001138  2004000a	addi	r4,r0,#10
  128  0000113c  afa40008	sw	8(r29),r4
  129  00001140  0c000abc	jal	_dstrtol
  130  00001144  54000000	nop; not filled.
  131  00001148  00011020	add	r2,r0,r1
  132  0000114c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  133  00001150  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  134  00001154  afa40000	sw	(r29),r4
  135  00001158  0c0000e0	jal	_Printf
  136  0000115c  54000000	nop; not filled.
  137  00001160  0c0000e4	jal	_getpid
  138  00001164  54000000	nop; not filled.
  139  00001168  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  140  0000116c  2484304c	addui	r4,r4,(LC2_LF0)&0xffff
  141  00001170  afa40000	sw	(r29),r4
  142  00001174  afa10004	sw	4(r29),r1
  143  00001178  0c0000c0	jal	_Printf
  144  0000117c  54000000	nop; not filled.
  145  00001180  afa20000	sw	(r29),r2
  146  00001184  0c000108	jal	_sem_signal
  147  00001188  54000000	nop; not filled.
  148  0000118c  23bd0010	addi	r29,r29,#16
  149  00001190  64210001	snei	r1,r1,#1
  150  00001194  10200038	beqz	r1,L18_LF0
  151  00001198  54000000	nop; not filled.
  152  0000119c  0c0000a8	jal	_getpid
  153  000011a0  54000000	nop; not filled.
  154  000011a4  23bdfff0	addi	r29,r29,#-16
  155  000011a8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  156  000011ac  2484306c	addui	r4,r4,(LC3_LF0)&0xffff
  157  000011b0  afa40000	sw	(r29),r4
  158  000011b4  afa10004	sw	4(r29),r1
  159  000011b8  afa20008	sw	8(r29),r2
  160  000011bc  0c00007c	jal	_Printf
  161  000011c0  54000000	nop; not filled.
  162  000011c4  0c00017c	jal	_Exit
  163  000011c8  54000000	nop; not filled.
  164  000011cc  23bd0010	addi	r29,r29,#16
  165  000011d0          	L18_LF0:
  166  000011d0  23bdfff8	addi	r29,r29,#-8
  167  000011d4  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  168  000011d8  248430a8	addui	r4,r4,(LC4_LF0)&0xffff
  169  000011dc  afa40000	sw	(r29),r4
  170  000011e0  0c000058	jal	_Printf
  171  000011e4  54000000	nop; not filled.
  172  000011e8  23bd0008	addi	r29,r29,#8
  173  000011ec  0c000f00	jal	_exit
  174  000011f0  54000000	nop
  175  000011f4          	.endproc _main
  176                      ;;;
  177                      ;;; Stub functions for DLX traps.
  178                      ;;;
  179                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  180                      ;;;
  181                      ;;; The traps such as Open and Close
  182                      ;;; (note the capital letters) are for use by user programs.  The traps
  183                      ;;; with names such as open and close (lower case) are for use by the OS.
  184                      ;;;
  187  000011f4          	.align 2
  189                      ;;; The following are the traps to be used by user-level programs
  190                      ;;;
  192  000011f4          	.align 2
  193  000011f4          	.proc _Open
  194  000011f4          	.global _Open
  195  000011f4          	_Open:
  196                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  197                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  198                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  199  000011f4  44000213	trap	#0x213
  200  000011f8  4be00000	jr	r31
  201  000011fc  54000000	nop
  202  00001200          	.endproc _Open
  204  00001200          	.proc _Close
  205  00001200          	.global _Close
  206  00001200          	_Close:
  207  00001200  44000214	trap	#0x214
  208  00001204  4be00000	jr	r31
  209  00001208  54000000	nop
  210  0000120c          	.endproc _Close
  212  0000120c          	.proc _Read
  213  0000120c          	.global _Read
  214  0000120c          	_Read:
  215  0000120c  44000210	trap	#0x210
  216  00001210  4be00000	jr	r31
  217  00001214  54000000	nop
  218  00001218          	.endproc _Read
  220  00001218          	.proc _Write
  221  00001218          	.global _Write
  222  00001218          	_Write:
  223  00001218  44000211	trap	#0x211
  224  0000121c  4be00000	jr	r31
  225  00001220  54000000	nop
  226  00001224          	.endproc _Write
  228  00001224          	.proc _Lseek
  229  00001224          	.global _Lseek
  230  00001224          	_Lseek:
  231  00001224  44000212	trap	#0x212
  232  00001228  4be00000	jr	r31
  233  0000122c  54000000	nop
  234  00001230          	.endproc _Lseek
  236  00001230          	.proc _Putchar
  237  00001230          	.global _Putchar
  238  00001230          	_Putchar:
  239  00001230  44000280	trap	#0x280
  240  00001234  4be00000	jr	r31
  241  00001238  54000000	nop
  242  0000123c          	.endproc _Putchar
  244  0000123c          	.proc _Printf
  245  0000123c          	.global _Printf
  246  0000123c          	_Printf:
  247  0000123c  44000201	trap	#0x201
  248  00001240  4be00000	jr	r31
  249  00001244  54000000	nop
  250  00001248          	.endproc _Printf
  252  00001248          	.proc _getpid
  253  00001248          	.global _getpid
  254  00001248          	_getpid:
  255  00001248  44000431	trap	#0x431
  256  0000124c  4be00000	jr	r31
  257  00001250  54000000	nop
  258  00001254          	.endproc _getpid
  260  00001254          	.proc _process_create
  261  00001254          	.global _process_create
  262  00001254          	_process_create:
  263  00001254  44000432	trap	#0x432
  264  00001258  4be00000	jr	r31
  265  0000125c  54000000	nop
  266  00001260          	.endproc _process_create
  268  00001260          	.proc _shmget
  269  00001260          	.global _shmget
  270  00001260          	_shmget:
  271  00001260  44000440	trap	#0x440
  272  00001264  4be00000	jr	r31
  273  00001268  54000000	nop
  274  0000126c          	.endproc _shmget
  276  0000126c          	.proc _shmat
  277  0000126c          	.global _shmat
  278  0000126c          	_shmat:
  279  0000126c  44000441	trap	#0x441
  280  00001270  4be00000	jr	r31
  281  00001274  54000000	nop
  282  00001278          	.endproc _shmat
  284  00001278          	.proc _sem_create
  285  00001278          	.global _sem_create
  286  00001278          	_sem_create:
  287  00001278  44000450	trap	#0x450
  288  0000127c  4be00000	jr	r31
  289  00001280  54000000	nop
  290  00001284          	.endproc _sem_create
  292  00001284          	.proc _sem_wait
  293  00001284          	.global _sem_wait
  294  00001284          	_sem_wait:
  295  00001284  44000451	trap	#0x451
  296  00001288  4be00000	jr	r31
  297  0000128c  54000000	nop
  298  00001290          	.endproc _sem_wait
  300  00001290          	.proc _sem_signal
  301  00001290          	.global _sem_signal
  302  00001290          	_sem_signal:
  303  00001290  44000452	trap	#0x452
  304  00001294  4be00000	jr	r31
  305  00001298  54000000	nop
  306  0000129c          	.endproc _sem_signal
  308  0000129c          	.proc _lock_create
  309  0000129c          	.global _lock_create
  310  0000129c          	_lock_create:
  311  0000129c  44000453	trap	#0x453
  312  000012a0  4be00000	jr	r31
  313  000012a4  54000000	nop
  314  000012a8          	.endproc _lock_create
  316  000012a8          	.proc _lock_acquire
  317  000012a8          	.global _lock_acquire
  318  000012a8          	_lock_acquire:
  319  000012a8  44000454	trap	#0x454
  320  000012ac  4be00000	jr	r31
  321  000012b0  54000000	nop
  322  000012b4          	.endproc _lock_acquire
  324  000012b4          	.proc _lock_release
  325  000012b4          	.global _lock_release
  326  000012b4          	_lock_release:
  327  000012b4  44000455	trap	#0x455
  328  000012b8  4be00000	jr	r31
  329  000012bc  54000000	nop
  330  000012c0          	.endproc _lock_release
  332  000012c0          	.proc _cond_create
  333  000012c0          	.global _cond_create
  334  000012c0          	_cond_create:
  335  000012c0  44000456	trap	#0x456
  336  000012c4  4be00000	jr	r31
  337  000012c8  54000000	nop
  338  000012cc          	.endproc _cond_create
  340  000012cc          	.proc _cond_wait
  341  000012cc          	.global _cond_wait
  342  000012cc          	_cond_wait:
  343  000012cc  44000457	trap	#0x457
  344  000012d0  4be00000	jr	r31
  345  000012d4  54000000	nop
  346  000012d8          	.endproc _cond_wait
  348  000012d8          	.proc _cond_signal
  349  000012d8          	.global _cond_signal
  350  000012d8          	_cond_signal:
  351  000012d8  44000458	trap	#0x458
  352  000012dc  4be00000	jr	r31
  353  000012e0  54000000	nop
  354  000012e4          	.endproc _cond_signal
  356  000012e4          	.proc _cond_broadcast
  357  000012e4          	.global _cond_broadcast
  358  000012e4          	_cond_broadcast:
  359  000012e4  44000459	trap	#0x459
  360  000012e8  4be00000	jr	r31
  361  000012ec  54000000	nop
  362  000012f0          	.endproc _cond_broadcast
  364  000012f0          	.proc _mbox_create
  365  000012f0          	.global _mbox_create
  366  000012f0          	_mbox_create:
  367  000012f0  44000460	trap	#0x460
  368  000012f4  4be00000	jr	r31
  369  000012f8  54000000	nop
  370  000012fc          	.endproc _mbox_create
  372  000012fc          	.proc _mbox_open
  373  000012fc          	.global _mbox_open
  374  000012fc          	_mbox_open:
  375  000012fc  44000461	trap	#0x461
  376  00001300  4be00000	jr	r31
  377  00001304  54000000	nop
  378  00001308          	.endproc _mbox_open
  380  00001308          	.proc _mbox_close
  381  00001308          	.global _mbox_close
  382  00001308          	_mbox_close:
  383  00001308  44000462	trap	#0x462
  384  0000130c  4be00000	jr	r31
  385  00001310  54000000	nop
  386  00001314          	.endproc _mbox_close
  388  00001314          	.proc _mbox_send
  389  00001314          	.global _mbox_send
  390  00001314          	_mbox_send:
  391  00001314  44000463	trap	#0x463
  392  00001318  4be00000	jr	r31
  393  0000131c  54000000	nop
  394  00001320          	.endproc _mbox_send
  396  00001320          	.proc _mbox_recv
  397  00001320          	.global _mbox_recv
  398  00001320          	_mbox_recv:
  399  00001320  44000464	trap	#0x464
  400  00001324  4be00000	jr	r31
  401  00001328  54000000	nop
  402  0000132c          	.endproc _mbox_recv
  404  0000132c          	.proc _sleep
  405  0000132c          	.global _sleep
  406  0000132c          	_sleep:
  407  0000132c  44000465	trap	#0x465
  408  00001330  4be00000	jr	r31
  409  00001334  54000000	nop
  410  00001338          	.endproc _sleep
  412  00001338          	.proc _yield
  413  00001338          	.global _yield
  414  00001338          	_yield:
  415  00001338  44000466	trap	#0x466
  416  0000133c  4be00000	jr	r31
  417  00001340  54000000	nop
  418  00001344          	.endproc _yield
  421  00001344          	.proc _Exit
  422  00001344          	.global _Exit
  423  00001344          	_Exit:
  424  00001344  44000500	trap	#0x500
  425  00001348  4be00000	jr	r31
  426  0000134c  54000000	nop
  427  00001350          	.endproc _Exit
  430  00001350          	.proc _malloc
  431  00001350          	.global _malloc
  432  00001350          	_malloc:
  433  00001350  44000467	trap	#0x467
  434  00001354  4be00000	jr	r31
  435  00001358          	.endproc _malloc
  438  00001358          	.proc _mfree
  439  00001358          	.global _mfree
  440  00001358          	_mfree:
  441  00001358  44000468	trap	#0x468
  442  0000135c  4be00000	jr	r31
  443  00001360          	.endproc _mfree
  444                      ; Compiled by GCC
  446  00001360          	.align 2
  447  00001360          	.proc _isspace
  448  00001360          	.global _isspace
  449  00001360          	_isspace:
  450                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  451  00001360  afbefffc	sw	-4(r29),r30; push fp
  452  00001364  001df020	add	r30,r0,r29; fp = sp
  453  00001368  afbffff8	sw	-8(r29),r31; push ret addr
  454  0000136c  2fbd0018	subui	r29,r29,#24; alloc local storage
  455  00001370  afa20000	sw	0(r29),r2
  456  00001374  afa30004	sw	4(r29),r3
  457  00001378  afa40008	sw	8(r29),r4
  458  0000137c  83c20003	lb	r2,3(r30)
  459  00001380  20010000	addi	r1,r0,#0
  460  00001384  304300ff	andi	r3,r2,#0x00ff
  461  00001388  60640020	seqi	r4,r3,#32
  462  0000138c  1480002c	bnez	r4,L3_LF2
  463  00001390  54000000	nop; delay slot nop
  464  00001394  304300ff	andi	r3,r2,#0x00ff
  465  00001398  60640009	seqi	r4,r3,#9
  466  0000139c  1480001c	bnez	r4,L3_LF2
  467  000013a0  54000000	nop; delay slot nop
  468  000013a4  304300ff	andi	r3,r2,#0x00ff
  469  000013a8  6064000a	seqi	r4,r3,#10
  470  000013ac  1480000c	bnez	r4,L3_LF2
  471  000013b0  54000000	nop; delay slot nop
  472  000013b4  08000008	j	L2_LF2
  473  000013b8  54000000	nop; delay slot nop
  474  000013bc          	L3_LF2:
  475  000013bc  20010001	addi	r1,r0,#1
  476  000013c0          	L2_LF2:
  477  000013c0  08000004	j	L1_LF2
  478  000013c4  54000000	nop; delay slot nop
  479  000013c8          	L1_LF2:
  480  000013c8  8fa20000	lw	r2,0(r29)
  481  000013cc  8fa30004	lw	r3,4(r29)
  482  000013d0  8fa40008	lw	r4,8(r29)
  483  000013d4  8fdffff8	lw	r31,-8(r30)
  484  000013d8  001ee820	add	r29,r0,r30
  485  000013dc  8fdefffc	lw	r30,-4(r30)
  486  000013e0  4be00000	jr	r31
  487  000013e4  54000000	nop
  488  000013e8          	.endproc _isspace
  489  000013e8          	.align 2
  490  000013e8          	.proc _isxdigit
  491  000013e8          	.global _isxdigit
  492  000013e8          	_isxdigit:
  493                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  494  000013e8  afbefffc	sw	-4(r29),r30; push fp
  495  000013ec  001df020	add	r30,r0,r29; fp = sp
  496  000013f0  afbffff8	sw	-8(r29),r31; push ret addr
  497  000013f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  498  000013f8  afa20000	sw	0(r29),r2
  499  000013fc  afa30004	sw	4(r29),r3
  500  00001400  afa40008	sw	8(r29),r4
  501  00001404  83c20003	lb	r2,3(r30)
  502  00001408  20010000	addi	r1,r0,#0
  503  0000140c  304300ff	andi	r3,r2,#0x00ff
  504  00001410  6c64002f	sgtui	r4,r3,#47
  505  00001414  1080001c	beqz	r4,L7_LF2
  506  00001418  54000000	nop; delay slot nop
  507  0000141c  304300ff	andi	r3,r2,#0x00ff
  508  00001420  70640039	sleui	r4,r3,#57
  509  00001424  1480005c	bnez	r4,L6_LF2
  510  00001428  54000000	nop; delay slot nop
  511  0000142c  08000004	j	L7_LF2
  512  00001430  54000000	nop; delay slot nop
  513  00001434          	L7_LF2:
  514  00001434  304300ff	andi	r3,r2,#0x00ff
  515  00001438  6c640060	sgtui	r4,r3,#96
  516  0000143c  1080001c	beqz	r4,L8_LF2
  517  00001440  54000000	nop; delay slot nop
  518  00001444  304300ff	andi	r3,r2,#0x00ff
  519  00001448  70640066	sleui	r4,r3,#102
  520  0000144c  14800034	bnez	r4,L6_LF2
  521  00001450  54000000	nop; delay slot nop
  522  00001454  08000004	j	L8_LF2
  523  00001458  54000000	nop; delay slot nop
  524  0000145c          	L8_LF2:
  525  0000145c  304300ff	andi	r3,r2,#0x00ff
  526  00001460  6c640040	sgtui	r4,r3,#64
  527  00001464  10800020	beqz	r4,L5_LF2
  528  00001468  54000000	nop; delay slot nop
  529  0000146c  304300ff	andi	r3,r2,#0x00ff
  530  00001470  70640041	sleui	r4,r3,#65
  531  00001474  1480000c	bnez	r4,L6_LF2
  532  00001478  54000000	nop; delay slot nop
  533  0000147c  08000008	j	L5_LF2
  534  00001480  54000000	nop; delay slot nop
  535  00001484          	L6_LF2:
  536  00001484  20010001	addi	r1,r0,#1
  537  00001488          	L5_LF2:
  538  00001488  08000004	j	L4_LF2
  539  0000148c  54000000	nop; delay slot nop
  540  00001490          	L4_LF2:
  541  00001490  8fa20000	lw	r2,0(r29)
  542  00001494  8fa30004	lw	r3,4(r29)
  543  00001498  8fa40008	lw	r4,8(r29)
  544  0000149c  8fdffff8	lw	r31,-8(r30)
  545  000014a0  001ee820	add	r29,r0,r30
  546  000014a4  8fdefffc	lw	r30,-4(r30)
  547  000014a8  4be00000	jr	r31
  548  000014ac  54000000	nop
  549  000014b0          	.endproc _isxdigit
  550  000014b0          	.align 2
  551  000014b0          	.proc _dstrcpy
  552  000014b0          	.global _dstrcpy
  553  000014b0          	_dstrcpy:
  554                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  555  000014b0  afbefffc	sw	-4(r29),r30; push fp
  556  000014b4  001df020	add	r30,r0,r29; fp = sp
  557  000014b8  afbffff8	sw	-8(r29),r31; push ret addr
  558  000014bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  559  000014c0  afa20000	sw	0(r29),r2
  560  000014c4  afa30004	sw	4(r29),r3
  561  000014c8  8fc10000	lw	r1,(r30)
  562  000014cc  afc1fff4	sw	-12(r30),r1
  563  000014d0          	L10_LF2:
  564  000014d0  8fc10000	lw	r1,(r30)
  565  000014d4  20220001	addi	r2,r1,#1
  566  000014d8  afc20000	sw	(r30),r2
  567  000014dc  8fc20004	lw	r2,4(r30)
  568  000014e0  20430001	addi	r3,r2,#1
  569  000014e4  afc30004	sw	4(r30),r3
  570  000014e8  80420000	lb	r2,(r2)
  571  000014ec  a0220000	sb	(r1),r2
  572  000014f0  a3c2fff3	sb	-13(r30),r2
  573  000014f4          	L12_LF2:
  574  000014f4  93c1fff3	lbu	r1,-13(r30)
  575  000014f8  64220000	snei	r2,r1,#0
  576  000014fc  1440000c	bnez	r2,L13_LF2
  577  00001500  54000000	nop; delay slot nop
  578  00001504  0800000c	j	L11_LF2
  579  00001508  54000000	nop; delay slot nop
  580  0000150c          	L13_LF2:
  581  0000150c  0bffffc0	j	L10_LF2
  582  00001510  54000000	nop; delay slot nop
  583  00001514          	L11_LF2:
  584  00001514  8fc1fff4	lw	r1,-12(r30)
  585  00001518  08000004	j	L9_LF2
  586  0000151c  54000000	nop; delay slot nop
  587  00001520          	L9_LF2:
  588  00001520  8fa20000	lw	r2,0(r29)
  589  00001524  8fa30004	lw	r3,4(r29)
  590  00001528  8fdffff8	lw	r31,-8(r30)
  591  0000152c  001ee820	add	r29,r0,r30
  592  00001530  8fdefffc	lw	r30,-4(r30)
  593  00001534  4be00000	jr	r31
  594  00001538  54000000	nop
  595  0000153c          	.endproc _dstrcpy
  596  0000153c          	.align 2
  597  0000153c          	.proc _dstrncpy
  598  0000153c          	.global _dstrncpy
  599  0000153c          	_dstrncpy:
  600                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  601  0000153c  afbefffc	sw	-4(r29),r30; push fp
  602  00001540  001df020	add	r30,r0,r29; fp = sp
  603  00001544  afbffff8	sw	-8(r29),r31; push ret addr
  604  00001548  2fbd0018	subui	r29,r29,#24; alloc local storage
  605  0000154c  afa20000	sw	0(r29),r2
  606  00001550  afa30004	sw	4(r29),r3
  607  00001554  8fc10000	lw	r1,(r30)
  608  00001558  afc1fff4	sw	-12(r30),r1
  609  0000155c          	L15_LF2:
  610  0000155c  8fc10008	lw	r1,8(r30)
  611  00001560  2022ffff	addi	r2,r1,#-1
  612  00001564  afc20008	sw	8(r30),r2
  613  00001568  70210000	slei	r1,r1,#0
  614  0000156c  1020000c	beqz	r1,L18_LF2
  615  00001570  54000000	nop; delay slot nop
  616  00001574  08000048	j	L16_LF2
  617  00001578  54000000	nop; delay slot nop
  618  0000157c          	L18_LF2:
  619  0000157c  8fc10000	lw	r1,(r30)
  620  00001580  20220001	addi	r2,r1,#1
  621  00001584  afc20000	sw	(r30),r2
  622  00001588  8fc20004	lw	r2,4(r30)
  623  0000158c  20430001	addi	r3,r2,#1
  624  00001590  afc30004	sw	4(r30),r3
  625  00001594  80420000	lb	r2,(r2)
  626  00001598  a0220000	sb	(r1),r2
  627  0000159c  a3c2fff3	sb	-13(r30),r2
  628  000015a0          	L17_LF2:
  629  000015a0  93c1fff3	lbu	r1,-13(r30)
  630  000015a4  64220000	snei	r2,r1,#0
  631  000015a8  1440000c	bnez	r2,L19_LF2
  632  000015ac  54000000	nop; delay slot nop
  633  000015b0  0800000c	j	L16_LF2
  634  000015b4  54000000	nop; delay slot nop
  635  000015b8          	L19_LF2:
  636  000015b8  0bffffa0	j	L15_LF2
  637  000015bc  54000000	nop; delay slot nop
  638  000015c0          	L16_LF2:
  639  000015c0  8fc1fff4	lw	r1,-12(r30)
  640  000015c4  08000004	j	L14_LF2
  641  000015c8  54000000	nop; delay slot nop
  642  000015cc          	L14_LF2:
  643  000015cc  8fa20000	lw	r2,0(r29)
  644  000015d0  8fa30004	lw	r3,4(r29)
  645  000015d4  8fdffff8	lw	r31,-8(r30)
  646  000015d8  001ee820	add	r29,r0,r30
  647  000015dc  8fdefffc	lw	r30,-4(r30)
  648  000015e0  4be00000	jr	r31
  649  000015e4  54000000	nop
  650  000015e8          	.endproc _dstrncpy
  651  000015e8          	.align 2
  652  000015e8          	.proc _dstrcat
  653  000015e8          	.global _dstrcat
  654  000015e8          	_dstrcat:
  655                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  656  000015e8  afbefffc	sw	-4(r29),r30; push fp
  657  000015ec  001df020	add	r30,r0,r29; fp = sp
  658  000015f0  afbffff8	sw	-8(r29),r31; push ret addr
  659  000015f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  660  000015f8  afa20000	sw	0(r29),r2
  661  000015fc  8fc10000	lw	r1,(r30)
  662  00001600  afc1fff4	sw	-12(r30),r1
  663  00001604          	L21_LF2:
  664  00001604  8fc10000	lw	r1,(r30)
  665  00001608  90220000	lbu	r2,(r1)
  666  0000160c  64410000	snei	r1,r2,#0
  667  00001610  1420000c	bnez	r1,L23_LF2
  668  00001614  54000000	nop; delay slot nop
  669  00001618  0800001c	j	L22_LF2
  670  0000161c  54000000	nop; delay slot nop
  671  00001620          	L23_LF2:
  672  00001620  8fc20000	lw	r2,(r30)
  673  00001624  20410001	addi	r1,r2,#1
  674  00001628  00011020	add	r2,r0,r1
  675  0000162c  afc20000	sw	(r30),r2
  676  00001630  0bffffd0	j	L21_LF2
  677  00001634  54000000	nop; delay slot nop
  678  00001638          	L22_LF2:
  679  00001638  23bdfff8	addi	r29,r29,#-8
  680  0000163c  001d0820	add	r1,r0,r29
  681  00001640  8fc20000	lw	r2,(r30)
  682  00001644  ac220000	sw	(r1),r2
  683  00001648  8fc20004	lw	r2,4(r30)
  684  0000164c  ac220004	sw	4(r1),r2
  685  00001650  0ffffe5c	jal	_dstrcpy
  686  00001654  54000000	nop; delay slot nop
  687  00001658  23bd0008	addi	r29,r29,#8
  688  0000165c  8fc1fff4	lw	r1,-12(r30)
  689  00001660  08000004	j	L20_LF2
  690  00001664  54000000	nop; delay slot nop
  691  00001668          	L20_LF2:
  692  00001668  8fa20000	lw	r2,0(r29)
  693  0000166c  8fdffff8	lw	r31,-8(r30)
  694  00001670  001ee820	add	r29,r0,r30
  695  00001674  8fdefffc	lw	r30,-4(r30)
  696  00001678  4be00000	jr	r31
  697  0000167c  54000000	nop
  698  00001680          	.endproc _dstrcat
  699  00001680          	.align 2
  700  00001680          	.proc _dstrncmp
  701  00001680          	.global _dstrncmp
  702  00001680          	_dstrncmp:
  703                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  704  00001680  afbefffc	sw	-4(r29),r30; push fp
  705  00001684  001df020	add	r30,r0,r29; fp = sp
  706  00001688  afbffff8	sw	-8(r29),r31; push ret addr
  707  0000168c  2fbd0018	subui	r29,r29,#24; alloc local storage
  708  00001690  afa20000	sw	0(r29),r2
  709  00001694  afa30004	sw	4(r29),r3
  710  00001698  54000000	nop
  711  0000169c  20010000	addi	r1,r0,#0
  712  000016a0  afc1fff4	sw	-12(r30),r1
  713  000016a4          	L25_LF2:
  714  000016a4  8fc1fff4	lw	r1,-12(r30)
  715  000016a8  8fc20008	lw	r2,8(r30)
  716  000016ac  0022082a	slt	r1,r1,r2
  717  000016b0  1420000c	bnez	r1,L28_LF2
  718  000016b4  54000000	nop; delay slot nop
  719  000016b8  08000088	j	L26_LF2
  720  000016bc  54000000	nop; delay slot nop
  721  000016c0          	L28_LF2:
  722  000016c0  8fc10004	lw	r1,4(r30)
  723  000016c4  90220000	lbu	r2,(r1)
  724  000016c8  64410000	snei	r1,r2,#0
  725  000016cc  14200018	bnez	r1,L29_LF2
  726  000016d0  54000000	nop; delay slot nop
  727  000016d4  20010000	addi	r1,r0,#0
  728  000016d8  080000d8	j	L24_LF2
  729  000016dc  54000000	nop; delay slot nop
  730  000016e0  08000028	j	L30_LF2
  731  000016e4  54000000	nop; delay slot nop
  732  000016e8          	L29_LF2:
  733  000016e8  8fc10000	lw	r1,(r30)
  734  000016ec  8fc20004	lw	r2,4(r30)
  735  000016f0  90210000	lbu	r1,(r1)
  736  000016f4  90420000	lbu	r2,(r2)
  737  000016f8  00220829	sne	r1,r1,r2
  738  000016fc  1020000c	beqz	r1,L30_LF2
  739  00001700  54000000	nop; delay slot nop
  740  00001704  0800003c	j	L26_LF2
  741  00001708  54000000	nop; delay slot nop
  742  0000170c          	L31_LF2:
  743  0000170c          	L30_LF2:
  744  0000170c  8fc20000	lw	r2,(r30)
  745  00001710  20410001	addi	r1,r2,#1
  746  00001714  00011020	add	r2,r0,r1
  747  00001718  afc20000	sw	(r30),r2
  748  0000171c  8fc20004	lw	r2,4(r30)
  749  00001720  20410001	addi	r1,r2,#1
  750  00001724  00011020	add	r2,r0,r1
  751  00001728  afc20004	sw	4(r30),r2
  752  0000172c          	L27_LF2:
  753  0000172c  8fc2fff4	lw	r2,-12(r30)
  754  00001730  20410001	addi	r1,r2,#1
  755  00001734  00011020	add	r2,r0,r1
  756  00001738  afc2fff4	sw	-12(r30),r2
  757  0000173c  0bffff64	j	L25_LF2
  758  00001740  54000000	nop; delay slot nop
  759  00001744          	L26_LF2:
  760  00001744  8fc1fff4	lw	r1,-12(r30)
  761  00001748  8fc20008	lw	r2,8(r30)
  762  0000174c  00220828	seq	r1,r1,r2
  763  00001750  10200018	beqz	r1,L32_LF2
  764  00001754  54000000	nop; delay slot nop
  765  00001758  20010000	addi	r1,r0,#0
  766  0000175c  08000054	j	L24_LF2
  767  00001760  54000000	nop; delay slot nop
  768  00001764  0800004c	j	L33_LF2
  769  00001768  54000000	nop; delay slot nop
  770  0000176c          	L32_LF2:
  771  0000176c  8fc20000	lw	r2,(r30)
  772  00001770  90410000	lbu	r1,(r2)
  773  00001774  8fc20004	lw	r2,4(r30)
  774  00001778  90430000	lbu	r3,(r2)
  775  0000177c  00230822	sub	r1,r1,r3
  776  00001780  74220000	sgei	r2,r1,#0
  777  00001784  10400020	beqz	r2,L34_LF2
  778  00001788  54000000	nop; delay slot nop
  779  0000178c  8fc10000	lw	r1,(r30)
  780  00001790  8fc20004	lw	r2,4(r30)
  781  00001794  90210000	lbu	r1,(r1)
  782  00001798  90420000	lbu	r2,(r2)
  783  0000179c  00220829	sne	r1,r1,r2
  784  000017a0  08000008	j	L35_LF2
  785  000017a4  54000000	nop; delay slot nop
  786  000017a8          	L34_LF2:
  787  000017a8  2001ffff	addi	r1,r0,#-1
  788  000017ac          	L35_LF2:
  789  000017ac  08000004	j	L24_LF2
  790  000017b0  54000000	nop; delay slot nop
  791  000017b4          	L33_LF2:
  792  000017b4          	L24_LF2:
  793  000017b4  8fa20000	lw	r2,0(r29)
  794  000017b8  8fa30004	lw	r3,4(r29)
  795  000017bc  8fdffff8	lw	r31,-8(r30)
  796  000017c0  001ee820	add	r29,r0,r30
  797  000017c4  8fdefffc	lw	r30,-4(r30)
  798  000017c8  4be00000	jr	r31
  799  000017cc  54000000	nop
  800  000017d0          	.endproc _dstrncmp
  801  000017d0          	.align 2
  802  000017d0          	.proc _dstrlen
  803  000017d0          	.global _dstrlen
  804  000017d0          	_dstrlen:
  805                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  806  000017d0  afbefffc	sw	-4(r29),r30; push fp
  807  000017d4  001df020	add	r30,r0,r29; fp = sp
  808  000017d8  afbffff8	sw	-8(r29),r31; push ret addr
  809  000017dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  810  000017e0  afa20000	sw	0(r29),r2
  811  000017e4  20010000	addi	r1,r0,#0
  812  000017e8  afc1fff4	sw	-12(r30),r1
  813  000017ec          	L37_LF2:
  814  000017ec  8fc10000	lw	r1,(r30)
  815  000017f0  20220001	addi	r2,r1,#1
  816  000017f4  afc20000	sw	(r30),r2
  817  000017f8  90210000	lbu	r1,(r1)
  818  000017fc  64220000	snei	r2,r1,#0
  819  00001800  1440000c	bnez	r2,L39_LF2
  820  00001804  54000000	nop; delay slot nop
  821  00001808  0800001c	j	L38_LF2
  822  0000180c  54000000	nop; delay slot nop
  823  00001810          	L39_LF2:
  824  00001810  8fc2fff4	lw	r2,-12(r30)
  825  00001814  20410001	addi	r1,r2,#1
  826  00001818  00011020	add	r2,r0,r1
  827  0000181c  afc2fff4	sw	-12(r30),r2
  828  00001820  0bffffc8	j	L37_LF2
  829  00001824  54000000	nop; delay slot nop
  830  00001828          	L38_LF2:
  831  00001828  8fc1fff4	lw	r1,-12(r30)
  832  0000182c  08000004	j	L36_LF2
  833  00001830  54000000	nop; delay slot nop
  834  00001834          	L36_LF2:
  835  00001834  8fa20000	lw	r2,0(r29)
  836  00001838  8fdffff8	lw	r31,-8(r30)
  837  0000183c  001ee820	add	r29,r0,r30
  838  00001840  8fdefffc	lw	r30,-4(r30)
  839  00001844  4be00000	jr	r31
  840  00001848  54000000	nop
  841  0000184c          	.endproc _dstrlen
  842  0000184c          	.align 2
  843  0000184c          	.proc _dstrstr
  844  0000184c          	.global _dstrstr
  845  0000184c          	_dstrstr:
  846                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  847  0000184c  afbefffc	sw	-4(r29),r30; push fp
  848  00001850  001df020	add	r30,r0,r29; fp = sp
  849  00001854  afbffff8	sw	-8(r29),r31; push ret addr
  850  00001858  2fbd0018	subui	r29,r29,#24; alloc local storage
  851  0000185c  afa20000	sw	0(r29),r2
  852  00001860  23bdfff8	addi	r29,r29,#-8
  853  00001864  001d0820	add	r1,r0,r29
  854  00001868  8fc20004	lw	r2,4(r30)
  855  0000186c  ac220000	sw	(r1),r2
  856  00001870  0fffff5c	jal	_dstrlen
  857  00001874  54000000	nop; delay slot nop
  858  00001878  23bd0008	addi	r29,r29,#8
  859  0000187c  afc1fff4	sw	-12(r30),r1
  860  00001880          	L41_LF2:
  861  00001880  8fc10000	lw	r1,(r30)
  862  00001884  90220000	lbu	r2,(r1)
  863  00001888  64410000	snei	r1,r2,#0
  864  0000188c  1420000c	bnez	r1,L43_LF2
  865  00001890  54000000	nop; delay slot nop
  866  00001894  08000060	j	L42_LF2
  867  00001898  54000000	nop; delay slot nop
  868  0000189c          	L43_LF2:
  869  0000189c  23bdfff0	addi	r29,r29,#-16
  870  000018a0  001d0820	add	r1,r0,r29
  871  000018a4  8fc20000	lw	r2,(r30)
  872  000018a8  ac220000	sw	(r1),r2
  873  000018ac  8fc20004	lw	r2,4(r30)
  874  000018b0  ac220004	sw	4(r1),r2
  875  000018b4  8fc2fff4	lw	r2,-12(r30)
  876  000018b8  ac220008	sw	8(r1),r2
  877  000018bc  0ffffdc0	jal	_dstrncmp
  878  000018c0  54000000	nop; delay slot nop
  879  000018c4  23bd0010	addi	r29,r29,#16
  880  000018c8  64220000	snei	r2,r1,#0
  881  000018cc  14400010	bnez	r2,L44_LF2
  882  000018d0  54000000	nop; delay slot nop
  883  000018d4  8fc10000	lw	r1,(r30)
  884  000018d8  08000028	j	L40_LF2
  885  000018dc  54000000	nop; delay slot nop
  886  000018e0          	L44_LF2:
  887  000018e0  8fc20000	lw	r2,(r30)
  888  000018e4  20410001	addi	r1,r2,#1
  889  000018e8  00011020	add	r2,r0,r1
  890  000018ec  afc20000	sw	(r30),r2
  891  000018f0  0bffff8c	j	L41_LF2
  892  000018f4  54000000	nop; delay slot nop
  893  000018f8          	L42_LF2:
  894  000018f8  20010000	addi	r1,r0,#0
  895  000018fc  08000004	j	L40_LF2
  896  00001900  54000000	nop; delay slot nop
  897  00001904          	L40_LF2:
  898  00001904  8fa20000	lw	r2,0(r29)
  899  00001908  8fdffff8	lw	r31,-8(r30)
  900  0000190c  001ee820	add	r29,r0,r30
  901  00001910  8fdefffc	lw	r30,-4(r30)
  902  00001914  4be00000	jr	r31
  903  00001918  54000000	nop
  904  0000191c          	.endproc _dstrstr
  905  0000191c          	.align 2
  906  0000191c          	.proc _dmindex
  907  0000191c          	.global _dmindex
  908  0000191c          	_dmindex:
  909                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  910  0000191c  afbefffc	sw	-4(r29),r30; push fp
  911  00001920  001df020	add	r30,r0,r29; fp = sp
  912  00001924  afbffff8	sw	-8(r29),r31; push ret addr
  913  00001928  2fbd0018	subui	r29,r29,#24; alloc local storage
  914  0000192c  afa20000	sw	0(r29),r2
  915  00001930  54000000	nop
  916  00001934          	L46_LF2:
  917  00001934  8fc10000	lw	r1,(r30)
  918  00001938  90220000	lbu	r2,(r1)
  919  0000193c  64410000	snei	r1,r2,#0
  920  00001940  1420000c	bnez	r1,L48_LF2
  921  00001944  54000000	nop; delay slot nop
  922  00001948  08000070	j	L47_LF2
  923  0000194c  54000000	nop; delay slot nop
  924  00001950          	L48_LF2:
  925  00001950  8fc10004	lw	r1,4(r30)
  926  00001954  afc1fff4	sw	-12(r30),r1
  927  00001958          	L49_LF2:
  928  00001958  8fc1fff4	lw	r1,-12(r30)
  929  0000195c  90220000	lbu	r2,(r1)
  930  00001960  64410000	snei	r1,r2,#0
  931  00001964  1420000c	bnez	r1,L52_LF2
  932  00001968  54000000	nop; delay slot nop
  933  0000196c  08000044	j	L50_LF2
  934  00001970  54000000	nop; delay slot nop
  935  00001974          	L52_LF2:
  936  00001974  8fc10000	lw	r1,(r30)
  937  00001978  8fc2fff4	lw	r2,-12(r30)
  938  0000197c  90210000	lbu	r1,(r1)
  939  00001980  90420000	lbu	r2,(r2)
  940  00001984  00220828	seq	r1,r1,r2
  941  00001988  10200010	beqz	r1,L51_LF2
  942  0000198c  54000000	nop; delay slot nop
  943  00001990  8fc10000	lw	r1,(r30)
  944  00001994  08000030	j	L45_LF2
  945  00001998  54000000	nop; delay slot nop
  946  0000199c          	L53_LF2:
  947  0000199c          	L51_LF2:
  948  0000199c  8fc2fff4	lw	r2,-12(r30)
  949  000019a0  20410001	addi	r1,r2,#1
  950  000019a4  00011020	add	r2,r0,r1
  951  000019a8  afc2fff4	sw	-12(r30),r2
  952  000019ac  0bffffa8	j	L49_LF2
  953  000019b0  54000000	nop; delay slot nop
  954  000019b4          	L50_LF2:
  955  000019b4  0bffff7c	j	L46_LF2
  956  000019b8  54000000	nop; delay slot nop
  957  000019bc          	L47_LF2:
  958  000019bc  20010000	addi	r1,r0,#0
  959  000019c0  08000004	j	L45_LF2
  960  000019c4  54000000	nop; delay slot nop
  961  000019c8          	L45_LF2:
  962  000019c8  8fa20000	lw	r2,0(r29)
  963  000019cc  8fdffff8	lw	r31,-8(r30)
  964  000019d0  001ee820	add	r29,r0,r30
  965  000019d4  8fdefffc	lw	r30,-4(r30)
  966  000019d8  4be00000	jr	r31
  967  000019dc  54000000	nop
  968  000019e0          	.endproc _dmindex
  969  000019e0          	.align 2
  970  000019e0          	.proc _dindex
  971  000019e0          	.global _dindex
  972  000019e0          	_dindex:
  973                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  974  000019e0  afbefffc	sw	-4(r29),r30; push fp
  975  000019e4  001df020	add	r30,r0,r29; fp = sp
  976  000019e8  afbffff8	sw	-8(r29),r31; push ret addr
  977  000019ec  2fbd0010	subui	r29,r29,#16; alloc local storage
  978  000019f0  afa20000	sw	0(r29),r2
  979  000019f4  54000000	nop
  980  000019f8          	L55_LF2:
  981  000019f8  8fc10000	lw	r1,(r30)
  982  000019fc  90220000	lbu	r2,(r1)
  983  00001a00  64410000	snei	r1,r2,#0
  984  00001a04  1420000c	bnez	r1,L57_LF2
  985  00001a08  54000000	nop; delay slot nop
  986  00001a0c  08000040	j	L56_LF2
  987  00001a10  54000000	nop; delay slot nop
  988  00001a14          	L57_LF2:
  989  00001a14  8fc10000	lw	r1,(r30)
  990  00001a18  90220000	lbu	r2,(r1)
  991  00001a1c  8fc10004	lw	r1,4(r30)
  992  00001a20  00411028	seq	r2,r2,r1
  993  00001a24  10400010	beqz	r2,L58_LF2
  994  00001a28  54000000	nop; delay slot nop
  995  00001a2c  8fc10000	lw	r1,(r30)
  996  00001a30  08000028	j	L54_LF2
  997  00001a34  54000000	nop; delay slot nop
  998  00001a38          	L58_LF2:
  999  00001a38  8fc20000	lw	r2,(r30)
 1000  00001a3c  20410001	addi	r1,r2,#1
 1001  00001a40  00011020	add	r2,r0,r1
 1002  00001a44  afc20000	sw	(r30),r2
 1003  00001a48  0bffffac	j	L55_LF2
 1004  00001a4c  54000000	nop; delay slot nop
 1005  00001a50          	L56_LF2:
 1006  00001a50  20010000	addi	r1,r0,#0
 1007  00001a54  08000004	j	L54_LF2
 1008  00001a58  54000000	nop; delay slot nop
 1009  00001a5c          	L54_LF2:
 1010  00001a5c  8fa20000	lw	r2,0(r29)
 1011  00001a60  8fdffff8	lw	r31,-8(r30)
 1012  00001a64  001ee820	add	r29,r0,r30
 1013  00001a68  8fdefffc	lw	r30,-4(r30)
 1014  00001a6c  4be00000	jr	r31
 1015  00001a70  54000000	nop
 1016  00001a74          	.endproc _dindex
 1017  00001a74          	.align 2
 1018  00001a74          	.proc _ditoa
 1019  00001a74          	.global _ditoa
 1020  00001a74          	_ditoa:
 1021                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1022  00001a74  afbefffc	sw	-4(r29),r30; push fp
 1023  00001a78  001df020	add	r30,r0,r29; fp = sp
 1024  00001a7c  afbffff8	sw	-8(r29),r31; push ret addr
 1025  00001a80  2fbd0018	subui	r29,r29,#24; alloc local storage
 1026  00001a84  afa20000	sw	0(r29),r2
 1027  00001a88  afa30004	sw	4(r29),r3
 1028  00001a8c  8fc10000	lw	r1,(r30)
 1029  00001a90  68220000	slti	r2,r1,#0
 1030  00001a94  1040002c	beqz	r2,L60_LF2
 1031  00001a98  54000000	nop; delay slot nop
 1032  00001a9c  8fc10004	lw	r1,4(r30)
 1033  00001aa0  20220001	addi	r2,r1,#1
 1034  00001aa4  afc20004	sw	4(r30),r2
 1035  00001aa8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1036  00001aac  a0220000	sb	(r1),r2
 1037  00001ab0  8fc10000	lw	r1,(r30)
 1038  00001ab4  00011022	sub	r2,r0,r1
 1039  00001ab8  afc20000	sw	(r30),r2
 1040  00001abc  08000118	j	L61_LF2
 1041  00001ac0  54000000	nop; delay slot nop
 1042  00001ac4          	L60_LF2:
 1043  00001ac4  8fc10000	lw	r1,(r30)
 1044  00001ac8  64220000	snei	r2,r1,#0
 1045  00001acc  14400020	bnez	r2,L62_LF2
 1046  00001ad0  54000000	nop; delay slot nop
 1047  00001ad4  8fc10004	lw	r1,4(r30)
 1048  00001ad8  20220001	addi	r2,r1,#1
 1049  00001adc  afc20004	sw	4(r30),r2
 1050  00001ae0  20020030	addi	r2,r0,(#0x30)&0xff
 1051  00001ae4  a0220000	sb	(r1),r2
 1052  00001ae8  080000ec	j	L61_LF2
 1053  00001aec  54000000	nop; delay slot nop
 1054  00001af0          	L62_LF2:
 1055  00001af0  20010001	addi	r1,r0,#1
 1056  00001af4  afc1fff4	sw	-12(r30),r1
 1057  00001af8          	L64_LF2:
 1058  00001af8  8fc1fff4	lw	r1,-12(r30)
 1059  00001afc  8fc20000	lw	r2,(r30)
 1060  00001b00  0022082c	sle	r1,r1,r2
 1061  00001b04  1420000c	bnez	r1,L66_LF2
 1062  00001b08  54000000	nop; delay slot nop
 1063  00001b0c  08000024	j	L65_LF2
 1064  00001b10  54000000	nop; delay slot nop
 1065  00001b14          	L67_LF2:
 1066  00001b14          	L66_LF2:
 1067  00001b14  8fc1fff4	lw	r1,-12(r30)
 1068  00001b18  00011820	add	r3,r0,r1
 1069  00001b1c  50620002	slli	r2,r3,#0x2
 1070  00001b20  00411020	add	r2,r2,r1
 1071  00001b24  50410001	slli	r1,r2,#0x1
 1072  00001b28  afc1fff4	sw	-12(r30),r1
 1073  00001b2c  0bffffc8	j	L64_LF2
 1074  00001b30  54000000	nop; delay slot nop
 1075  00001b34          	L65_LF2:
 1076  00001b34  54000000	nop
 1077  00001b38          	L68_LF2:
 1078  00001b38  8fc1fff4	lw	r1,-12(r30)
 1079  00001b3c  2002000a	addi	r2,r0,#10
 1080  00001b40  00200035	movi2fp	f0,r1
 1081  00001b44  00400835	movi2fp	f1,r2
 1082  00001b48  0401000f	div	f0,f0,f1
 1083  00001b4c  00000834	movfp2i	r1,f0
 1084  00001b50  afc1fff4	sw	-12(r30),r1
 1085  00001b54  8fc10004	lw	r1,4(r30)
 1086  00001b58  20220001	addi	r2,r1,#1
 1087  00001b5c  afc20004	sw	4(r30),r2
 1088  00001b60  8fc20000	lw	r2,(r30)
 1089  00001b64  8fc3fff4	lw	r3,-12(r30)
 1090  00001b68  00400035	movi2fp	f0,r2
 1091  00001b6c  00600835	movi2fp	f1,r3
 1092  00001b70  0401000f	div	f0,f0,f1
 1093  00001b74  00001034	movfp2i	r2,f0
 1094  00001b78  00021820	add	r3,r0,r2
 1095  00001b7c  20620030	addi	r2,r3,#48
 1096  00001b80  a0220000	sb	(r1),r2
 1097  00001b84  8fc10000	lw	r1,(r30)
 1098  00001b88  8fc3fff4	lw	r3,-12(r30)
 1099  00001b8c  00200035	movi2fp	f0,r1
 1100  00001b90  00600835	movi2fp	f1,r3
 1101  00001b94  0401000f	div	f0,f0,f1
 1102  00001b98  00001034	movfp2i	r2,f0
 1103  00001b9c  8fc3fff4	lw	r3,-12(r30)
 1104  00001ba0  00400035	movi2fp	f0,r2
 1105  00001ba4  00600835	movi2fp	f1,r3
 1106  00001ba8  0401000e	mult	f0,f0,f1
 1107  00001bac  00001034	movfp2i	r2,f0
 1108  00001bb0  00220822	sub	r1,r1,r2
 1109  00001bb4  afc10000	sw	(r30),r1
 1110  00001bb8          	L70_LF2:
 1111  00001bb8  8fc1fff4	lw	r1,-12(r30)
 1112  00001bbc  6c220001	sgti	r2,r1,#1
 1113  00001bc0  1440000c	bnez	r2,L71_LF2
 1114  00001bc4  54000000	nop; delay slot nop
 1115  00001bc8  0800000c	j	L61_LF2
 1116  00001bcc  54000000	nop; delay slot nop
 1117  00001bd0          	L71_LF2:
 1118  00001bd0  0bffff64	j	L68_LF2
 1119  00001bd4  54000000	nop; delay slot nop
 1120  00001bd8          	L69_LF2:
 1121  00001bd8          	L63_LF2:
 1122  00001bd8          	L61_LF2:
 1123  00001bd8  8fc10004	lw	r1,4(r30)
 1124  00001bdc  20020000	addi	r2,r0,(#0x0)&0xff
 1125  00001be0  a0220000	sb	(r1),r2
 1126  00001be4          	L59_LF2:
 1127  00001be4  8fa20000	lw	r2,0(r29)
 1128  00001be8  8fa30004	lw	r3,4(r29)
 1129  00001bec  8fdffff8	lw	r31,-8(r30)
 1130  00001bf0  001ee820	add	r29,r0,r30
 1131  00001bf4  8fdefffc	lw	r30,-4(r30)
 1132  00001bf8  4be00000	jr	r31
 1133  00001bfc  54000000	nop
 1134  00001c00          	.endproc _ditoa
 1135  00001c00          	.align 2
 1136  00001c00          	.proc _dstrtol
 1137  00001c00          	.global _dstrtol
 1138  00001c00          	_dstrtol:
 1139                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1140  00001c00  afbefffc	sw	-4(r29),r30; push fp
 1141  00001c04  001df020	add	r30,r0,r29; fp = sp
 1142  00001c08  afbffff8	sw	-8(r29),r31; push ret addr
 1143  00001c0c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1144  00001c10  afa20000	sw	0(r29),r2
 1145  00001c14  20010000	addi	r1,r0,#0
 1146  00001c18  afc1fff4	sw	-12(r30),r1
 1147  00001c1c          	L73_LF2:
 1148  00001c1c  8fc10000	lw	r1,(r30)
 1149  00001c20  90220000	lbu	r2,(r1)
 1150  00001c24  60410020	seqi	r1,r2,#32
 1151  00001c28  14200034	bnez	r1,L75_LF2
 1152  00001c2c  54000000	nop; delay slot nop
 1153  00001c30  8fc10000	lw	r1,(r30)
 1154  00001c34  90220000	lbu	r2,(r1)
 1155  00001c38  60410009	seqi	r1,r2,#9
 1156  00001c3c  14200020	bnez	r1,L75_LF2
 1157  00001c40  54000000	nop; delay slot nop
 1158  00001c44  8fc10000	lw	r1,(r30)
 1159  00001c48  90220000	lbu	r2,(r1)
 1160  00001c4c  6041000a	seqi	r1,r2,#10
 1161  00001c50  1420000c	bnez	r1,L75_LF2
 1162  00001c54  54000000	nop; delay slot nop
 1163  00001c58  0800001c	j	L74_LF2
 1164  00001c5c  54000000	nop; delay slot nop
 1165  00001c60          	L75_LF2:
 1166  00001c60  8fc20000	lw	r2,(r30)
 1167  00001c64  20410001	addi	r1,r2,#1
 1168  00001c68  00011020	add	r2,r0,r1
 1169  00001c6c  afc20000	sw	(r30),r2
 1170  00001c70  0bffffa8	j	L73_LF2
 1171  00001c74  54000000	nop; delay slot nop
 1172  00001c78          	L74_LF2:
 1173  00001c78  8fc10004	lw	r1,4(r30)
 1174  00001c7c  64220000	snei	r2,r1,#0
 1175  00001c80  10400010	beqz	r2,L76_LF2
 1176  00001c84  54000000	nop; delay slot nop
 1177  00001c88  8fc10004	lw	r1,4(r30)
 1178  00001c8c  8fc20000	lw	r2,(r30)
 1179  00001c90  ac220000	sw	(r1),r2
 1180  00001c94          	L76_LF2:
 1181  00001c94  8fc10000	lw	r1,(r30)
 1182  00001c98  90220000	lbu	r2,(r1)
 1183  00001c9c  64410000	snei	r1,r2,#0
 1184  00001ca0  14200010	bnez	r1,L77_LF2
 1185  00001ca4  54000000	nop; delay slot nop
 1186  00001ca8  8fc1fff4	lw	r1,-12(r30)
 1187  00001cac  08000294	j	L72_LF2
 1188  00001cb0  54000000	nop; delay slot nop
 1189  00001cb4          	L77_LF2:
 1190  00001cb4  8fc10000	lw	r1,(r30)
 1191  00001cb8  90220000	lbu	r2,(r1)
 1192  00001cbc  6041002d	seqi	r1,r2,#45
 1193  00001cc0  10200024	beqz	r1,L78_LF2
 1194  00001cc4  54000000	nop; delay slot nop
 1195  00001cc8  2001ffff	addi	r1,r0,#-1
 1196  00001ccc  afc1ffec	sw	-20(r30),r1
 1197  00001cd0  8fc20000	lw	r2,(r30)
 1198  00001cd4  20410001	addi	r1,r2,#1
 1199  00001cd8  00011020	add	r2,r0,r1
 1200  00001cdc  afc20000	sw	(r30),r2
 1201  00001ce0  0800000c	j	L79_LF2
 1202  00001ce4  54000000	nop; delay slot nop
 1203  00001ce8          	L78_LF2:
 1204  00001ce8  20010001	addi	r1,r0,#1
 1205  00001cec  afc1ffec	sw	-20(r30),r1
 1206  00001cf0          	L79_LF2:
 1207  00001cf0  8fc10008	lw	r1,8(r30)
 1208  00001cf4  64220000	snei	r2,r1,#0
 1209  00001cf8  14400090	bnez	r2,L80_LF2
 1210  00001cfc  54000000	nop; delay slot nop
 1211  00001d00  8fc10000	lw	r1,(r30)
 1212  00001d04  90220000	lbu	r2,(r1)
 1213  00001d08  60410030	seqi	r1,r2,#48
 1214  00001d0c  10200074	beqz	r1,L81_LF2
 1215  00001d10  54000000	nop; delay slot nop
 1216  00001d14  8fc20000	lw	r2,(r30)
 1217  00001d18  20410001	addi	r1,r2,#1
 1218  00001d1c  00011020	add	r2,r0,r1
 1219  00001d20  afc20000	sw	(r30),r2
 1220  00001d24  8fc10000	lw	r1,(r30)
 1221  00001d28  90220000	lbu	r2,(r1)
 1222  00001d2c  60410078	seqi	r1,r2,#120
 1223  00001d30  14200020	bnez	r1,L83_LF2
 1224  00001d34  54000000	nop; delay slot nop
 1225  00001d38  8fc10000	lw	r1,(r30)
 1226  00001d3c  90220000	lbu	r2,(r1)
 1227  00001d40  60410058	seqi	r1,r2,#88
 1228  00001d44  1420000c	bnez	r1,L83_LF2
 1229  00001d48  54000000	nop; delay slot nop
 1230  00001d4c  08000024	j	L82_LF2
 1231  00001d50  54000000	nop; delay slot nop
 1232  00001d54          	L83_LF2:
 1233  00001d54  20010010	addi	r1,r0,#16
 1234  00001d58  afc10008	sw	8(r30),r1
 1235  00001d5c  8fc20000	lw	r2,(r30)
 1236  00001d60  20410001	addi	r1,r2,#1
 1237  00001d64  00011020	add	r2,r0,r1
 1238  00001d68  afc20000	sw	(r30),r2
 1239  00001d6c  0800000c	j	L84_LF2
 1240  00001d70  54000000	nop; delay slot nop
 1241  00001d74          	L82_LF2:
 1242  00001d74  20010008	addi	r1,r0,#8
 1243  00001d78  afc10008	sw	8(r30),r1
 1244  00001d7c          	L84_LF2:
 1245  00001d7c  0800000c	j	L80_LF2
 1246  00001d80  54000000	nop; delay slot nop
 1247  00001d84          	L81_LF2:
 1248  00001d84  2001000a	addi	r1,r0,#10
 1249  00001d88  afc10008	sw	8(r30),r1
 1250  00001d8c          	L85_LF2:
 1251  00001d8c          	L80_LF2:
 1252  00001d8c  8fc10008	lw	r1,8(r30)
 1253  00001d90  70220000	slei	r2,r1,#0
 1254  00001d94  1440001c	bnez	r2,L87_LF2
 1255  00001d98  54000000	nop; delay slot nop
 1256  00001d9c  8fc10008	lw	r1,8(r30)
 1257  00001da0  6c220010	sgti	r2,r1,#16
 1258  00001da4  1440000c	bnez	r2,L87_LF2
 1259  00001da8  54000000	nop; delay slot nop
 1260  00001dac  08000010	j	L86_LF2
 1261  00001db0  54000000	nop; delay slot nop
 1262  00001db4          	L87_LF2:
 1263  00001db4  8fc1fff4	lw	r1,-12(r30)
 1264  00001db8  08000188	j	L72_LF2
 1265  00001dbc  54000000	nop; delay slot nop
 1266  00001dc0          	L86_LF2:
 1267  00001dc0  54000000	nop
 1268  00001dc4          	L88_LF2:
 1269  00001dc4  8fc10000	lw	r1,(r30)
 1270  00001dc8  90220000	lbu	r2,(r1)
 1271  00001dcc  6c41002f	sgtui	r1,r2,#47
 1272  00001dd0  10200030	beqz	r1,L91_LF2
 1273  00001dd4  54000000	nop; delay slot nop
 1274  00001dd8  8fc10000	lw	r1,(r30)
 1275  00001ddc  90220000	lbu	r2,(r1)
 1276  00001de0  70410039	sleui	r1,r2,#57
 1277  00001de4  1020001c	beqz	r1,L91_LF2
 1278  00001de8  54000000	nop; delay slot nop
 1279  00001dec  8fc10000	lw	r1,(r30)
 1280  00001df0  90220000	lbu	r2,(r1)
 1281  00001df4  2041ffd0	addi	r1,r2,#-48
 1282  00001df8  afc1fff0	sw	-16(r30),r1
 1283  00001dfc  0800008c	j	L92_LF2
 1284  00001e00  54000000	nop; delay slot nop
 1285  00001e04          	L91_LF2:
 1286  00001e04  8fc10000	lw	r1,(r30)
 1287  00001e08  90220000	lbu	r2,(r1)
 1288  00001e0c  6c410060	sgtui	r1,r2,#96
 1289  00001e10  10200030	beqz	r1,L93_LF2
 1290  00001e14  54000000	nop; delay slot nop
 1291  00001e18  8fc10000	lw	r1,(r30)
 1292  00001e1c  90220000	lbu	r2,(r1)
 1293  00001e20  7041007a	sleui	r1,r2,#122
 1294  00001e24  1020001c	beqz	r1,L93_LF2
 1295  00001e28  54000000	nop; delay slot nop
 1296  00001e2c  8fc10000	lw	r1,(r30)
 1297  00001e30  90220000	lbu	r2,(r1)
 1298  00001e34  2041ffa9	addi	r1,r2,#-87
 1299  00001e38  afc1fff0	sw	-16(r30),r1
 1300  00001e3c  0800004c	j	L92_LF2
 1301  00001e40  54000000	nop; delay slot nop
 1302  00001e44          	L93_LF2:
 1303  00001e44  8fc10000	lw	r1,(r30)
 1304  00001e48  90220000	lbu	r2,(r1)
 1305  00001e4c  6c410040	sgtui	r1,r2,#64
 1306  00001e50  10200030	beqz	r1,L95_LF2
 1307  00001e54  54000000	nop; delay slot nop
 1308  00001e58  8fc10000	lw	r1,(r30)
 1309  00001e5c  90220000	lbu	r2,(r1)
 1310  00001e60  7041005a	sleui	r1,r2,#90
 1311  00001e64  1020001c	beqz	r1,L95_LF2
 1312  00001e68  54000000	nop; delay slot nop
 1313  00001e6c  8fc10000	lw	r1,(r30)
 1314  00001e70  90220000	lbu	r2,(r1)
 1315  00001e74  2041ffc9	addi	r1,r2,#-55
 1316  00001e78  afc1fff0	sw	-16(r30),r1
 1317  00001e7c  0800000c	j	L92_LF2
 1318  00001e80  54000000	nop; delay slot nop
 1319  00001e84          	L95_LF2:
 1320  00001e84  200103e8	addi	r1,r0,#1000
 1321  00001e88  afc1fff0	sw	-16(r30),r1
 1322  00001e8c          	L96_LF2:
 1323  00001e8c          	L94_LF2:
 1324  00001e8c          	L92_LF2:
 1325  00001e8c  8fc1fff0	lw	r1,-16(r30)
 1326  00001e90  8fc20008	lw	r2,8(r30)
 1327  00001e94  0022082a	slt	r1,r1,r2
 1328  00001e98  10200040	beqz	r1,L90_LF2
 1329  00001e9c  54000000	nop; delay slot nop
 1330  00001ea0  8fc1fff4	lw	r1,-12(r30)
 1331  00001ea4  8fc20008	lw	r2,8(r30)
 1332  00001ea8  00200035	movi2fp	f0,r1
 1333  00001eac  00400835	movi2fp	f1,r2
 1334  00001eb0  0401000e	mult	f0,f0,f1
 1335  00001eb4  00000834	movfp2i	r1,f0
 1336  00001eb8  afc1fff4	sw	-12(r30),r1
 1337  00001ebc  8fc1fff4	lw	r1,-12(r30)
 1338  00001ec0  8fc2fff0	lw	r2,-16(r30)
 1339  00001ec4  00220820	add	r1,r1,r2
 1340  00001ec8  afc1fff4	sw	-12(r30),r1
 1341  00001ecc  8fc20000	lw	r2,(r30)
 1342  00001ed0  20410001	addi	r1,r2,#1
 1343  00001ed4  00011020	add	r2,r0,r1
 1344  00001ed8  afc20000	sw	(r30),r2
 1345  00001edc          	L97_LF2:
 1346  00001edc          	L90_LF2:
 1347  00001edc  8fc1fff0	lw	r1,-16(r30)
 1348  00001ee0  8fc20008	lw	r2,8(r30)
 1349  00001ee4  0022082a	slt	r1,r1,r2
 1350  00001ee8  1420000c	bnez	r1,L98_LF2
 1351  00001eec  54000000	nop; delay slot nop
 1352  00001ef0  0800000c	j	L89_LF2
 1353  00001ef4  54000000	nop; delay slot nop
 1354  00001ef8          	L98_LF2:
 1355  00001ef8  0bfffec8	j	L88_LF2
 1356  00001efc  54000000	nop; delay slot nop
 1357  00001f00          	L89_LF2:
 1358  00001f00  8fc10004	lw	r1,4(r30)
 1359  00001f04  64220000	snei	r2,r1,#0
 1360  00001f08  10400010	beqz	r2,L99_LF2
 1361  00001f0c  54000000	nop; delay slot nop
 1362  00001f10  8fc10004	lw	r1,4(r30)
 1363  00001f14  8fc20000	lw	r2,(r30)
 1364  00001f18  ac220000	sw	(r1),r2
 1365  00001f1c          	L99_LF2:
 1366  00001f1c  8fc1fff4	lw	r1,-12(r30)
 1367  00001f20  8fc2ffec	lw	r2,-20(r30)
 1368  00001f24  00200035	movi2fp	f0,r1
 1369  00001f28  00400835	movi2fp	f1,r2
 1370  00001f2c  0401000e	mult	f0,f0,f1
 1371  00001f30  00000834	movfp2i	r1,f0
 1372  00001f34  afc1fff4	sw	-12(r30),r1
 1373  00001f38  8fc1fff4	lw	r1,-12(r30)
 1374  00001f3c  08000004	j	L72_LF2
 1375  00001f40  54000000	nop; delay slot nop
 1376  00001f44          	L72_LF2:
 1377  00001f44  8fa20000	lw	r2,0(r29)
 1378  00001f48  8fdffff8	lw	r31,-8(r30)
 1379  00001f4c  001ee820	add	r29,r0,r30
 1380  00001f50  8fdefffc	lw	r30,-4(r30)
 1381  00001f54  4be00000	jr	r31
 1382  00001f58  54000000	nop
 1383  00001f5c          	.endproc _dstrtol
 1384  00001f5c          	.align 2
 1385  00001f5c          	.proc _bcopy
 1386  00001f5c          	.global _bcopy
 1387  00001f5c          	_bcopy:
 1388                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1389  00001f5c  afbefffc	sw	-4(r29),r30; push fp
 1390  00001f60  001df020	add	r30,r0,r29; fp = sp
 1391  00001f64  afbffff8	sw	-8(r29),r31; push ret addr
 1392  00001f68  2fbd0010	subui	r29,r29,#16; alloc local storage
 1393  00001f6c  afa20000	sw	0(r29),r2
 1394  00001f70  afa30004	sw	4(r29),r3
 1395  00001f74  54000000	nop
 1396  00001f78          	L101_LF2:
 1397  00001f78  8fc10008	lw	r1,8(r30)
 1398  00001f7c  2022ffff	addi	r2,r1,#-1
 1399  00001f80  afc20008	sw	8(r30),r2
 1400  00001f84  6c210000	sgti	r1,r1,#0
 1401  00001f88  1420000c	bnez	r1,L103_LF2
 1402  00001f8c  54000000	nop; delay slot nop
 1403  00001f90  0800002c	j	L102_LF2
 1404  00001f94  54000000	nop; delay slot nop
 1405  00001f98          	L103_LF2:
 1406  00001f98  8fc10004	lw	r1,4(r30)
 1407  00001f9c  20220001	addi	r2,r1,#1
 1408  00001fa0  afc20004	sw	4(r30),r2
 1409  00001fa4  8fc20000	lw	r2,(r30)
 1410  00001fa8  20430001	addi	r3,r2,#1
 1411  00001fac  afc30000	sw	(r30),r3
 1412  00001fb0  80420000	lb	r2,(r2)
 1413  00001fb4  a0220000	sb	(r1),r2
 1414  00001fb8  0bffffbc	j	L101_LF2
 1415  00001fbc  54000000	nop; delay slot nop
 1416  00001fc0          	L102_LF2:
 1417  00001fc0          	L100_LF2:
 1418  00001fc0  8fa20000	lw	r2,0(r29)
 1419  00001fc4  8fa30004	lw	r3,4(r29)
 1420  00001fc8  8fdffff8	lw	r31,-8(r30)
 1421  00001fcc  001ee820	add	r29,r0,r30
 1422  00001fd0  8fdefffc	lw	r30,-4(r30)
 1423  00001fd4  4be00000	jr	r31
 1424  00001fd8  54000000	nop
 1425  00001fdc          	.endproc _bcopy
 1426  00001fdc          	.align 2
 1427  00001fdc          	.proc _bzero
 1428  00001fdc          	.global _bzero
 1429  00001fdc          	_bzero:
 1430                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1431  00001fdc  afbefffc	sw	-4(r29),r30; push fp
 1432  00001fe0  001df020	add	r30,r0,r29; fp = sp
 1433  00001fe4  afbffff8	sw	-8(r29),r31; push ret addr
 1434  00001fe8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1435  00001fec  afa20000	sw	0(r29),r2
 1436  00001ff0  54000000	nop
 1437  00001ff4          	L105_LF2:
 1438  00001ff4  8fc10004	lw	r1,4(r30)
 1439  00001ff8  2022ffff	addi	r2,r1,#-1
 1440  00001ffc  afc20004	sw	4(r30),r2
 1441  00002000  6c210000	sgti	r1,r1,#0
 1442  00002004  1420000c	bnez	r1,L107_LF2
 1443  00002008  54000000	nop; delay slot nop
 1444  0000200c  08000020	j	L106_LF2
 1445  00002010  54000000	nop; delay slot nop
 1446  00002014          	L107_LF2:
 1447  00002014  8fc10000	lw	r1,(r30)
 1448  00002018  20220001	addi	r2,r1,#1
 1449  0000201c  afc20000	sw	(r30),r2
 1450  00002020  20020000	addi	r2,r0,(#0x0)&0xff
 1451  00002024  a0220000	sb	(r1),r2
 1452  00002028  0bffffc8	j	L105_LF2
 1453  0000202c  54000000	nop; delay slot nop
 1454  00002030          	L106_LF2:
 1455  00002030          	L104_LF2:
 1456  00002030  8fa20000	lw	r2,0(r29)
 1457  00002034  8fdffff8	lw	r31,-8(r30)
 1458  00002038  001ee820	add	r29,r0,r30
 1459  0000203c  8fdefffc	lw	r30,-4(r30)
 1460  00002040  4be00000	jr	r31
 1461  00002044  54000000	nop
 1462  00002048          	.endproc _bzero
 1463  00002048          	.align 2
 1464  00002048          	.proc _min
 1465  00002048          	.global _min
 1466  00002048          	_min:
 1467                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1468  00002048  afbefffc	sw	-4(r29),r30; push fp
 1469  0000204c  001df020	add	r30,r0,r29; fp = sp
 1470  00002050  afbffff8	sw	-8(r29),r31; push ret addr
 1471  00002054  2fbd0010	subui	r29,r29,#16; alloc local storage
 1472  00002058  afa20000	sw	0(r29),r2
 1473  0000205c  afa30004	sw	4(r29),r3
 1474  00002060  8fc10000	lw	r1,(r30)
 1475  00002064  8fc20004	lw	r2,4(r30)
 1476  00002068  0022182c	sle	r3,r1,r2
 1477  0000206c  14600008	bnez	r3,L109_LF2
 1478  00002070  54000000	nop; delay slot nop
 1479  00002074  8fc10004	lw	r1,4(r30)
 1480  00002078          	L109_LF2:
 1481  00002078  08000004	j	L108_LF2
 1482  0000207c  54000000	nop; delay slot nop
 1483  00002080          	L108_LF2:
 1484  00002080  8fa20000	lw	r2,0(r29)
 1485  00002084  8fa30004	lw	r3,4(r29)
 1486  00002088  8fdffff8	lw	r31,-8(r30)
 1487  0000208c  001ee820	add	r29,r0,r30
 1488  00002090  8fdefffc	lw	r30,-4(r30)
 1489  00002094  4be00000	jr	r31
 1490  00002098  54000000	nop
 1491  0000209c          	.endproc _min
 1492  0000209c          	.align 2
 1493  0000209c          	.proc _max
 1494  0000209c          	.global _max
 1495  0000209c          	_max:
 1496                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1497  0000209c  afbefffc	sw	-4(r29),r30; push fp
 1498  000020a0  001df020	add	r30,r0,r29; fp = sp
 1499  000020a4  afbffff8	sw	-8(r29),r31; push ret addr
 1500  000020a8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1501  000020ac  afa20000	sw	0(r29),r2
 1502  000020b0  afa30004	sw	4(r29),r3
 1503  000020b4  8fc10000	lw	r1,(r30)
 1504  000020b8  8fc20004	lw	r2,4(r30)
 1505  000020bc  0022182d	sge	r3,r1,r2
 1506  000020c0  14600008	bnez	r3,L111_LF2
 1507  000020c4  54000000	nop; delay slot nop
 1508  000020c8  8fc10004	lw	r1,4(r30)
 1509  000020cc          	L111_LF2:
 1510  000020cc  08000004	j	L110_LF2
 1511  000020d0  54000000	nop; delay slot nop
 1512  000020d4          	L110_LF2:
 1513  000020d4  8fa20000	lw	r2,0(r29)
 1514  000020d8  8fa30004	lw	r3,4(r29)
 1515  000020dc  8fdffff8	lw	r31,-8(r30)
 1516  000020e0  001ee820	add	r29,r0,r30
 1517  000020e4  8fdefffc	lw	r30,-4(r30)
 1518  000020e8  4be00000	jr	r31
 1519  000020ec  54000000	nop
 1520  000020f0          	.endproc _max
 1521                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1522                      ;;;
 1523                      ;;; Most of the traps are called in files from libtraps.
 1526  000020f0          	.align 2
 1527  000020f0          	.proc _exit
 1528  000020f0          	.global _exit
 1529  000020f0          	_exit:
 1530  000020f0  44000300	trap	#0x300
 1531  000020f4  4be00000	jr	r31
 1532  000020f8  54000000	nop
 1533  000020fc          	.endproc _exit
 1535                      ; for the benefit of gcc.
 1536  000020fc          	.proc ___main
 1537  000020fc          	.global ___main
 1538  000020fc          	___main:
 1539  000020fc  4be00000	jr	r31
 1540  00002100  54000000	nop
 1541  00002104          	.endproc ___main
 1542  00002104          	.text
 1543  00002104          	.global _etext
 1544  00002104          	_etext:
 1545  00002104          	.align 3
 1546  00002108          	.data
 1547  000030c5          	.global _edata
 1548  000030c5          	_edata:
