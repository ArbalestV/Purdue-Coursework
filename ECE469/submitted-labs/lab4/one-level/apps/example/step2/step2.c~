#include "usertraps.h"
#include "misc.h"
//accessing memory beyond the max virtual address
void main (int argc, char *argv[])
{
  sem_t s_procs_completed; // Semaphore to signal the original process that we're done
  int * fault_address;

  if (argc != 2) { 
    Printf("Usage: %s <handle_to_procs_completed_semaphore>\n"); 
    Exit();
  }
  
  // Convert the command-line strings into integers for use as handles
  s_procs_completed = dstrtol(argv[1], NULL, 10);
  
  Printf("\nThe Test Program 2 - accessing address outside max virtual address..");
  // Signal the semaphore to tell the original process that we're done - this is done first because it will exit since it will access outside max available virtual address
  if(sem_signal(s_procs_completed) != SYNC_SUCCESS) {
    Printf("hello_world (%d): Bad semaphore s_procs_completed (%d)!\n", getpid(), s_procs_completed);
    Exit();
  }
  fault_Address = (int *) (MEM_MAX_VIRTUAL_ADDRESS + 4000);

  Printf("\nAccessing out of bounds Memory Location in decimal representation : %d \n", fault_address);
  *fault_address = 0xABCD1100;

  Printf("\nEnd of The Test Program 2 - accessing address outside max virtual address..");
}
