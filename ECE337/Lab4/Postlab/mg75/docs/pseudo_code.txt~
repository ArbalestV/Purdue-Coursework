idle: if (data_ready = 0) goto idle; //wait until data_ready = 1
store: if (data_ready = 0) goto eidle; //go to error state
       reg[5] = data; //store data in register 5
       err = 0;//reset error
sort1: reg[1] = reg[2];//1 <- 2
sort2: reg[2] = reg[3];//2 <- 3
sort3: reg[3] = reg[4]; //3 <- 4
sort4: reg[4] = reg[5];//4 <- 5
add:   reg[6] = reg[1] + reg[2];
       reg[7] = reg[3] + reg[4];
       reg[0] = reg[6] + reg[7]; //add data, store result
       if (V) goto eidle; //on overflow, err condition
          goto idle;
eidle: err = 1;//set error flag
       if (data_ready = 1) goto store;//wait until data_ready = 1
       if (data_ready = 0) goto eidle; 	 
