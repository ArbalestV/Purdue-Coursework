# encoding: utf-8
# module lxml.etree
# from /usr/lib64/python2.6/site-packages/lxml/etree.so
# by generator 1.136
"""
The ``lxml.etree`` module implements the extended ElementTree API
for XML.
"""

# imports
import __builtin__ as __builtins__ # <module '__builtin__' (built-in)>

from object import object

class XSLTExtension(object):
    """ Base class of an XSLT extension element. """
    def apply_templates(self, context, node): # real signature unknown; restored from __doc__
        """
        apply_templates(self, context, node)
        
                Call this method to retrieve the result of applying templates
                to an element.
        
                The return value is a list of elements or text strings that
                were generated by the XSLT processor.
        """
        pass

    def execute(self, context, self_node, input_node, output_parent): # real signature unknown; restored from __doc__
        """
        execute(self, context, self_node, input_node, output_parent)
                Execute this extension element.
        
                Subclasses must override this method.  They may append
                elements to the `output_parent` element here, or set its text
                content.  To this end, the `input_node` provides read-only
                access to the current node in the input document, and the
                `self_node` points to the extension element in the stylesheet.
        """
        pass

    def __init__(self, *args, **kwargs): # real signature unknown
        pass

    @staticmethod # known case of __new__
    def __new__(S, *more): # real signature unknown; restored from __doc__
        """ T.__new__(S, ...) -> a new object with type S, a subtype of T """
        pass


